---
title: "Untitled"
draft: true
---

```{r libs}
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(forcats)
library(sidrar)
```

```{r showtext}
library(showtext)
showtext_auto()

font_add_google("Roboto Condensed", family = "Roboto Cond")
font_add_google("Roboto Mono", family = "Roboto Mono")
```

```{r ggplot2-theme}
theme_vini <- theme_minimal() +
  theme(
    text = element_text(family = "Roboto Condensed", color = "gray10"),
    plot.title = element_text(size = 12),
    plot.subtitle = element_text(color = "gray20", size = 8),
    plot.caption = element_text(color = "gray20", size = 6),
    axis.text = element_text(family = "Roboto Mono", color = "gray20", size = 8),
    legend.text = element_text(family = "Roboto Mono", color = "gray20", size = 6),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "#ffffff", color = "#ffffff"),
    plot.background = element_rect(fill = "#ffffff", color = "#ffffff"),
    legend.position = "top",
    legend.key.width = unit(2, "cm")
  )
```

```{r import-data}
nasc <- get_sidra(
  2612,
  variable = 218,
  period = "2003-2021",
  classific = "c235",
  category = list("all"),
  geo = "Brazil"
  )
```

```{r clean-data}
tbl_birth = nasc |> 
  as_tibble() %>%
  janitor::clean_names() |> 
  select(
    year = ano,
    month = mes_do_nascimento,
    birth = valor
  ) %>%
  filter(!(month %in% c("Total", "Ignorado"))) %>%
  mutate(
    date = paste(year, month, "01", sep = "-"),
    date = parse_date(date, format = "%Y-%B-%d", locale = locale("pt")),
    month_abb = lubridate::month(date, label = TRUE, locale = "pt_BR"),
    month_abb = fct_rev(month_abb),
    year = as.numeric(year)
  )

tbl_birth <- tbl_birth %>%
  mutate(
    trend = RcppRoll::roll_mean(birth, n = 12, fill = NA),
    trend = RcppRoll::roll_mean(trend, n = 2, fill = NA)
    )
```

```{r heatmap-abs}
p_heatmap_abs <- 
  ggplot(tbl_birth, aes(x = year, y = month_abb, fill = birth)) + 
  geom_tile(color = "gray80", linewidth = 0.1) +
  scale_x_continuous(breaks = 2003:2021, position = "top", expand = c(0, 0)) +
  scale_fill_viridis_c(
    name = "",
    breaks = seq(200, 275, 15) * 1000,
    labels = scales::label_number(big.mark = "."),
    limits = c(195000, 280000)
  ) +
  labs(
    x = NULL,
    y = NULL,
    title = "Arianos e taurinos formam maioria dos nascidos",
    subtitle = "Número total de nascidos vivos no Brasil entre 2003 e 2021 a cada mês.",
    caption = "Source: Estatísticas do Registro Civil (IBGE). @viniciusoike") +
  theme_vini

p_heatmap_abs
```

```{r heatmap-rel}
p_heatmap_rel <- 
  tbl_birth |> 
  group_by(year) |> 
  mutate(share = birth / sum(birth)) %>%
  ggplot(aes(x = year, y = month_abb, fill = share)) + 
  geom_tile(color = "gray80", linewidth = 0.1) +
  scale_x_continuous(breaks = 2003:2021, position = "top", expand = c(0, 0)) +
  scale_fill_viridis_c(
    name = "Percentual\nnascidos\nno ano (%)",
    labels = scales::label_percent(decimal.mark = ".")
  ) +
  labs(
    x = NULL,
    y = NULL,
    title = "Arianos e taurinos formam maioria dos nascidos",
    subtitle = "Número de nascidos vivos no Brasil entre 2003 e 2021 a cada mês.",
    caption = "Source: Estatísticas do Registro Civil (IBGE). @viniciusoike") +
  theme_vini +
  theme(
    legend.title = element_text(
      family = "Roboto Mono",
      size = 8,
      vjust = 1,
      hjust = 0.5)
    )

p_heatmap_rel
```

```{r lineplot-trend}
p_lineplot <- 
  ggplot(tbl_birth, aes(x = date)) +
  geom_line(aes(y = birth), alpha = 0.6, linewidth = 1, color = "#26828EFF") +
  geom_line(aes(y = trend), linewidth = 1, color = "#26828EFF") +
  scale_x_date(
    breaks = c(
      as.Date("2003-01-01"),
      seq(as.Date("2005-01-01"), as.Date("2020-01-01"), by = "2 year"),
      as.Date("2021-01-01")
      ),
    date_labels = "%Y"
    ) +
  scale_y_continuous(labels = scales::label_number(big.mark = ".")) +
  labs(title = "Nascidos vivos no Brasil", x = NULL, y = "Pessoas") +
  theme_vini +
  theme(
    panel.grid.major = element_line(color = "gray90")
  )

p_lineplot
```

```{r}
plots <- ls(pattern = "^p_")
name_plot <- paste0(gsub("^p_", "", plots), ".png")
fld <- here::here("static/plots")

showtext_opts(dpi = 300)
showtext_auto()

for (i in seq_along(plots)) {
  
  cowplot::save_plot(here::here(fld, name_plot[[i]]), get(plots[[i]]))
  
}

```
