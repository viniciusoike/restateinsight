---
title: "Greatest Films of Alltime: another case of recency bias?"
date: "2024-04-17"
categories: ['data-visualization', 'ggplot2', 'movies', 'bias']
description: ""
execute: 
  message: false
  warning: false
  eval: false
draft: true
---

```{r}
# imdb_bfi |> 
#   bind_rows() |> 
#   left_join(dim_title, by = c("name_film" = "primaryTitle", "year" = "startYear")) |> 
#   left_join(ratings, by = "tconst") |> 
#   filter(is.na(averageRating))
# 
# clean_bfi |> 
#   mutate(decade = year - (year %% 10)) |> 
#   ggplot(aes(x = decade)) +
#   geom_bar()
# 
# clean_imdb |> 
#   mutate(decade = year - (year %% 10)) |> 
#   ggplot(aes(x = decade)) +
#   geom_bar()
# 
# ggplot(clean_empire, aes(x = year)) +
#   geom_histogram(bins = 12)
# 
# 
# ggplot(clean_bfi, aes(x = year)) +
#   geom_histogram(bins = 12, color = "white")
# 
# ggplot(clean_imdb, aes(x = year)) +
#   geom_histogram(bins = 15)
# 
# ggplot(clean_variety, aes(x = year)) +
#   geom_histogram(bins = 11, color = "white") +
#   geom_hline(yintercept = 0) +
#   theme_minimal() +
#   theme(
#     panel.grid.minor = element_blank()
#   )
# 
# hist(clean_variety$year, breaks = "fd")
# 
# ggplot(clean_afi, aes(x = year)) +
#   geom_histogram(bins = 15)
# 
# ggplot(clean_empire, aes(x = year)) +
#   geom_histogram(bins = 15)
# 
# ggplot(clean_ebert, aes(x = year)) +
#   geom_histogram(bins = 15)
# 
# 
# 
# ggplot(clean_abracine, aes(x = year)) +
#   geom_histogram(bins = 15)
# 
# clean_empire |> 
#   mutate(
#     decade = year - (year %% 10)
#   ) |> 
#   ggplot(aes(x = decade, y = averageRating, group = decade)) +
#   geom_violin()
# 
# 
# clean_empire |> 
#   mutate(
#     decade = year - (year %% 10)
#   ) |> 
#   ggplot(aes(x = decade, y = averageRating, group = decade)) +
#   geom_count()
# 
# clean_empire |> 
#   filter(averageRating < 7) |> 
#   arrange(averageRating)


# Colors
# imdb = "#deb522"
# variety = "#1a282f", "#546464"
# bfi = "#000000"
# empire = "#ff0000"
# 
# imdb_afi <- imdb_afi[[1]]
# 
# imdb_bfi <- bind_rows(imdb_bfi)
# 
# dat <- list(imdb = clean_imdb, empire = imdb_empire, afi = imdb_afi, bfi = imdb_bfi, variety = imdb_variety, timeout = imdb_timeout)
# 
# dat <- bind_rows(dat, .id = "source")
# 
# dat <- dat |> 
#   mutate(
#     source = factor(
#       source,
#       levels = c("afi", "bfi", "timeout", "variety", "empire", "imdb"),
#       labels = c("AFI", "BFI", "TimeOut", "Variety", "Empire", "IMDB"))
#   )
# 
# highlight_low = dat |> 
#   group_by(source) |> 
#   slice_min(rating, n = 3)
# 
# ggplot(dat, aes(source, rating, color = source)) +
#   geom_jitter(width = 0.4, alpha = 0.75) +
#   ggrepel::geom_text_repel(data = highlight_low, aes(label = name_film), size = 2) +
#   guides(color = "none") +
#   theme_minimal()
# 
# 
# 
# library(ggridges)
# 
# ggplot(dat, aes(year, source, fill = source)) +
#   geom_density_ridges(alpha = 0.5) +
#   scale_x_continuous(limits = c(1900, 2024)) +
#   guides(fill = "none") +
#   theme_minimal()

```
