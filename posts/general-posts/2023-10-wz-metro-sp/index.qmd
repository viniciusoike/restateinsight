---
title: "Weekly Viz - Metro em São Paulo"
date: "2023-10-27"
execute:
  echo: false
  warning: false
  message: false
draft: true
---

```{r setup}
library(ggplot2)
library(dplyr)
library(tidyr)
library(here)
library(ragg)
```

```{r data-import}
metro <- readr::read_csv(
  here("static/data/metro_sp.csv"),
  show_col_types = FALSE
)
```

```{r data-cleaning}
metro_labels <- c(
  "1-Azul" = "azul",
  "2-Verde" = "verde",
  "3-Vermelha" = "vermelha",
  "4-Amarela" = "amarela",
  "5-Lilás" = "lilas",
  "15-Prata" = "prata"
)

metro <- metro |>
  mutate(
    metro_line = factor(
      metro_line,
      levels = metro_labels,
      labels = names(metro_labels)
    )
  )

tbl_metro <- metro |>
  filter(
    variable == "transport",
    metric == "mdu",
    year >= 2019,
    date <= as.Date("2023-06-01")
  )

tbl_metro <- tbl_metro |>
  mutate(
    value = forecast::na.interp(value),
    trend_stl = stl(ts(value, frequency = 12), s.window = 31)$time.series[,
      "trend"
    ],
    trend_ma = RcppRoll::roll_mean(value, 7, fill = NA, align = "center"),
    .by = "metro_line"
  )
```

```{r}
colors <- paletteer::paletteer_d("rcartocolor::BluGrn")

metro_colors <- c(
  "#0153a1",
  "#008061",
  "#ee3f34",
  "#fed408",
  "#7c52a1",
  "#878e91"
)
names(metro_colors) <- metro_labels

plot_caption <- "Source: METRÔ, ViaQuatro, ViaMobilidade | Graphic: @viniciusoike"

theme_series <- theme_minimal(base_family = "Avenir") +
  theme(
    axis.line = element_line(),
    panel.grid.minor = element_blank(),
    plot.title = element_text(
      size = 14,
      family = "Georgia",
      face = "bold"
    ),
    plot.subtitle = element_text(
      size = 10,
      color = "gray40",
      margin = margin(b = 5)
    ),
    plot.margin = margin(8, 5, 8, 5),
    plot.caption = element_text(
      color = "gray70",
      size = 8,
      hjust = 0,
      margin = margin(t = 5)
    )
  )
```

```{r}
metro_total <- metro |>
  filter(
    variable == "transport",
    metric == "total",
    year >= 2019,
    date <= as.Date("2023-06-01")
  ) |>
  summarise(
    total = sum(value, na.rm = TRUE),
    .by = "date"
  )

# Index on average 2019 values
metro_total$trend_stl <- stl(
  ts(metro_total$total, frequency = 12),
  s.window = 31
)$time.series[, "trend"]
```

```{r}
metro_facet <- metro |>
  filter(
    date >= as.Date("2018-01-01"),
    date <= as.Date("2023-06-01"),
    variable == "transport",
    metric %in% c("mdu", "msa", "mdo"),
    metro_line_num != 15,
    !is.na(value)
  )


# Compute 2018 averages for each metro-system and metric
benchmark <- metro_facet |>
  # compute 2018 averages
  filter(year == 2019) |>
  summarise(
    base_avg = mean(value, na.rm = TRUE),
    .by = c("metro_line", "metric")
  )

# Join benchmark back to main data
metro_index <- metro_facet |>
  left_join(benchmark, by = c("metro_line", "metric")) |>
  # Index and smooth values
  mutate(index = (value / base_avg) * 100) |>
  mutate(
    index_smooth = stl(
      ts(index, frequency = 12),
      s.window = "periodic"
    )$time.series[, "trend"],
    .by = c("metro_line", "metric")
  )

metro_index <- metro_index |>
  mutate(
    metric_label = stringr::str_remove(metric_label, "Média dos ")
  )
```

```{r}
line4 <- readr::read_csv(here("static/data/metro_sp_line_4_stations.csv"))

viaquatro <- line4 |>
  # Remove Vila Sônia station and filter dates from 2019 onwards
  filter(
    name_station != "Vila Sônia",
    date >= as.Date("2019-01-01")
  )

viaquatro$name_station <- factor(
  viaquatro$name_station,
  levels = unique(line4$name_station)
)

# Compute 2019 averages for each station
benchmark <- viaquatro |>
  filter(year == 2019) |>
  summarise(base_avg = mean(value), .by = name_station)

# Join benchmark averages back to the main dataset and compute the index
viaquatro_facet <- viaquatro |>
  left_join(benchmark, by = "name_station") |>
  mutate(index = value / base_avg * 100) |>
  mutate(
    index_smooth = stats::stl(
      ts(index, frequency = 12),
      s.window = "periodic"
    )$time.series[, "trend"],
    .by = "name_station"
  )

```

```{r}
ggplot(metro_total, aes(x = date)) +
  geom_point(
    aes(y = total),
    color = "white",
    fill = colors[7],
    shape = 21,
    size = 2,
    alpha = 0.6
  ) +
  geom_line(
    aes(y = trend_stl),
    color = colors[7],
    lwd = 1
  ) +
  scale_y_continuous(
    breaks = seq(25, 150, 25) * 1000,
    labels = scales::label_number(big.mark = ".", scale = 1e-3)
  ) +
  labs(
    title = "Metro Ridership still Down 30% from Pre-Pandemic Levels",
    subtitle = "Total monthly entries (millions) to the São Paulo Metro system (lines 1, 2, 3, 4, 5, and 15).",
    caption = plot_caption,
    x = NULL,
    y = NULL
  ) +
  theme_minimal(base_family = "Avenir") +
  theme(
    panel.grid.minor = element_blank(),
    plot.title = element_text(
      size = 14,
      family = "Georgia",
      face = "bold"
    ),
    plot.subtitle = element_text(
      size = 10,
      color = "gray40",
      margin = margin(b = 5)
    ),
    plot.margin = margin(8, 5, 8, 5),
    plot.caption = element_text(
      color = "gray70",
      size = 8,
      hjust = 0,
      margin = margin(t = 5)
    )
  )
```


```{r}
ggplot(tbl_metro, aes(x = date, y = trend_ma, fill = metro_line)) +
  geom_area(alpha = 0.8) +
  geom_hline(yintercept = 0) +
  scale_x_date(
    date_breaks = "1 year",
    date_labels = "%Y",
    expand = expansion(0)
  ) +
  scale_y_continuous(
    expand = expansion(0),
    labels = scales::label_number(big.mark = ".", scale = 1e-3)
  ) +
  scale_fill_manual(
    name = "",
    values = c("#171796", "#008061", "#ee3f34", "#fed408", "#7c52a1", "gray50")
  ) +
  guides(fill = "none") +
  labs(
    title = "Weekday ridership is down 20% since 2019",
    subtitle = "Average weekday ridership by metro line (millions)",
    x = NULL,
    y = NULL,
    caption = plot_caption
  ) +
  theme_minimal(base_size = 10, base_family = "Helvetica") +
  theme_series
```

```{r}
ggplot(metro_index, aes(date, index_smooth, color = metro_line)) +
  geom_hline(yintercept = 100) +
  geom_line(lwd = 0.75) +
  facet_grid(
    rows = vars(metric_label),
    cols = vars(metro_line)
  ) +
  scale_y_continuous(breaks = seq(20, 120, by = 20)) +
  scale_color_manual(
    values = unname(metro_colors)
  ) +
  guides(color = "none") +
  labs(
    title = "No lines have yet returned to pre-pandemic ridership levels",
    subtitle = "Monthly average ridership index by type of day (2019 = 100), smoothed values.",
    x = NULL,
    y = "Index (2019 = 100)",
    caption = plot_caption
  ) +
  theme_series +
  theme(
    strip.background = element_rect(fill = colors[7]),
    strip.text = element_text(
      color = "white",
      size = 10,
      family = "Helvetica",
      face = "bold"
    ),
    panel.background = element_rect(color = "gray10"),
    plot.title.position = "plot",
    plot.caption.position = "plot"
  )
```

```{r}
ggplot(viaquatro_facet, aes(date, index_smooth)) +
  geom_point(
    aes(y = index),
    color = colors[7],
    alpha = 0.3,
    size = 0.5
  ) +
  geom_line(color = colors[7], size = 0.8) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "gray40") +
  scale_y_continuous(breaks = seq(0, 120, by = 20)) +
  labs(
    title = "",
    subtitle = "",
    x = NULL,
    y = "Index (2019=100)",
    caption = "Source: ViaQuatro | Graphic: @viniciusoike"
  ) +
  facet_wrap(vars(name_station), ncol = 5) +
  theme_series
```
