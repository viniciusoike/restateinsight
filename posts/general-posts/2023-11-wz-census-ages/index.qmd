---
title: "Aging Index in Brazil"
date: "2023-10-31"
categories: ["data-visualization", "ggplot2", "brazil", "census"]
execute: 
  warning: false
  message: false
  eval: false
draft: true
---

```{r}
#| include: false
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  fig.align = "center",
  fig.showtext = TRUE,
  fig.width = 9,
  fig.asp = 0.618,
  out.width = "90%",
  fig.retina = 2,
  fig.dev = "svg",
  dpi = 72
  )
```

```{r}
library(ggplot2)
library(sidrar)
library(dplyr)
library(stringr)
library(tidyr)
library(showtext)
font_add_google("Roboto Mono", "Roboto Mono")
font_add_google("Roboto Condensed", "Roboto Condensed")
showtext_auto()
```

```{r}
# Tabela 200 - População residente, por sexo, situação e grupos de idade
# Tabela 1209 - População, por grupos de idade https://sidra.ibge.gov.br/tabela/1209
cities_age <- readr::read_rds(
  here::here("static/data/census_aging_index_city.rds")
  )
```

```{r}
breaks <- c(0.25, 0.5, 0.75, 1) * 100
labels <- c(
  "Até 25", "25 a 50", "50 a 75", "75 a 100", "100 ou mais"
  )

age_to_color <- Vectorize(function(x) {
  
  breaks <- c(0.25, 0.5, 0.75, 1) * 100
  y <- findInterval(x, breaks)
  
  colors <- c(
    "#440154FF", "#3B528BFF", "#21908CFF", "#5DC863FF", "#FDE725FF"
    )
  
  colors[y + 1]
  
})


library(cowplot)

map_census <- function(year) {
  
  col_name <- glue::glue("age_index_{year}")
  
  sub <- cities_age %>%
    mutate(
      color = age_to_color(.data[[col_name]]),
      color = if_else(is.na(color), "gray50", color)
      )
  
  ggplot(sub) +
    geom_sf(aes(fill = color), lwd = 0.01, color = "gray80") +
    scale_fill_identity() +
    coord_sf(xlim = c(NA, -34.469802)) +
    ggtitle(year) +
    ggthemes::theme_map(base_family = "Roboto Condensed") +
    theme(plot.title = element_text(hjust = 0.5, size = 18))
  
}

m1 <- map_census(1991)
m2 <- map_census(2000)
m3 <- map_census(2010)
m4 <- map_census(2022)

breaks <- c(0.25, 0.5, 0.75, 1) * 100
labels <- c("Até 25", "25 a 50", "50 a 75", "75 a 100", "100 ou mais")

map_legend <- cities_age |> 
  mutate(
    group = factor(findInterval(age_index_2022, breaks))
    ) |> 
  ggplot(aes(fill = group)) +
  geom_sf(color = "gray80") +
  scale_fill_viridis_d(labels = labels, name = "Índice de\nEnvelhecimento")
```

```{r}
fill_legend <- cowplot::get_legend(map_legend)
plot_maps <- plot_grid(m1, m2, m3, m4, nrow = 2, ncol = 2)
plot_compare <- plot_grid(plot_maps, fill_legend, ncol = 2, rel_widths = c(0.9, 0.1))
```


```{r}
map2022 <- cities_age |> 
  mutate(group = factor(findInterval(age_index_2022, breaks))) |> 
  ggplot() +
    geom_sf(aes(fill = group), lwd = 0.01, color = "gray80") +
    scale_fill_viridis_d(
      name = "Índice de\nEnvelhecimento",
      labels = labels
      ) +
    coord_sf(xlim = c(NA, -34.469802)) +
    ggtitle("Índice de Envelhecimento (2022)") +
    ggthemes::theme_map(base_family = "Roboto Condensed") +
    theme(plot.title = element_text(hjust = 0.5, size = 18))
```


```{r}
tbl_cols <- cities_age |> 
  sf::st_drop_geometry() |> 
  mutate(is_old = if_else(age_index_2022 > 100, 1L, 0L)) |> 
  count(abbrev_state, is_old) |> 
  mutate(share = n / sum(n) * 100, .by = "abbrev_state") |> 
  filter(is_old == 1) |> 
  slice_max(share, n = 8) |> 
  mutate(
    abbrev_state = factor(abbrev_state),
    abbrev_state = forcats::fct_reorder(abbrev_state, share),
    label = format(round(share, 1)),
    label = paste0(label, "%")
  ) 
```

```{r}
p_age_index <- ggplot(tbl_cols, aes(x = abbrev_state, y = share)) +
  geom_col(width = 0.5, fill = "#2a9d8f") +
  geom_text(
    aes(x = abbrev_state, y = 0, label = abbrev_state),
    family = "Roboto Mono",
    nudge_x = 0.4,
    size = 4,
    hjust = 0
  ) +
  geom_text(
    aes(x = abbrev_state, y = share, label = label),
    nudge_y = -2.5,
    color = "white",
    family = "Roboto Mono",
    size = 3
  ) +
  scale_y_continuous(
    expand = c(0, 0),
    limits = c(0, 50),
    labels = \(x) paste0(x, "%")
    ) +
  labs(
    title = "Mais idosos do que jovens",
    subtitle = "Percentual de cidades com mais pessoas acima de 65 anos do que pessoas de 14 anos ou menos (2022).",
    x = "",
    y = "Percentual de cidades (%)",
    caption = "Fonte: IBGE (Censo 2022). @viniciusoike"
    ) +
  coord_flip() +
  theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
  theme(
    plot.title = element_text(size = 18),
    panel.grid.minor = element_blank(),
    axis.text.y = element_blank(),
    plot.margin = margin(0.25, 0.5, 0.25, 0.5, "cm"),
    axis.line.x = element_line(),
    axis.ticks.x = element_line(),
    axis.text.x = element_text(size = 12)
  )
```

```{r}
p_age_index
```
