---
title: "Carros e Renda em Sao Paulo"
categories: ['data-visualization', 'sao-paulo', 'transporte']
execute: 
  message: false
  warning: false
  echo: false
draft: true
---

```{r setup}
library(ggplot2)
library(tidyr)
library(dplyr)
library(sf)
library(showtext)
library(tmap)
library(tmaptools)
library(plotly)
library(biscale)

knitr::opts_chunk$set(
  fig.align = "center",
  fig.asp = 0.618,
  out.width = "90%",
  fig.width = 9,
  fig.dev = "svg"
)


font_add_google("Lato", "Lato")
showtext_auto()

tmap_mode(mode = "view")

theme_vini <- theme_minimal(base_family = "Lato") +
  theme(
    plot.title = element_text(size = 18),
    legend.position = "none",
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "#f8f8f8", color = NA),
    panel.background = element_rect(fill = "#f8f8f8", color = NA)
  )
```

```{r import-data}
#| echo: false
pod <- readr::read_csv(here::here("posts/ggplot2-tutorial/table_pod.csv"))
pod <- pod |> 
  filter(
    pop > 0
  )

zones <- readr::read_rds(here::here("static/data/zones_pod.rds"))
dstr <- sf::st_read(here::here("static/data/districts.gpkg"), quiet = TRUE)

metro <- geobr::read_metro_area(showProgress = FALSE)

codes <- metro |> 
  filter(name_metro == "RM São Paulo") |> 
  pull(code_muni) 

border <- lapply(codes, geobr::read_municipality, showProgress = FALSE, simplified = FALSE)
border <- bind_rows(border)
```

```{r cars-total}
#> Sum cars and households across Sao Paulo districts
tab_cars <- pod |> 
  filter(code_muni == 36) |> 
  summarise(
    total_car = sum(cars),
    total_hh = sum(hh),
    .by = "name_district"
  ) |> 
  #> Compute ratio of cars per household and deviation wrt city average
  mutate(
    car_rate = total_car / total_hh,
    diff = car_rate - weighted.mean(car_rate, total_hh, na.rm = TRUE)
  )

tab_diff <- tab_cars |> 
  mutate(
    rank = rank(diff),
    name_district = factor(name_district),
    name_district = forcats::fct_reorder(name_district, rank),
    group = factor(if_else(rank > 6, 1L, 0L))
    ) |> 
  filter(rank %in% c(1:6, 91:96))

media_cidade <- sum(tab_cars$total_car) / sum(tab_cars$total_hh)
```

# Carros e Renda

## São Paulo

A Região Metropolitana de São Paulo abriga cerca de 20 milhões de pessoas e gera mais de 40 milhões de viagens todos os dias.

Segundo Relatório do Metrô as viagens na Região Metropolitana de São Paulo dividem-se da seguinte maneira: um terço das viagens é feita por modos não-motorizados (a pé ou de bicicleta), enquanto dois terços das viagens é feito por modos motorizados. Neste último grupo, 55% das viagens são feitas com modais coletivos (ônibus, metrô, trem) e 45% das viagens são feitas com modais individuais (carro, táxi, moto). Ao todo, as viagens em automóveis particulares (excluindo táxis) representa cerca de 27% de todas as viagens diárias; ou seja, cerca de 1 em cada 4 viagens na RMSP é feita com carro particular.

O diagrama abaixo esquematiza todas as viagens diárias realizadas na RMSP. Vale notar que os dados são de 2017, então muitas das estações das linhas 4-amarela e 5-coral ainda estavam sob construção. Similarmente, as linhas 13-Jade, 15-Prata (monotrilho) ainda não estavam operando. Por simplicidade considerei o universo de todas as viagens: ainda que os deslocamentos casa-trabalho componham a maior parte deste conjunto, inclui-se todo tipo de deslocamento.

```{r sankey-transport}
fig <- plot_ly(
  type = "sankey",
  orientation = "h",
  
  node = list(
    label = c(
      "Motorizado", "Coletivo", "Particular", "Ônibus", "Fretado", "Escolar",
      "Metrô", "Trem", "Automóvel", "Táxi", "Moto", "Não-motorizado", "A pé",
      "Bicicleta", "Viagens"
      ),
    color = c("#08519c", "#2171b5", "#238b45", "#6baed6", "#9ecae1", "#c6dbef",
              "#6a51a3", "#9e9ac8", "#41ab5d", "#a1d99b", "#c7e9c0", "#fc4e2a",
              "#fd8d3c", "#feb24c"),
    pad = 15,
    thickness = 15,
    line = list(
      color = "black",
      width = 0.5
    )
  ),
  size = I(20),
  link = list(
    source = c(0,0,1,1,1,1,1,2,2,2,11,11),
    target = c(1,2,3,4,5,6,7,8,9,10,12,13),
    value =  c(36.4,30.9,19.8,0.61,4.98,8.1,3,27, 1.14, 2.56, 31.8, 0.9)
  )
)

fig <- fig %>% layout(
  title = list(
    text = "Distribuição das viagens na RMSP",
    y = 0.95),
  font = list(
    size = 20,
    family = "Gill Sans"
  )
)

fig
```

Pouco mais da metade dos domicílios na RMSP possui algum automóvel: 53% dos domicílios possui ao menos um carro, enquanto 47% dos domicílios não possui carro particular. Mais especificamente, 43,8% possui somente um carro. Domicílios com 2 automóveis são apenas 8% do total e domicílios com 3 automóveis ou mais são pouco mais de 1% do total.

```{r}
car_sp <- tibble(
  qt_auto = factor(0:3),
  share = c(47.04, 43.77, 8.05, 1.14)
)

xlab <- c(
  "Nenhum automóvel", "1 automóvel", "2 automóveis", "3 automóveis ou mais"
  )

ggplot(car_sp, aes(x = qt_auto, y = share)) +
  geom_col(fill = "#1b9e77") +
  geom_text(
    aes(y = share + 2, label = paste0(format(share, decimal.mark = ","), "%")),
    family = "Lato",
    size = 3
    ) +
  geom_hline(yintercept = 0) +
  scale_x_discrete(labels = stringr::str_wrap(xlab, width = 12)) +
  labs(
    title = "Posse de automóveis por domicílios",
    subtitle = "Share de domicílios em São Paulo por posse de automóvel particular (2017).",
    caption = "Fonte: POD (2017)",
    x = NULL,
    y = NULL
  ) +
  theme_vini +
  theme(
    axis.text.x = element_text(size = 12),
    axis.text.y = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
  )
```

Na média da RMSP, há x.xx carros por domicílios. Na capital, o número é similar, y.yy. Olhando para os distritos de São Paulo, vemos que os menos "carro-dependentes" são distritos centrais como República e Sé. Distritos de baixa renda média como Parelheiros e Cidade Tiradentes também tem uma baixa razão de carros por domicílio.

Os distritos mais carro-dependentes têm rendas elevadas e estão dentro ou próximos do Centro Expandido da cidade. É curioso notar que bairros verticalizados como Moema e Morumbi aparecem junto com o distrito de Alto de Pinheiros que é majoritariamente composto por residências horizontais. Isto sugere que a verticalização não acompanha menor dependência do automóvel particular.

```{r plot-cars-district}
ggplot(tab_diff, aes(x = name_district, y = diff, color = group)) +
  geom_segment(aes(xend = name_district, yend = 0), alpha = 0.8) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  scale_y_continuous(breaks = c(-0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45)) +
  scale_color_manual(values = c("#1b9e77", "#7570b3")) +
  labs(
    title = "Distritos mais e menos carro-dependentes",
    subtitle = "Proporção de carros por domicílio nos distritos de São Paulo",
    x = NULL,
    y = "Desvio em relação à média da cidade",
    caption = "Fonte: POD (2017)."
  ) +
  coord_flip() +
  theme_vini
```

Olhando os dados no mapa

```{r}
tab_dstr <- pod |> 
  summarise(
    total_car = sum(cars),
    total_hh = sum(hh),
    income = round(weighted.mean(income_avg, hh) * 1.34, -2),
    dstr_car_rate = round(total_car / total_hh, 3),
    .by = "code_district"
  )

dat_map <- left_join(dstr, tab_dstr, by = "code_district")
```

```{r car-rate-distrito}
tm_shape(dat_map) +
  tm_fill(
    col = "dstr_car_rate",
    alpha = 0.7,
    palette = "BuPu",
    title = "Car Rate",
    style = "jenks",
    n = 9,
    id = "name_district",
    popup.vars = c(
      "Domicílios: " = "total_hh",
      "Renda (R$ IPCA): " = "income",
      "Car rate: " = "dstr_car_rate"
      ),
    popup.format = list(big.mark = ".", decimal.mark = ",")
  ) +
  tm_borders(col = "white", lwd = 0.5) +
  tm_shape(border) +
  tm_borders(col = "gray80", lwd = 2)
```

Automóveis são bens desejados, então a demanda por eles deve aumentar à medida que aumenta a renda de um indivíduo. No jargão econômico, são bens normais. Assim, não surpreende que as regiões com rendas médias mais elevadas também tem uma proporção média de carros por domicílio maior.

```{r}
spo <- filter(pod, code_muni == 36)

sel_zone <- c(
  "Masp", "Jóquei Clube", "Alto de Pinheiros", "Alto da Lapa",
  "Berrini", "Chácara Klabin", "Paraíso", "Jaceguava", "República",
  "Santa Cecília", "Tatuapé", "Parelheiros", "Jaraguá", "Pirituba",
  "Cidade Ademar", "Capão Redondo", "Morumbi", "Consolação",
  "Fazenda Itaim", "Vila Helena", "Vila Bertioga", "Higienópolis",
  "Cidade Líder", "Vila Zelina", "Bom Retiro", "Jardim Europa",
  "Pompéia"
  )

ggplot(spo, aes(x = income_avg * 1.34, y = car_rate)) +
  geom_point(
    aes(size = pop),
    alpha = 0.5,
    fill = "#023047",
    color = "gray50",
    shape = 21) +
  ggrepel::geom_label_repel(
    data = filter(spo, name_zone %in% sel_zone),
    aes(x = income_avg * 1.34, y = car_rate, label = name_zone),
    family = "Lato",
    size = 3,
    label.padding = unit(0.1, "line")) +
  geom_smooth(
    method = "lm",
    mapping = aes(weight = pop),
    formula = y ~ poly(x, 2),
    se = FALSE) +
  scale_x_continuous(labels = scales::label_number(big.mark = ".")) +
  scale_y_continuous(labels = scales::label_number(decimal.mark = ",")) +
  scale_size_continuous(range = c(0, 10)) +
  labs(
    title = "Carros e Renda",
    subtitle = "Número médio de carros por domicílio e renda domiciliar média por Zona OD.\nTamanho do círculo é proporcional à população da Zona.",
    caption = "Fonte: POD (2017)",
    x = "Renda Domiciliar (R$ IPCA)",
    y = "Carros por Domicílio"
  ) +
  theme_vini +
  theme(legend.position = "none")
```

```{r}
pod <- pod |> 
  mutate(
    location = factor(case_when(
      is_cbd == 1 ~ "Centro Expandido",
      code_muni == 36 & is_cbd == 0 ~ "Sao Paulo",
      TRUE ~ "RMSP"
    ))
  )

p1 <- ggplot(pod, aes(x = log(income_pc), y = car_rate, size = pop)) +
  geom_point(
    aes(fill = location),
    alpha = 0.5,
    shape = 21) +
  scale_fill_manual(name = "", values = c("#023047", "#fb8500", "#8ecae6")) +
  theme_minimal() +
  theme_vini
```

```{r}
p2 <- ggplot(pod, aes(x = log(income_avg), y = car_rate, size = pop, color = location)) +
  geom_point(
    aes(fill = location),
    alpha = 0.5,
    shape = 21) +
  geom_smooth(
    method = "lm",
    mapping = aes(weight = pop),
    se = FALSE) +
  facet_wrap(vars(location), ncol = 1) +
  scale_fill_manual(
    name = "",
    values = c("#023047", "#fb8500", "#8ecae6")
    ) +
  scale_color_manual(
    name = "",
    values = c("#023047", "#fb8500", "#8ecae6")
    ) +
  scale_size_continuous(range = c(1, 10)) +
  guides(fill = "none", size = "none", color = "none") +
  theme_vini
```

```{r}
library(patchwork)
p1 + p2
```

```{r}

dat_map <- left_join(
  zones,
  select(pod, code_zone, income_avg, car_rate),
  by = "code_zone"
)

biscale_labels <- c(
  "1-1" = "Low-Low", "1-2" = "Low-Medium", "1-3" = "Low-High", "2-1" = "Medium-Low",
  "2-2" = "Medium-Medium", "2-3" = "Medium-High", "3-1" = "High-Low",
  "3-2" = "High-Medium", "3-3" = "High-High"
)

grpink <- biscale::bi_pal("DkBlue", dim = 3, preview = FALSE)

clean_dat <- dat_map |> 
  filter(!is.na(income_avg), !is.na(car_rate))

biclassed <- bi_class(clean_dat, income_avg, car_rate, style = "jenks")

lvls = unique(biclassed$bi_class)
lvls = lvls[order(lvls)]
labels = biscale_labels[lvls]

biclassed <- biclassed %>%
  select(name_zone, income_avg, car_rate, bi_class) %>%
  mutate(
    bi_class_label = factor(bi_class, levels = lvls, labels = labels)
  )

tm_shape(biclassed) +
  tm_fill(
    col = "bi_class_label",
    alpha = 0.7,
    title = "Cluster: Income - Car",
    palette = grpink[lvls],
    id = "name_zone",
    popup.vars = c(
      "Cluster: " = "bi_class_label",
      "Income: " = "income_avg",
      "Car rate: " = "car_rate")
  ) +
  tm_borders(col = "white", lwd = 0.5) +
  tm_shape(border) +
  tm_borders(col = "gray50", lwd = 2)
```

```{r}
models <- readr::read_rds(here::here("posts/general-posts/2023-09-carros-renda/models_cars_income.rds"))

models$probit

models$logit

```

```{=html}
<table style="text-align:center"><tr><td colspan="3" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"></td><td colspan="2"><em>Dependent variable:</em></td></tr>
<tr><td></td><td colspan="2" style="border-bottom: 1px solid black"></td></tr>
<tr><td style="text-align:left"></td><td colspan="2">d_car_owner</td></tr>
<tr><td style="text-align:left"></td><td><em>survey-weighted</em></td><td><em>survey-weighted</em></td></tr>
<tr><td style="text-align:left"></td><td><em>probit</em></td><td><em>logistic</em></td></tr>
<tr><td style="text-align:left"></td><td>(1)</td><td>(2)</td></tr>
<tr><td colspan="3" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">log(renda_fa)</td><td>1.094<sup>***</sup></td><td>1.899<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.026)</td><td>(0.043)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_has_child0</td><td>-0.117<sup>***</sup></td><td>-0.176<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.023)</td><td>(0.038)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_age_11</td><td>0.065</td><td>0.127</td></tr>
<tr><td style="text-align:left"></td><td>(0.069)</td><td>(0.116)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_age_21</td><td>0.320<sup>***</sup></td><td>0.534<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.068)</td><td>(0.113)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_age_31</td><td>0.264<sup>***</sup></td><td>0.437<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.067)</td><td>(0.112)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_age_41</td><td>0.247<sup>***</sup></td><td>0.415<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.068)</td><td>(0.114)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_age_51</td><td>0.207<sup>***</sup></td><td>0.357<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.069)</td><td>(0.114)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_educ_tert1</td><td>0.137<sup>***</sup></td><td>0.209<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.031)</td><td>(0.053)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">d_is_employed1</td><td>0.102<sup>***</sup></td><td>0.179<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.025)</td><td>(0.041)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td style="text-align:left">Constant</td><td>-8.855<sup>***</sup></td><td>-15.386<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.211)</td><td>(0.358)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td></tr>
<tr><td colspan="3" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">Observations</td><td>30,736</td><td>30,736</td></tr>
<tr><td style="text-align:left">Log Likelihood</td><td>-16,230.300</td><td>-16,180.480</td></tr>
<tr><td style="text-align:left">Akaike Inf. Crit.</td><td>32,480.610</td><td>32,380.960</td></tr>
<tr><td colspan="3" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"><em>Note:</em></td><td colspan="2" style="text-align:right"><sup>*</sup>p<0.1; <sup>**</sup>p<0.05; <sup>***</sup>p<0.01</td></tr>
</table>
```
## Referencias
