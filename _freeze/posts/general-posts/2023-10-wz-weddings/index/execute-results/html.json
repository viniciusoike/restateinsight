{
  "hash": "286251d5832c7b91f36b07c99c32b6c0",
  "result": {
    "markdown": "---\ntitle: \"Brazil in Charts: Weddings and Births\"\ncategories: ['data-visualization', 'ggplot2', 'weekly-viz']\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/viniciusoike/Documents/GitHub/restateinsight\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(MetBrewer)\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(forcats)\nlibrary(purrr)\nlibrary(stringr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(RcppRoll)\n\nfont_add(\"Helvetica\", \"Helvetica.ttc\")\nshowtext_auto()\n\ncolors <- met.brewer(\"Hokusai1\", 7)[c(2, 5, 7)]\n\ncolors <- met.brewer(\"Hokusai1\", 7)[c(6, 7, 5)]\n\ntheme_vini <- theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n    \n    panel.background = element_rect(fill = \"white\", colour = \"white\"),\n    plot.background = element_rect(fill = \"white\", colour = \"white\"),\n    \n    legend.position = \"top\",\n    legend.box.margin = margin(0),\n    legend.margin = margin(0),\n    \n    text = element_text(family = \"Helvetica\", size = 10, color = \"gray15\"),\n    plot.title = element_text(size = 14),\n    plot.subtitle = element_text(size = 8, color = \"gray30\"),\n    plot.caption  = element_text(size = 6, color = \"gray30\"),\n    axis.text.x = element_text(angle = 90)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_rds(\"/Volumes/T7 Touch/R/promotion/weekly_viz/data/births_weddings.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_stl_trend <- function(\n    df,\n    xdate = \"date\",\n    xvar = \"value\",\n    freq = 12,\n    plot = FALSE,\n    auto = FALSE,\n    ...) {\n  \n  y <- df_to_ts(df, xdate, xvar, freq)\n  \n  if (length(y) < 3 * freq) {\n    \n    trend <- stats::filter(y, filter = rep(1 / 3, 3), method = \"convolution\", sides = 1)\n    \n  } else {\n    \n    lambda <- forecast::BoxCox.lambda(y)\n    z <- forecast::BoxCox(y, lambda)\n    \n    if (auto) {\n      model <- forecast::mstl(z, ...)\n    } else {\n      model <- stats::stl(z, s.window = 9, t.window = 7, ...)\n    }\n    \n    trend <- forecast::InvBoxCox(forecast::trendcycle(model), lambda)\n    \n  }\n  \n  if (plot) {\n    x <- forecast::InvBoxCox(z, lambda)\n    plot(x)\n    graphics::lines(trend, col = \"blue\")\n  }\n  \n  out <- tidyr::tibble(df, trend = as.numeric(trend))\n  return(out)\n  \n}\n\ndf_to_ts <- function(df, date.var = \"ts_date\", value.var, freq = 12) {\n  \n  # Create ts from data.frame\n  if (inherits(df, \"data.table\")) {\n    data <- min(df[[date.var]])\n    value <- df[[value.var]]\n  } else {\n    if (inherits(df, \"data.frame\")) {\n      data <- as.data.frame(df)\n      data <- df[[date.var]]\n      data <- min(data)\n      value <- df[[value.var]]\n    } else {\n      error(\"Input must be either data.frame, tibble, or data.table\")\n    }\n  }\n  \n  ano <- lubridate::year(data)\n  mes <- lubridate::month(data)\n  ts <- ts(value, start = c(ano, mes), frequency = freq)\n  ts <- forecast::na.interp(ts)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrates <- data$data\n\ntbl_rates <- rates %>%\n  mutate(\n    name_state = factor(name_state),\n    name_state = fct_reorder(name_state, code_state)\n    ) %>%\n  select(date, name_state, b_rate, w_rate) %>%\n  pivot_longer(cols = -c(date, name_state))\n\ntbl_rates <- tbl_rates %>%\n  group_by(name_state, name) %>%\n  nest() %>%\n  mutate(trend = map(data, add_stl_trend, auto = TRUE)) %>%\n  unnest(trend)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl1 <- data$births\n\ntbl1 <- tbl1 %>%\n  filter(!is.na(date),\n         !(mother_age_group %in% c(\"Total\", \"Ignorada\", \"Menos de 15 anos\")),\n         !str_detect(mother_age_group, \" a \"),\n         sex_children_born == \"total\") %>%\n  select(date, name_state, mother_age_group, total_births) %>%\n  mutate(age_mother = as.numeric(str_extract(mother_age_group, \"[:digit:]+\")),\n         total_births = ifelse(is.na(total_births), 0, total_births))\n\ntbl_avg_birth <- tbl1 %>%\n  group_by(date, name_state) %>%\n  summarise(avg_age_b = weighted.mean(age_mother, total_births, na.rm = T))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntbl2 <- data$weddings\n\ntbl2 <- tbl2 %>%\n  group_by(date, name_state, age_female) %>%\n  summarise(wedding = sum(total_weddings, na.rm = T)) %>%\n  ungroup() %>%\n  mutate(ages = str_remove(age_female, \" anos\")) %>%\n  separate(ages, into = c(\"age_min\", \"age_max\"), sep = \" a \") %>%\n  mutate(age_max = ifelse(age_female == \"65 anos ou mais\", 70, age_max),\n         age_max = ifelse(age_female == \"Menos de 15 anos\", 15, age_max),\n         age_min = ifelse(age_female == \"65 anos ou mais\", 65, age_min),\n         age_min = ifelse(age_female == \"Menos de 15 anos\", 15, age_min),\n         age_min = as.numeric(age_min),\n         age_max = as.numeric(age_max),\n         midpoint = age_min + (age_max - age_min) / 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'name_state'. You can override\nusing the `.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 178524 rows [2, 3, 4, 5,\n6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, ...].\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `age_min = as.numeric(age_min)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n```{.r .cell-code}\ntbl_avg_wedding <- tbl2 %>%\n  group_by(date, name_state) %>%\n  summarise(avg_age_w = weighted.mean(midpoint, wedding, na.rm = T))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntbl_avg <- inner_join(tbl_avg_birth, tbl_avg_wedding, by = c(\"name_state\", \"date\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_avg <- tbl_avg %>%\n  pivot_longer(cols = -c(date, name_state)) %>%\n  group_by(name_state, name) %>%\n  nest() %>%\n  mutate(trend = map(data, add_stl_trend, auto = TRUE)) %>%\n  unnest(trend) %>%\n  ungroup() %>%\n  mutate(\n    name_state = str_to_title(name_state),\n    name_state = factor(name_state, levels = levels(tbl_rates$name_state))\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(tbl_rates, aes(x = date, y = trend, colour = name)) +\n  geom_line(size = 1) +\n  facet_wrap(~name_state) +\n  scale_colour_manual(\n    name = \"\",\n    values = colors,\n    labels = c(\"Births\", \"Weddings\")\n  ) + \n  labs(\n    title = \"While wedding rates stabilize, birth rate falls\",\n    subtitle = \"12 month moving average shows steady decline in the birth rate. Wedding rates stay roughly equal until the Covid-19 pandemic.\",\n    y = \"Rate per 100.000\",\n    x = NULL,\n    caption = \"Source: IBGE\"\n  ) + \n  theme_vini\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\np2 <- ggplot(tbl_avg, aes(x = date, y = trend, colour = name)) +\n  geom_line(size = 1) +\n  facet_wrap(~name_state) +\n  scale_y_continuous(\n    breaks = seq(24, 34, 2)) +\n  scale_colour_manual(\n    name = \"Average age\",\n    values = colors[c(1, 3)],\n    labels = c(\"Children\", \"Wedding\")) +\n  labs(\n    title = \"Women are having children and marrying at older ages\",\n    subtitle = \"Average age of wedding lags significantly behind even when including weddings from formerly divorced or widowed.\",\n    x = NULL,\n    y = \"Age\",\n    caption = \"Source: IBGE\") +\n  theme_vini\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}