{
  "hash": "14edc405688c4111d4355c97a94a621d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30DayChartChallenge: personal highlights\"\ncategories: [\"data-visualization\", \"ggplot2\"]\ndate: \"2025-05-01\" \ndecription: \"I decided to participate in the 30DayChartChallenge this year. In this post I reflect on my plots, highlighting some of the most interesting ones.\"\nformat: html\n---\n\n\n\n# The Challenge\n\nThe 30DayChartChallenge is a yearly community-driven online event that presents 30 prompts for data visualizations. The challenge is organized by Cédric Scherer and Dominic Royé, with prompts categorized into themes (e.g. comparisons, distributions, relationships, etc.).\n\n![](images/banner.png){fig-align=\"center\" width=\"400\"}\n\n## Learning\n\nThis was my first year participating in the challenge. For the sake of consistency and speed, I created almost all of my visualizations using `ggplot2` and `R`. The first few days were tougher than I expected—it took me a while to grasp the format of the challenge. I wasted a lot of time experimenting with different datasets, trying out alternative visualizations that weren't used. Over time, though, I got better at quickly prototyping simple versions of plots and made my code more reusable and efficient.\n\nMy simple lessons are summarized below.\n\n1.  Visualize before coding\n\nIt's usually hard to visualize the final plot, specially when dealing with an unknown dataset. I found that making very simple plots or even drawing them by hand, helped me structure the final version of the code.\n\n2.  Reuse code\n\nCode reusability is a clear advantage of using a programming language over GUI-based software, yet I’ve often fallen into the (bad) habit of starting each new visualization from scratch. As the challenge progressed, though, I began adapting and reusing more of my own code—and things became much more efficient and productive as a result.\n\n3.  The `ragg` package\n\nI've always used `showtext` to display custom fonts in plots, but `ragg` seems to be the superior alternative. Plots render faster and there's no DPI issue when exporting plots. While you're limited to local fonts, this can actually help streamline your workflow by reducing options. I found myself gravitating towards Avenir, Futura, Helvetica, and Gill Sans.\n\nYou can also download fonts from Google Fonts if you find yourself missing Roboto.\n\n4.  Using variables for fonts and colors\n\nThis was a simple adaptation I made to speed up prototyping. The code snippet below is from the Extraterrestrial plot. With this setup, it's much easier to test different fonts, colors, or even entire palettes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_title <- \"Fira Code\"\nfont_text <- \"IBM Plex Mono\"\n\npal_scifi <- c(\n  \"#06d0ce\", \"#09f6f8\", \"#076a6c\", \"#051416\", \"#d5dadb\",\n  \"#04454a\", \"#098b94\", \"#05947c\", \"#fefefe\", \"#022123\"\n  )\n\nspace_background <- pal_scifi[10]\ncolor_text_label <- pal_scifi[2]\ncolor_axis_label <- pal_scifi[5]\nfill_text_label <- pal_scifi[4]\nfill_column <- pal_scifi[3]\n```\n:::\n\n\n\nThe code for all of my plots can be found on this [GitHub repository](https://github.com/viniciusoike/30daychartchallenge).\n\n## Highlights\n\n### Day 4: Circles\n\nThese circular maps were my favorite visualization from the Challenge. The maps estimate the number of people living within a 6 km radius of their city's downtown. The street colors represent nearby population density: darker shades indicate lower values, lighter shades represent higher.\n\nI adapted the code from this [post, which shows how to map altitude into streets](https://restateinsight.com/posts/general-posts/2023-10-mapas-altitude/), to show population counts. The population data was collected from the recent 2022 Census, which just recently published population couts in census tracts. The style of the maps was inspired by the [`prettymaps` Python package](https://github.com/marceloprates/prettymaps) made by Marcelo Prates.\n\nOverall, these maps took a very long time to make, and were unpractical for the challenge. Running the code takes a long time, since several OSM features need to be downloaded.\n\n::: {layout-ncol=\"2\"}\n![](images/3_circles_Porto_Alegre.png){width=\"45%\"} ![](images/3_circles_Brasilia.png){width=\"45%\"}\n:::\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/3_circles_final.R)\n\n### Day 5: Big or Small\n\nThe idea for this visualization is to show how choropleth maps of Brazil are deceiving. Brazil's Midwest and North regions cover about 65% of the country’s area but house only 16% of its population. As a result, these choropleth maps tend to be biased, since larger chunks of land dominate the visualization, drawing more attention regardless of their actual relevance to the underlying data. This obscures important patterns in more densely populated areas, like the Southeast and Northeast, which occupy smaller land areas but contain the majority of Brazil’s population.\n\n::: {layout-ncol=\"2\"}\n![](images/4_big_small_choro.png){width=\"40%\"} ![](images/4_big_small.png){width=\"40%\"}\n:::\n\n### Day 15: Complicated\n\nBy the second half of the challenge, I felt more confortable with the challenge, and the plots became more streamlined. This chart shows the growing gap between house sales prices and rental prices in Brazil. This is something I [explored in greater detail in this post (in Portuguese)](https://restateinsight.com/posts/general-posts/2024-02-wz-rent-house/).\n\n![](images/15_complicated.png){fig-align=\"center\" width=\"70%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/15_complicated.R)\n\n### Day 19: Smooth\n\nThis was more of a \"fun\" prompt. The chart shows different smoothing techniques applied to recent S&P 500 data. Naturally, the index performed poorly in April, reflecting the turbulence sparked by Trump’s tariff policies. Making this plot was relatively straightforward, since the base `stats` package from `R` already has several smoothers, such as `loess`, `smooth`, and `smooth.spline`. The `TTR` package also provides variations of MA filters, commonly used in financial analysis.\n\n![](images/19_smoothing_2.png){fig-align=\"center\" width=\"70%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/19_smooth.R)\n\n### Day 21: Fossils\n\nThis was one of the quickest plots to make and shows how pre-planning really is key for this challenge. I experimented with alternative datasets from OurWorldInData and settled on the raw consumption of fossil fuels in the past 100 years.\n\n![](images/21_fossils.png){fig-align=\"center\" width=\"80%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/21_fossils.R)\n\n### Day 22: Stars\n\nI already knew I wanted to use the `sunspots` dataset for this prompt, but Jevons helped make it more compelling. In the late 19th century, British economist Stanely Jevons theorized that sunspot cycles had an influence over agricultural productivity and, by extension, economic cycles. Although he never managed to prove his theory, many still claim the economic cycles are regulated by sunspot cycles. The last two major recessions (more or less) coincided sunspot cycle troughs, giving the theory a bit of renewed attention.\n\n![](images/22_stars.png){fig-align=\"center\" width=\"80%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/22_stars.R)\n\n### Day 25: Risk\n\nThis plot shows the EMBI+ index over the years, highlighting key political and economic events in Brazilian history. The code for this plot was adapted from my [post on Brazilian hyperinflation](https://restateinsight.com/posts/general-posts/2023-12-wz-inflation/).\n\n![](images/25_risk.png){fig-align=\"center\" width=\"80%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/25_risk.R)\n\n### Day 26: Monochrome\n\nThis plot shows the decoupling of electric energy consumption and GDP growth in Brazil. The consumption of electric energy is typically considered a good proxy for economic growth, but, since the 2014-16 recession, these series have diverged.\n\nThe code for this plot was adapted by a similar analysis I did in this [post (in Portuguese)](https://restateinsight.com/posts/general-posts/2024-02-wz-energy/).\n\n![](images/26_monochrome-01.png){fig-align=\"center\" width=\"80%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/26_monochrome.R)\n\n### Day 29: Extraterrestrial\n\nThis plot shows the box-office earnings from films that feature aliens. Making this plot was much easier than I imagined. I combined a Wikipedia list of alien-themed movies with domestic box-office data from BoxOfficeMojo, and used FRED to adjust the values for inflation to ensure comparability.\n\n![](images/29_extraterrestrial.png){fig-align=\"center\" width=\"80%\"}\n\n[Link to code](https://github.com/viniciusoike/30daychartchallenge/blob/master/R/29_extraterrestrial.R)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}