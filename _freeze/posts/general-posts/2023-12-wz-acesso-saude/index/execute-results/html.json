{
  "hash": "2d5b171e645fe155865f88fb7c16b7ff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Acesso a Hospitais e Leitos em São Paulo\"\ndate: \"2024-01-20\"\ncategories: ['data-science', 'data-visualization', 'mapas', 'sao-paulo', 'ggplot2', 'transporte']\ndescription: \"Neste post, vou mapear a acessibilidade a hospitais e leitos em São Paulo. Para avaliar quantitativamente o nível de acessibilidade vou montar uma métrica bastante simples: o tempo mínimo necessário que se leva para chegar no hospital/leito mais próximo, considerando um deslocamento de bicicleta.\"\nformat:\n  html:\n    code-tools: true\nexecute:\n  warning: false\n  message: false\n---\n\n# Acessibilidade à Saúde\n\nNeste post, vou mapear a acessibilidade a hospitais e leitos em São Paulo. Para avaliar quantitativamente o nível de acessibilidade vou montar uma métrica bastante simples: o tempo mínimo necessário que se leva para chegar no hospital/leito mais próximo, considerando um deslocamento de bicicleta[^1].\n\n[^1]: Seria possível também fazer o deslocamento de carro, mas, na minha experiência, o deslocamento de bicicleta aproxima bem o deslocamento de carro com trânsito. As isócronas de deslocamento de carro em São Paulo - sem ajustes - costumam ser bastante \"otimistas\" com relação às possibilidades de deslocamento.\n\nPara tornar o problema tratável, divido a cidade em hexágonos, no padrão H3, em resolução 9. Esta resolução tem um tamanho aproximado de 1km2 e estratifica a cidade em cerca de 15 mil subáreas. Seria possível reduzir o número de hexágonos cruzando este grid com dados de população do Censo. Contudo, como os dados do Censo a nível de setor censitário estão consideravelmente defasados, utilizo o grid inteiro.\n\nPara cada hospital/leito, contruo isócronas de 10, 15, 20, 25 e 30 minutos, considerando um deslocamento de bicicleta. A partir desta métrica simples, pode-se construir refinamentos como ponderar o número de leitos acessíveis em relação a população que reside em cada região. Evidentemente, pode-se considerar também outros modos de transporte e intervalos de tempo.\n\n# Setup\n\nComo os dados são relativamente grandes vou usar o `data.table` para a manipulação dos dados. O pacote `tidygeocoder` é utilizado para georeferenciar alguns dos endereços que estão com lat/long ausente.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(tidygeocoder)\nlibrary(sf)\nlibrary(stringr)\nlibrary(osrm)\nlibrary(mapview)\nlibrary(ggplot2)\nlibrary(aopdata)\n```\n:::\n\n\n## Dados\n\nAs bases de dados são de livre acesso no site [dados.gov.br](https://dados.gov.br/). Especificamente, vamos usar a base de [Cadastros de CNES](https://dados.gov.br/dados/conjuntos-dados/cnes-cadastro-nacional-de-estabelecimentos-de-saude) e de [Hospitais e Leitos](https://dados.gov.br/dados/conjuntos-dados/hospitais-e-leitos). Normalmente, eu importaria estes dados usando webscrapping, mas neste caso acho mais simples baixar os arquivos manualmente. Como são apenas duas tabelas que precisam ser baixadas, acho que seria um exagero fazer um rotina para importar os dados via scraping. Além disso, olhando o código-fonte da página, o download é feito via uma URL dinâmica, o que exigiria o uso do `RSublime`, ou, alternativamente, o uso do `BeautifulSoup` em Python[^2].\n\n[^2]: Caso fosse necessário seria possível combinar a rotina de importação em `Python` com a rotina de análise em `R` usando `reticulate`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncnes = fread(\"cnes_estabelecimentos.csv\")\nleitos = fread(\"Leitos_2024.csv\", encoding = \"Latin-1\")\n```\n:::\n\n\n## Limpeza\n\nOs códigos abaixo mostram a rotina de limpeza necessária. Como os dados brutos são relativamente bem estruturados não é necessário muito esforço neste passo. O primeiro código abaixo seleciona apenas as colunas necessárias da base de Cadastro de CNES para São Paulo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simplifica e limpa o nome das colunas\ncnes = janitor::clean_names(cnes)\n# Vetor para renomear e selecionar as colunas\nsel_cols <- c(\"code_cnes\", \"lng\", \"lat\")\n# Altera o nome das colunas\nsetnames(cnes, c(\"co_cnes\", \"nu_longitude\", \"nu_latitude\"), sel_cols)\n# Seleciona as colunas apenas para Sao Paulo\ncnes <- cnes[co_ibge == 355030, ..sel_cols]\n```\n:::\n\n\nO segundo código abaixo mostra os passos para limpar a base de hospitais e leitos. Por fim, as duas bases são combinadas via o identificador `code_cnes`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vetor para renomear as colunas\n\n# Remove o prefixo do nome das colunas\nnew_names <- str_remove_all(names(leitos), \"^[A-Z]{2}_\")\n# Cria novos nomes paras as colunas\nnew_names <- janitor::make_clean_names(new_names)\nsetnames(leitos, names(leitos), new_names)\nsetnames(leitos, c(\"cnes\", \"endereco\"), c(\"code_cnes\", \"numero\"))\n\n# Vetor para selecionar colunas\nsel_cols <- c(\n  \"code_cnes\",\n  \"nome_estabelecimento\",\n  \"logradouro\",\n  \"numero\",\n  \"bairro\",\n  \"cep\",\n  \"leitos_existentes\"\n)\n\nleitos <- leitos[uf == \"SP\" & municipio == \"SAO PAULO\", ..sel_cols]\n\ndat <- merge(leitos, cnes, by = \"code_cnes\")\n```\n:::\n\n\n## Isócronas\n\nIsócronas são polígonos que representam áreas de alcance dentro de um período de tempo pré-determinado. Isto é, para um determinado ponto no espaço $s_{i}$ a isócrona $I(s_{i}, m, t)$ representa todos os pontos que se pode chegar, partindo de $s_{i}$, usando o modo de transporte $m$ em $t$ minutos. Para este exemplo considero apenas deslocamentos de bicicleta em intervalos de 10, 15, 20, 25, e 30 minutos.\n\nO código abaixo exemplifica a construção de uma isócrona em torno de um hospital.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niso_test = osrmIsochrone(\n  dat[1, .(lng, lat)],\n  breaks = seq(from = 10, to = 30, by = 5),\n  osrm.profile = \"bike\"\n)\n\nmapview(iso_test, zcol = \"isomax\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-0baa845135bcdf06dd94\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0baa845135bcdf06dd94\">{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"polygon\",420]},{\"method\":\"addPolygons\",\"args\":[[[[{\"lng\":[-46.69433236108924,-46.70052763891072,-46.70672291673228,-46.70730372402805,-46.71003666998564,-46.71291819455377,-46.71404460870315,-46.71304462879502,-46.71291819455377,-46.71222983035138,-46.70672291673228,-46.70052763891072,-46.69866905556427,-46.69433236108924,-46.69236113632786,-46.68813708326776,-46.685884254969,-46.6837440680852,-46.68194180544619,-46.67975523680332,-46.68194180544619,-46.68483293509626,-46.68813708326776,-46.69355795136156,-46.69433236108924],\"lat\":[-23.46086155518831,-23.45909345904944,-23.46104434573181,-23.46149301235645,-23.46717599094363,-23.47154734642511,-23.47285872483201,-23.47854121397628,-23.48043532262891,-23.48422345833095,-23.48835584590182,-23.48956454478475,-23.48990545785078,-23.49107525088464,-23.48990545785078,-23.48674882168009,-23.48422345833095,-23.47854121397628,-23.47529410729372,-23.47285872483201,-23.47023595498508,-23.46717599094363,-23.46471851671583,-23.46149301235645,-23.46086155518831]}]],[[{\"lng\":[-46.68813708326776,-46.69433236108924,-46.70052763891072,-46.70672291673228,-46.7109469697924,-46.71291819455377,-46.71756465291995,-46.71911347237534,-46.71937315467924,-46.72276709775724,-46.71967667945002,-46.71911347237534,-46.71911347237534,-46.71911347237534,-46.71934725644407,-46.71911347237534,-46.71304726284172,-46.71291819455377,-46.70743094848332,-46.70672291673228,-46.70052763891072,-46.6963974536964,-46.69433236108924,-46.68813708326776,-46.68813708326776,-46.68494833733019,-46.68194180544619,-46.67708604715368,-46.67574652762471,-46.67410660114253,-46.67180407810189,-46.67360200837878,-46.67574652762471,-46.67863765727473,-46.68194180544619,-46.68585461249139,-46.68813708326776],\"lat\":[-23.45512386631939,-23.45291236547981,-23.45126303440331,-23.45477014864175,-23.45580978911577,-23.45723061785971,-23.46149301235645,-23.46433453223456,-23.46717599094363,-23.47285872483201,-23.47854121397628,-23.48422345833095,-23.48422345833095,-23.48422345833095,-23.48990545785078,-23.49013737099729,-23.49558721249047,-23.49576476337665,-23.5012687222046,-23.50214277888033,-23.50177002012478,-23.5012687222046,-23.50061317589278,-23.49558721249047,-23.49558721249047,-23.48990545785078,-23.4868811982635,-23.48422345833095,-23.48247510152757,-23.47854121397628,-23.47285872483201,-23.46717599094363,-23.46397934559486,-23.46149301235645,-23.45921975241605,-23.45580978911577,-23.45512386631939]},{\"lng\":[-46.69433236108924,-46.70052763891072,-46.70672291673228,-46.70730372402805,-46.71003666998564,-46.71291819455377,-46.71404460870315,-46.71304462879502,-46.71291819455377,-46.71222983035138,-46.70672291673228,-46.70052763891072,-46.69866905556427,-46.69433236108924,-46.69236113632786,-46.68813708326776,-46.685884254969,-46.6837440680852,-46.68194180544619,-46.67975523680332,-46.68194180544619,-46.68483293509626,-46.68813708326776,-46.69355795136156,-46.69433236108924],\"lat\":[-23.46086155518831,-23.45909345904944,-23.46104434573181,-23.46149301235645,-23.46717599094363,-23.47154734642511,-23.47285872483201,-23.47854121397628,-23.48043532262891,-23.48422345833095,-23.48835584590182,-23.48956454478475,-23.48990545785078,-23.49107525088464,-23.48990545785078,-23.48674882168009,-23.48422345833095,-23.47854121397628,-23.47529410729372,-23.47285872483201,-23.47023595498508,-23.46717599094363,-23.46471851671583,-23.46149301235645,-23.46086155518831]}]],[[{\"lng\":[-46.68194180544619,-46.68503944435698,-46.68813708326776,-46.68837536318397,-46.69433236108924,-46.69949509260714,-46.70052763891072,-46.70672291673228,-46.70736380754141,-46.70672291673228,-46.70499636389677,-46.70672291673228,-46.70942342244934,-46.71291819455377,-46.71911347237534,-46.71911347237534,-46.71998468331898,-46.72085462888726,-46.72122802827848,-46.72530875019682,-46.72729591478107,-46.72663630973,-46.72928008213366,-46.73150402801829,-46.73158146899107,-46.73150402801829,-46.72840638910756,-46.72530875019682,-46.72519185816245,-46.7196157921987,-46.71911347237534,-46.71428691872365,-46.71291819455377,-46.71167913898947,-46.70672291673228,-46.70238622225718,-46.70052763891072,-46.69787251984437,-46.69433236108924,-46.68813708326776,-46.68731104622488,-46.68218961655906,-46.68194180544619,-46.67574652762471,-46.67574652762471,-46.6708330314214,-46.66955124980314,-46.66624710163168,-46.66955124980314,-46.66955124980314,-46.66955124980314,-46.66335597198166,-46.66254080384726,-46.66272055887176,-46.66335597198166,-46.66729842150442,-46.66955124980314,-46.67246667466035,-46.67574652762471,-46.68157737733905,-46.68194180544619],\"lat\":[-23.45002106955597,-23.45012632126711,-23.45022431416417,-23.45012632126711,-23.44775813748092,-23.44444260885573,-23.44401014246597,-23.44378678014986,-23.44444260885573,-23.44529518130653,-23.45012632126711,-23.45130462128377,-23.45012632126711,-23.4475213167672,-23.45012632126711,-23.45012632126711,-23.45580978911577,-23.46149301235645,-23.46717599094363,-23.47151699028914,-23.47285872483201,-23.47854121397628,-23.48422345833095,-23.48952666550079,-23.48990545785078,-23.4899566459227,-23.48990545785078,-23.48968692393552,-23.48990545785078,-23.49558721249047,-23.49583071078774,-23.5012687222046,-23.50542043977196,-23.50694998694798,-23.5116284915881,-23.50694998694798,-23.50594742861945,-23.50694998694798,-23.50814601146405,-23.50721118863122,-23.50694998694798,-23.5012687222046,-23.50107934249395,-23.49558721249047,-23.49558721249047,-23.48990545785078,-23.48835584590182,-23.48422345833095,-23.47854121397628,-23.47854121397628,-23.47854121397628,-23.47759414945028,-23.47285872483201,-23.46717599094363,-23.46591312795837,-23.46149301235645,-23.45959863179104,-23.45580978911577,-23.45280092483969,-23.45012632126711,-23.45002106955597]},{\"lng\":[-46.70052763891072,-46.70672291673228,-46.7109469697924,-46.71291819455377,-46.71756465291995,-46.71911347237534,-46.71937315467924,-46.72276709775724,-46.71967667945002,-46.71911347237534,-46.71911347237534,-46.71911347237534,-46.71934725644407,-46.71911347237534,-46.71304726284172,-46.71291819455377,-46.70743094848332,-46.70672291673228,-46.70052763891072,-46.6963974536964,-46.69433236108924,-46.68813708326776,-46.68813708326776,-46.68494833733019,-46.68194180544619,-46.67708604715368,-46.67574652762471,-46.67410660114253,-46.67180407810189,-46.67360200837878,-46.67574652762471,-46.67863765727473,-46.68194180544619,-46.68585461249139,-46.68813708326776,-46.69433236108924,-46.70052763891072],\"lat\":[-23.45126303440331,-23.45477014864175,-23.45580978911577,-23.45723061785971,-23.46149301235645,-23.46433453223456,-23.46717599094363,-23.47285872483201,-23.47854121397628,-23.48422345833095,-23.48422345833095,-23.48422345833095,-23.48990545785078,-23.49013737099729,-23.49558721249047,-23.49576476337665,-23.5012687222046,-23.50214277888033,-23.50177002012478,-23.5012687222046,-23.50061317589278,-23.49558721249047,-23.49558721249047,-23.48990545785078,-23.4868811982635,-23.48422345833095,-23.48247510152757,-23.47854121397628,-23.47285872483201,-23.46717599094363,-23.46397934559486,-23.46149301235645,-23.45921975241605,-23.45580978911577,-23.45512386631939,-23.45291236547981,-23.45126303440331]}]],[[{\"lng\":[-46.71291819455377,-46.71911347237534,-46.72041774139038,-46.72107782875776,-46.72380686466434,-46.72240471371801,-46.72287922948252,-46.72308290187773,-46.72530875019682,-46.73021821564026,-46.72884890895195,-46.73150402801829,-46.73769930583987,-46.74182949105419,-46.73769930583987,-46.73545351762954,-46.73150402801829,-46.72661301921187,-46.72718174116611,-46.72530875019682,-46.72156276825825,-46.71911347237534,-46.71788882443386,-46.71911347237534,-46.71950067723918,-46.71911347237534,-46.71291819455377,-46.7093439958106,-46.70672291673228,-46.70292581097068,-46.70052763891072,-46.69742999999998,-46.69681047221783,-46.69433236108924,-46.68813708326776,-46.68194180544619,-46.67729534708008,-46.67574652762471,-46.67167534505626,-46.66955124980314,-46.66490479143703,-46.66335597198166,-46.66048778780505,-46.65716069416018,-46.65462626232409,-46.65267445849629,-46.65161755084614,-46.65499955073405,-46.65716069416018,-46.65861065279925,-46.6606554662646,-46.66335597198166,-46.66955124980314,-46.67205109874868,-46.67574652762471,-46.68194180544619,-46.68247282925947,-46.68813708326776,-46.69433236108924,-46.70052763891072,-46.70402497316483,-46.70672291673228,-46.71291819455377],\"lat\":[-23.43781130200312,-23.43781130200312,-23.43875865192719,-23.44444260885573,-23.45012632126711,-23.45580978911577,-23.46149301235645,-23.46717599094363,-23.46954382647075,-23.47285872483201,-23.47854121397628,-23.48209264538711,-23.48386832523121,-23.48422345833095,-23.48491219858625,-23.48990545785078,-23.49251602417784,-23.49558721249047,-23.5012687222046,-23.5029863397085,-23.5012687222046,-23.49988894950891,-23.5012687222046,-23.50586786017132,-23.50694998694798,-23.50730505785961,-23.50932170459057,-23.51263100667519,-23.51659855765025,-23.518311781341,-23.51970295410179,-23.518311781341,-23.51263100667519,-23.51188351807961,-23.51047616596894,-23.5085731604451,-23.50694998694798,-23.50548387756545,-23.5012687222046,-23.49874363701673,-23.49558721249047,-23.49464027039136,-23.48990545785078,-23.48556921718771,-23.48422345833095,-23.47854121397628,-23.47285872483201,-23.46717599094363,-23.46389737931151,-23.46149301235645,-23.45580978911577,-23.4545550185519,-23.45241967983341,-23.45012632126711,-23.44771077337214,-23.44475837707159,-23.44444260885573,-23.44246560809005,-23.44330583702994,-23.44092105565964,-23.43875865192719,-23.43650171886759,-23.43781130200312]},{\"lng\":[-46.68194180544619,-46.68503944435698,-46.68813708326776,-46.68837536318397,-46.69433236108924,-46.69949509260714,-46.70052763891072,-46.70672291673228,-46.70736380754141,-46.70672291673228,-46.70499636389677,-46.70672291673228,-46.70942342244934,-46.71291819455377,-46.71911347237534,-46.71911347237534,-46.71998468331898,-46.72085462888726,-46.72122802827848,-46.72530875019682,-46.72729591478107,-46.72663630973,-46.72928008213366,-46.73150402801829,-46.73158146899107,-46.73150402801829,-46.72840638910756,-46.72530875019682,-46.72519185816245,-46.7196157921987,-46.71911347237534,-46.71428691872365,-46.71291819455377,-46.71167913898947,-46.70672291673228,-46.70238622225718,-46.70052763891072,-46.69787251984437,-46.69433236108924,-46.68813708326776,-46.68731104622488,-46.68218961655906,-46.68194180544619,-46.67574652762471,-46.67574652762471,-46.6708330314214,-46.66955124980314,-46.66624710163168,-46.66955124980314,-46.66955124980314,-46.66955124980314,-46.66335597198166,-46.66254080384726,-46.66272055887176,-46.66335597198166,-46.66729842150442,-46.66955124980314,-46.67246667466035,-46.67574652762471,-46.68157737733905,-46.68194180544619],\"lat\":[-23.45002106955597,-23.45012632126711,-23.45022431416417,-23.45012632126711,-23.44775813748092,-23.44444260885573,-23.44401014246597,-23.44378678014986,-23.44444260885573,-23.44529518130653,-23.45012632126711,-23.45130462128377,-23.45012632126711,-23.4475213167672,-23.45012632126711,-23.45012632126711,-23.45580978911577,-23.46149301235645,-23.46717599094363,-23.47151699028914,-23.47285872483201,-23.47854121397628,-23.48422345833095,-23.48952666550079,-23.48990545785078,-23.4899566459227,-23.48990545785078,-23.48968692393552,-23.48990545785078,-23.49558721249047,-23.49583071078774,-23.5012687222046,-23.50542043977196,-23.50694998694798,-23.5116284915881,-23.50694998694798,-23.50594742861945,-23.50694998694798,-23.50814601146405,-23.50721118863122,-23.50694998694798,-23.5012687222046,-23.50107934249395,-23.49558721249047,-23.49558721249047,-23.48990545785078,-23.48835584590182,-23.48422345833095,-23.47854121397628,-23.47854121397628,-23.47854121397628,-23.47759414945028,-23.47285872483201,-23.46717599094363,-23.46591312795837,-23.46149301235645,-23.45959863179104,-23.45580978911577,-23.45280092483969,-23.45012632126711,-23.45002106955597]}]],[[{\"lng\":[-46.71291819455377,-46.71911347237534,-46.72221111128609,-46.72530875019682,-46.72943893541114,-46.73150402801829,-46.73460166692909,-46.7325365743219,-46.73150402801829,-46.72530875019682,-46.72482474411702,-46.72490383007777,-46.72493777547697,-46.72530875019682,-46.73150402801829,-46.73769930583987,-46.74254778413493,-46.74389458366134,-46.74761175035422,-46.75008986148282,-46.7537037735454,-46.75333500700841,-46.75008986148282,-46.74389458366134,-46.74175828096429,-46.73769930583987,-46.73364033071539,-46.73150402801829,-46.7306888598839,-46.73078364687627,-46.72530875019682,-46.72434073803722,-46.71911347237534,-46.71291819455377,-46.71232249476325,-46.71140715118268,-46.70965752201615,-46.70672291673228,-46.70052763891072,-46.69702596014205,-46.69433236108924,-46.68813708326776,-46.68194180544619,-46.67756866816044,-46.67574652762471,-46.67127216030914,-46.66955124980314,-46.66523332889726,-46.66335597198166,-46.65716069416018,-46.65509560155299,-46.6531017190357,-46.65096541633861,-46.64715293767923,-46.64477013851713,-46.64244690933408,-46.6407874599176,-46.64270504590997,-46.64477013851713,-46.64670616283635,-46.6463189579725,-46.64821195952906,-46.65096541633861,-46.65290144065785,-46.65716069416018,-46.66141994766244,-46.66335597198166,-46.66503037139287,-46.66955124980314,-46.67397644824712,-46.67574652762471,-46.68194180544619,-46.68813708326776,-46.69433236108924,-46.69681047221783,-46.70052763891072,-46.70378831144838,-46.70672291673228,-46.71291819455377],\"lat\":[-23.4286532360047,-23.43023225816389,-23.43307445052684,-23.43496921148769,-23.43875865192719,-23.44160066095328,-23.44444260885573,-23.45012632126711,-23.45107358289331,-23.45451811335481,-23.45580978911577,-23.46149301235645,-23.46717599094363,-23.46757063314842,-23.46867147095616,-23.46841138869305,-23.47285872483201,-23.47513174986155,-23.47854121397628,-23.48090884554206,-23.48422345833095,-23.48990545785078,-23.49288164558649,-23.49445088115513,-23.49558721249047,-23.49930960859366,-23.49558721249047,-23.49507535274119,-23.49558721249047,-23.5012687222046,-23.50628938735637,-23.50694998694798,-23.51174336349562,-23.51207946210236,-23.51263100667519,-23.518311781341,-23.52399231090023,-23.52668300249712,-23.5272029365603,-23.52399231090023,-23.52280888745708,-23.52295950557713,-23.52232159235849,-23.518311781341,-23.51673381296266,-23.51263100667519,-23.5109095114225,-23.50694998694798,-23.50492099194985,-23.50316250434027,-23.5012687222046,-23.49558721249047,-23.49340195122723,-23.48990545785078,-23.48635423684491,-23.48422345833095,-23.47854121397628,-23.47285872483201,-23.4709645073941,-23.46717599094363,-23.46149301235645,-23.45580978911577,-23.45328383360108,-23.45012632126711,-23.44621879525293,-23.45012632126711,-23.45086444779396,-23.45012632126711,-23.44597877145955,-23.44444260885573,-23.44281864611062,-23.43975585503717,-23.43937648517561,-23.43951652697702,-23.43875865192719,-23.43534816042068,-23.43307445052684,-23.43038184875895,-23.4286532360047]},{\"lng\":[-46.71291819455377,-46.71911347237534,-46.72041774139038,-46.72107782875776,-46.72380686466434,-46.72240471371801,-46.72287922948252,-46.72308290187773,-46.72530875019682,-46.73021821564026,-46.72884890895195,-46.73150402801829,-46.73769930583987,-46.74182949105419,-46.73769930583987,-46.73545351762954,-46.73150402801829,-46.72661301921187,-46.72718174116611,-46.72530875019682,-46.72156276825825,-46.71911347237534,-46.71788882443386,-46.71911347237534,-46.71950067723918,-46.71911347237534,-46.71291819455377,-46.7093439958106,-46.70672291673228,-46.70292581097068,-46.70052763891072,-46.69742999999998,-46.69681047221783,-46.69433236108924,-46.68813708326776,-46.68194180544619,-46.67729534708008,-46.67574652762471,-46.67167534505626,-46.66955124980314,-46.66490479143703,-46.66335597198166,-46.66048778780505,-46.65716069416018,-46.65462626232409,-46.65267445849629,-46.65161755084614,-46.65499955073405,-46.65716069416018,-46.65861065279925,-46.6606554662646,-46.66335597198166,-46.66955124980314,-46.67205109874868,-46.67574652762471,-46.68194180544619,-46.68247282925947,-46.68813708326776,-46.69433236108924,-46.70052763891072,-46.70402497316483,-46.70672291673228,-46.71291819455377],\"lat\":[-23.43781130200312,-23.43781130200312,-23.43875865192719,-23.44444260885573,-23.45012632126711,-23.45580978911577,-23.46149301235645,-23.46717599094363,-23.46954382647075,-23.47285872483201,-23.47854121397628,-23.48209264538711,-23.48386832523121,-23.48422345833095,-23.48491219858625,-23.48990545785078,-23.49251602417784,-23.49558721249047,-23.5012687222046,-23.5029863397085,-23.5012687222046,-23.49988894950891,-23.5012687222046,-23.50586786017132,-23.50694998694798,-23.50730505785961,-23.50932170459057,-23.51263100667519,-23.51659855765025,-23.518311781341,-23.51970295410179,-23.518311781341,-23.51263100667519,-23.51188351807961,-23.51047616596894,-23.5085731604451,-23.50694998694798,-23.50548387756545,-23.5012687222046,-23.49874363701673,-23.49558721249047,-23.49464027039136,-23.48990545785078,-23.48556921718771,-23.48422345833095,-23.47854121397628,-23.47285872483201,-23.46717599094363,-23.46389737931151,-23.46149301235645,-23.45580978911577,-23.4545550185519,-23.45241967983341,-23.45012632126711,-23.44771077337214,-23.44475837707159,-23.44444260885573,-23.44246560809005,-23.44330583702994,-23.44092105565964,-23.43875865192719,-23.43650171886759,-23.43781130200312]},{\"lng\":[-46.73150402801829,-46.73769930583987,-46.74017741696846,-46.73769930583987,-46.73150402801829,-46.7310615081739,-46.73150402801829],\"lat\":[-23.47704584582741,-23.477305911071,-23.47854121397628,-23.47942908079387,-23.47913312585207,-23.47854121397628,-23.47704584582741]},{\"lng\":[-46.68194180544619,-46.68423635278752,-46.68194180544619,-46.68022089494022,-46.68194180544619],\"lat\":[-23.51195470765247,-23.51263100667519,-23.5143018481943,-23.51263100667519,-23.51195470765247]}]]],null,\"iso_test - isomax\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"polygon\",\"stroke\":true,\"color\":\"#333333\",\"weight\":0.5,\"opacity\":[0.9,0.9,0.9,0.9,0.9],\"fill\":true,\"fillColor\":[\"#4B0055\",\"#00588B\",\"#009B95\",\"#53CC67\",\"#FDE333\"],\"fillOpacity\":[0.6,0.6,0.6,0.6,0.6],\"smoothFactor\":1,\"noClip\":false},[\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>1&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>id&emsp;<\\/th><td>1&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>isomin&emsp;<\\/th><td> 0&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>isomax&emsp;<\\/th><td>10&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>geometry&emsp;<\\/th><td>sfc_MULTIPOLYGON&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>2&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>id&emsp;<\\/th><td>2&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>isomin&emsp;<\\/th><td>10&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>isomax&emsp;<\\/th><td>15&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>geometry&emsp;<\\/th><td>sfc_MULTIPOLYGON&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>3&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>id&emsp;<\\/th><td>3&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>isomin&emsp;<\\/th><td>15&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>isomax&emsp;<\\/th><td>20&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>geometry&emsp;<\\/th><td>sfc_MULTIPOLYGON&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>4&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>id&emsp;<\\/th><td>4&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>isomin&emsp;<\\/th><td>20&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>isomax&emsp;<\\/th><td>25&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>geometry&emsp;<\\/th><td>sfc_MULTIPOLYGON&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>5&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>id&emsp;<\\/th><td>5&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>isomin&emsp;<\\/th><td>25&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>isomax&emsp;<\\/th><td>30&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>geometry&emsp;<\\/th><td>sfc_MULTIPOLYGON&emsp;<\\/td><\\/tr><\\/table><\\/div>\"],{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"10\",\"15\",\"20\",\"25\",\"30\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},{\"stroke\":true,\"weight\":1,\"opacity\":0.9,\"fillOpacity\":0.84,\"bringToFront\":false,\"sendToBack\":false}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addHomeButton\",\"args\":[-46.7537037735454,-23.5272029365603,-46.6407874599176,-23.4286532360047,true,\"iso_test - isomax\",\"Zoom to iso_test - isomax\",\"<strong> iso_test - isomax <\\/strong>\",\"bottomright\"]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"iso_test - isomax\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#4B0055 , #4B0055 0%, #00588B 25%, #009B95 50%, #53CC67 75%, #FDE333 100%, #FDE333 \"],\"labels\":[\"10\",\"15\",\"20\",\"25\",\"30\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":1,\"position\":\"topright\",\"type\":\"numeric\",\"title\":\"iso_test - isomax\",\"extra\":{\"p_1\":0,\"p_n\":1},\"layerId\":null,\"className\":\"info legend\",\"group\":\"iso_test - isomax\"}]}],\"limits\":{\"lat\":[-23.5272029365603,-23.4286532360047],\"lng\":[-46.7537037735454,-46.6407874599176]},\"fitBounds\":[-23.5272029365603,-46.7537037735454,-23.4286532360047,-46.6407874599176,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\\"position\\\":\\\"relative\\\",\\\"bottomleft\\\":\\\"0px\\\",\\\"background-color\\\":\\\"rgba(255, 255, 255, 0.7)\\\",\\\"box-shadow\\\":\\\"0 0 2px #bbb\\\",\\\"background-clip\\\":\\\"padding-box\\\",\\\"margin\\\":\\\"0\\\",\\\"padding-left\\\":\\\"5px\\\",\\\"padding-right\\\":\\\"5px\\\",\\\"color\\\":\\\"#333\\\",\\\"font-size\\\":\\\"9px\\\",\\\"font-family\\\":\\\"\\\\\\\"Helvetica Neue\\\\\\\", Arial, Helvetica, sans-serif\\\",\\\"text-align\\\":\\\"left\\\",\\\"z-index\\\":\\\"700\\\"});\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\nAo todo, temos 225 pontos que representam um estabelecimento único. Ao todo, calcula-se 1125 isócronas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlocations <- unique(dat[, .(code_cnes, lng, lat)])\nnrow(locations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 225\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeo_locations <- st_as_sf(\n  locations[, .(lng, lat)],\n  coords = c(\"lng\", \"lat\"),\n  crs = 4326\n)\n\nmapview(geo_locations)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-4d878cfa2971468dc216\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4d878cfa2971468dc216\">{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[-23.4757,-23.4757036,-23.705922,-23.605637,-23.617749,-23.5853458,-23.5958821,-23.6317273,-23.6265,-23.5083469,-23.6754466153,-23.61825525,-23.5312499,-23.5557851469,-23.4346964,-23.5806193,-23.59935,-23.594245,-23.706961213,-23.6807463,-23.607115,-23.457383,-23.5928487,-23.567386,-23.578,-23.6502,-23.4595064214,-23.56491995,-23.34059,-23.5604021,-23.548,-23.48698165,-23.59305255,-23.4845293,-23.5963564,-23.5543325,-23.5977766,-23.59473585,-23.548,-23.58433225,-23.565479,-23.48497835,-23.5471970429,-23.4764601,-23.48661,-23.49242315,-23.5310089079,-23.5974247,-23.7290263,-23.53590315,-23.594382,-23.5966194,-23.569,-23.5565915994,-23.5304998592,-23.5343002192,-23.5599861,-23.548,-23.5368617,-23.5440866,-23.4727762,-23.548,-23.325,-23.513847,-23.548,-23.485,-23.5366,-23.5595,-23.5571423446,-23.48012,-23.5566508493,-23.5426746817,-23.574848,-23.5431724,-23.6430001,-23.548,-23.6133141,-23.56749975,-23.4973179,-23.543,-23.5479957408,-23.53907145,-23.5952094702,-23.548,-23.5376484929,-23.6533422,-23.476901,-23.525,-23.582218,-23.5969409,-23.4996441,-23.5875541,-23.2681564,-23.548,-23.5606849,-23.5717374,-23.585543,-23.551918,-23.567386,-23.6024586,-23.4751131,-23.601580529,-23.5796520801,-23.5007389,-23.5883,-23.6436999,-23.5950816558,-23.59698,-23.578184,-23.5944957,-23.598149,-23.5080145,-23.5964739,-23.6555597,-23.567386,-23.548,-23.5628212,-23.611336,-23.4896036005,-23.4710424,-23.53790175,-23.6505946,-23.5875985401,-23.43049835,-23.5342547,-23.5183556548,-23.4666613675,-23.56956825,-23.59068825,-23.5647673849,-23.5431724,-23.56657,-23.648092,-23.5580077968,-23.6601402203,-23.6136884,-23.5084516,-23.5983622,-23.5052583,-23.5661752,-23.50856675,-23.4786869,-23.5828696,-23.4957474,-23.6154892,-23.5656559292,-23.487515039,-23.548,-23.675062216,-23.5450186,-23.6369581,-23.5811267,-23.5635872,-23.522085,-23.548,-23.6132876705,-23.58113,-23.469156,-23.61426,-23.5643440671,-23.4987139483,-23.5658021,-23.548,-23.5418774,-23.5759449753,-23.4853109,-23.548,-23.549246,-23.5427214,-23.6123542331,-23.5084478,-23.6109616,-23.4862481,-23.59068825,-23.5622142,-23.5466454,-23.5783828946,-23.5653811194,-23.5676418,-23.5973956,-23.567386,-23.6295176622,-23.5632883,-23.5668284,-23.548,-23.56365,-23.6918835,-23.5489,-23.5561305,-23.548,-23.5853163,-23.5674649,-23.548,-23.5498300301,-23.47608,-23.5580661,-23.523701,-23.5654425825,-23.5843835,-23.564118,-23.5418703,-23.552317,-23.5712,-23.4949697,-23.5641421688,-23.5554299,-23.5784001978,-23.548,-23.5804904,-23.61505545,-23.5333106793,-23.65718,-23.730753,-23.541447,-23.5758,-23.6326261,-23.8264629,-23.5718827783,-23.5651605,-23.5707135513,-23.5482653,-23.5676438,-23.5649582524,-23.48707,-23.5849575],[-46.6974281,-46.6974047,-46.741949,-46.675944216,-46.7051417,-46.7215587,-46.6319201,-46.6913157,-46.6293,-46.7551251,-46.6865035,-46.6320921049,-46.8341173,-46.6671967506,-46.7228099,-46.6397502,-46.71532,-46.55134,-46.7021969733,-46.6784764,-46.595253,-46.460381,-46.7109415395,-46.570383,-46.765,-46.7052,-46.5822029114,-46.7409501919,-46.38356,-46.5324478,-46.636,-46.7239345559,-46.5607617767,-46.7275153,-46.6088742979,-46.4613033146,-46.6435335,-46.4867109,-46.636,-46.6116193317,-46.6379025,-46.6314291534,-46.6003259284,-46.6105669,-46.76304,-46.3889813729,-46.4448818564,-46.6511195,-46.6908452569,-46.5887060559,-46.5969403,-46.6358133243,-46.614,-46.6723251343,-46.6971892118,-46.6437496051,-46.6468609,-46.636,-46.5901771,-46.5850511,-46.6156307,-46.636,-46.381,-46.644913,-46.636,-46.481,-46.4505148,-46.6557905,-46.654343605,-46.67261,-46.4002536764,-46.6507816315,-46.6386506831,-46.6499051877,-46.6432177,-46.636,-46.6562505,-46.6415424624,-46.439865,-46.5023,-46.6352677345,-46.6620297899,-46.6444006562,-46.636,-46.7283082008,-46.6456764,-46.729302,-46.711,-46.641205,-46.6327828,-46.4729162,-46.5145716,-46.7329013,-46.636,-46.6413549,-46.590166,-46.650952,-46.5852143331,-46.570383,-46.6518025,-46.7539243,-46.6605985101,-46.6445589066,-46.3994955,-46.6692,-46.6428989,-46.6274705529,-46.64555,-46.7081152,-46.4475548,-46.6460227,-46.5686215,-46.6458376,-46.7058596158,-46.570383,-46.636,-46.5908971,-46.493671,-46.6982143763,-46.5748253,-46.4031351868,-46.7092508,-46.6387603992,-46.5686524365,-46.6880967,-46.8496224989,-46.5837800503,-46.6454059798,-46.6731421337,-46.6355965297,-46.6499051877,-46.63937,-46.748286,-46.6743850708,-46.7727577686,-46.650318,-46.7511716,-46.6889967,-46.6248302,-46.6379687,-46.6201016636,-46.4232124,-46.6117035,-46.6282838,-46.4770053,-46.6495279034,-46.626913247,-46.636,-46.6856401112,-46.5907265994,-46.7012598,-46.6632759,-46.6352581,-46.5617446,-46.636,-46.6203077887,-46.64037,-46.618354,-46.69693,-46.6410499453,-46.4773395374,-46.6866092,-46.636,-46.5719665,-46.6362762451,-46.3027334,-46.636,-46.659569,-46.6502345,-46.6557774319,-46.7534847,-46.6516276,-46.4741743,-46.6731421337,-46.638575,-46.6401857,-46.6821270884,-46.5946215391,-46.6509728,-46.404147,-46.570383,-46.7352944849,-46.5899753059,-46.5960781,-46.636,-46.56278,-46.7757837,-46.5582452488,-46.66817161,-46.636,-46.7182173,-46.6428538,-46.636,-46.6593647003,-46.53745,-46.5690743,-46.701312,-46.6359329224,-46.6076443,-46.5913992,-46.6505505,-46.6248795,-46.6236,-46.6158452,-46.6389982931,-46.6796969,-46.4421815622,-46.636,-46.644591,-46.6602401648,-46.5273839527,-46.6538,-46.713639,-46.6515815,-46.6578,-46.7100774,-46.7305962,-46.6470809865,-46.5422197,-46.6384863853,-46.6024697,-46.658462,-46.6468977928,-46.55138,-46.6984492],6,null,\"geo_locations\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":0.9,\"fill\":true,\"fillColor\":\"#6666FF\",\"fillOpacity\":0.6},null,null,\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>1&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addHomeButton\",\"args\":[-46.8496224989,-23.8264629,-46.3027334,-23.2681564,true,\"geo_locations\",\"Zoom to geo_locations\",\"<strong> geo_locations <\\/strong>\",\"bottomright\"]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"geo_locations\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#6666FF\"],\"labels\":[\"geo_locations\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":1,\"position\":\"topright\",\"type\":\"factor\",\"title\":\"\",\"extra\":null,\"layerId\":null,\"className\":\"info legend\",\"group\":\"geo_locations\"}]}],\"limits\":{\"lat\":[-23.8264629,-23.2681564],\"lng\":[-46.8496224989,-46.3027334]},\"fitBounds\":[-23.8264629,-46.8496224989,-23.2681564,-46.3027334,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\\"position\\\":\\\"relative\\\",\\\"bottomleft\\\":\\\"0px\\\",\\\"background-color\\\":\\\"rgba(255, 255, 255, 0.7)\\\",\\\"box-shadow\\\":\\\"0 0 2px #bbb\\\",\\\"background-clip\\\":\\\"padding-box\\\",\\\"margin\\\":\\\"0\\\",\\\"padding-left\\\":\\\"5px\\\",\\\"padding-right\\\":\\\"5px\\\",\\\"color\\\":\\\"#333\\\",\\\"font-size\\\":\\\"9px\\\",\\\"font-family\\\":\\\"\\\\\\\"Helvetica Neue\\\\\\\", Arial, Helvetica, sans-serif\\\",\\\"text-align\\\":\\\"left\\\",\\\"z-index\\\":\\\"700\\\"});\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\nO código abaixo importa as isócronas para todos os pontos. Note que este código leva um tempo considerável para rodar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_isochrone = function(dat) {\n  iso = osrm::osrmIsochrone(\n    dat[, .(lng, lat)],\n    breaks = seq(from = 10, to = 30, by = 5),\n    osrm.profile = \"bike\"\n  )\n\n  return(iso)\n}\n\nlocations <- split(locations, by = \"code_cnes\")\ngeo_locations <- lapply(locations, get_isochrone)\n```\n:::\n\n\n\n\n## Grid\n\nPara montar o grid, uso o pacote `h3jsr` que implementa as funções da biblioteca H3 da Uber dentro do R (via JavaScript). Importo o shapefile da cidade de São Paulo do IBGE via pacote `geobr`.\n\nVale notar que é possível conseguir um grid H3 em resolução 9 diretamente do pacote `aopdata::read_grid()`, que oferece os dados do projeto de Acesso a Oportunidades do IPEA. Este atalho, contudo, está disponível apenas para as cidades que entraram no estudo. Assim, o código abaixo é mais geral, pois funciona para qualquer cidade do Brasil.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(h3jsr)\nlibrary(geobr)\n\nspo = read_municipality(3550308, simplified = FALSE, showProgress = FALSE)\ngrid = polygon_to_cells(spo, res = 9, simple = FALSE)\n\npolyfill = polygon_to_cells(spo, res = 9, simple = FALSE)\nindex_h3 = unlist(str_split(unlist(polyfill$h3_addresses), \", \"))\n\ngrid = data.frame(\n  id_hex = index_h3\n)\n\nh3grid = cell_to_polygon(grid)\nh3grid = st_as_sf(h3grid, crs = 4326)\nh3grid$id_hex = index_h3\n```\n:::\n\n\nFazendo a interseção espacial entre o grid H3 e as isócronas, calcula-se para cada hexágono o tempo mínimo necessário para chegar no hospital/leito mais próximo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisocronas <- dplyr::bind_rows(geo_locations, .id = \"code_cnes\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatch_h3_destination = function(dest) {\n  iso = isocronas |>\n    dplyr::filter(code_cnes == dest)\n\n  hex_codes = lapply(1:5, \\(i) {\n    idhex = dplyr::filter(iso, id == i) |>\n      h3jsr::polygon_to_cells(res = 9) |>\n      unlist()\n\n    return(data.frame(id_hex = idhex))\n  })\n\n  names(hex_codes) = as.character(c(10, 15, 20, 25, 30))\n\n  h3iso = rbindlist(hex_codes, idcol = \"isomax\")\n}\n\ncnes_codes <- unique(isocronas$code_cnes)\n\nod_table <- parallel::mclapply(cnes_codes, match_h3_destination)\n```\n:::\n\n\nAgora, para cada hexágono, encontra-se o leito/hospital mais próximo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Consolida tabela que faz o match das origens e destinos (hospitais)\nnames(od_table) <- cnes_codes\nod <- rbindlist(od_table, idcol = \"code_cnes\")\n# Encontra o hospital mais próximo para cada ponto\nod[, isomax := as.numeric(isomax)]\nmin_table <- od[, .SD[which.min(isomax)], by = \"id_hex\"]\n\n# Grid H3\ndtgrid <- setDT(st_drop_geometry(h3grid))\ntimetable <- merge(dtgrid, min_table, by = \"id_hex\", all.x = TRUE)\n\n# Junta os dados com o grid\nacesso_saude <- dplyr::left_join(h3grid, timetable, by = \"id_hex\")\n# Troca NAs por > 30\nacesso_saude <- acesso_saude |>\n  dplyr::mutate(\n    isomax = ifelse(is.na(isomax), 30, isomax)\n  )\n```\n:::\n\n\n## Resultado\n\nO mapa abaixo mostra o resultado final. De maneira geral, a área central da cidade, o Centro Expandido, está relativamente bem atendido de hospitais numa distância de 10 a 15 minutos até o hospital mais próximo. As áreas periféricas da cidade tem indicadores bastante piores, contudo, vale notar que estas áreas potencialmente podem ser atendidas por hospitais em municípios vizinhos, que fazem conurbação com São Paulo.\n\nComo comentado inicialmente, esta métrica é bastante rudimentar. Uma melhoria interessante seria ponderar o número total de leitos disponíveis em relação a população atendida em cada região.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(acesso_saude) +\n  geom_sf(aes(fill = isomax, color = isomax)) +\n  scale_fill_distiller(\n    name = \"\",\n    palette = \"RdBu\",\n    labels = c(\"Até 10 min.\", \"15 min.\", \"20 min\", \"25 min\", \"30 min. ou mais\")\n  ) +\n  scale_color_distiller(\n    name = \"\",\n    palette = \"RdBu\",\n    labels = c(\"Até 10 min.\", \"15 min.\", \"20 min\", \"25 min\", \"30 min. ou mais\")\n  ) +\n  labs(\n    title = \"Acesso a Hospitais\",\n    subtitle = \"Tempo mínimo necessário para chegar ao hospital/leito mais próximo.\",\n    caption = \"Fonte: Open Source Routing Machine (osrm), Dados Abertos (Ministério da Saúde).\"\n  ) +\n  ggthemes::theme_map() +\n  theme(\n    legend.position = \"top\",\n    legend.justification = 0.5,\n    legend.key.size = unit(1, \"cm\"),\n    legend.key.width = unit(1.75, \"cm\"),\n    legend.text = element_text(size = 12),\n    legend.margin = margin(),\n    plot.margin = margin(10, 5, 5, 10),\n    plot.title = element_text(size = 18, hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/map-acess-health-1.png){width=100%}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../../../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../../../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n<script src=\"../../../site_libs/HomeButton-0.0.1/home-button.js\"></script>\n<script src=\"../../../site_libs/HomeButton-0.0.1/easy-button-src.min.js\"></script>\n<link href=\"../../../site_libs/iso_test - isomax-CSS-0.0.1/iso_test - isomax_home-button.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/clipboard-0.0.1/setClipboardText.js\"></script>\n<link href=\"../../../site_libs/mapviewCSS-0.0.1/mapview-popup.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/mapviewCSS-0.0.1/mapview.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/geo_locations-CSS-0.0.1/geo_locations_home-button.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}