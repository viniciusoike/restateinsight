{
  "hash": "e1f5b14d02dc3db109e6d89236e83d97",
  "result": {
    "markdown": "---\ntitle: \"Visualizando uma única variável\"\ndate: '2023-06-28'\ncategories: ['data-visualization', 'tutorial-R', 'repost', 'ggplot2']\ndescription: 'Algumas ideias soltas sobre como visualizar uma única variável usando vários tipos de gráficos distintos em ggplot2.'\nimage: \"/static/visualizando-unica-variavel.png\"\nimage-alt: \"/static/visualizando-unica-variavel.png\"\nformat:\n  html:\n    code-fold: true\n---\n\n\n\n\nHá algum tempo atrás tive o seguinte problema: como visualizar várias observações de uma única variável numérica num gráfico? Tentei algumas soluções óbvias, mas nenhuma pareceu funcionar muito bem. Neste post junto algumas das minhas tentativas.\n\nOs dados provêm do [Mapa da Desigualdade 2019](https://www.nossasaopaulo.org.br/2019/11/05/mapa-da-desigualdade-2019-e-lancado-em-sao-paulo/). Neste site pode-se baixar todos os dados além de baixar o relatório completo que apresenta informações socioeconômicas atualizadas para todos os distritos de São Paulo, compilando e sistematizando dados de diversas fontes públicas.\n\n# Setup\n\n### Pacotes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(forcats)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(classInt)\nlibrary(ggrepel)\nlibrary(showtext)\nlibrary(sf)\n```\n:::\n\n\n### Tema\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Importa a fonte Roboto Light\nsysfonts::font_add_google(\"Roboto\", family = \"Roboto Light\", regular.wt = 300)\nshowtext::showtext_auto()\n\n# Um tema básico para os gráficos\ntheme_vini <- theme_minimal() +\n  theme(\n    text = element_text(family = \"Roboto Light\"),\n    plot.title = element_text(family = \"Roboto Light\", size = 14),\n    panel.grid.minor = element_blank(),\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n### Dados\n\nO código abaixo mostra como importei e limpei os dados.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Importa os dados do arquivo xlsx\ndf <- readxl::read_excel(\n  here::here(\"posts\", \"general-posts\", \"repost-mapa-desigualdade\", \"tabela.xlsx\"),\n  sheet = 3\n)\n# Arruma o nome das colunas\ndf <- janitor::clean_names(df)\n\n# Alguns bairros para destacar nos graficos\nsel_bairro <- c(\"Grajaú\", \"Penha\", \"Sapopemba\", \"Bela Vista\", \"Moema\")\n\n# Função para converter os numeros\nas_numeric_string <- function(x) {\n  stopifnot(is.character(x))\n  x <- stringr::str_remove_all(x, \"\\\\.\")\n  x <- stringr::str_replace(x, \",\", \".\")\n  return(as.numeric(x))\n  \n}\n\n# Função para abreviar o nome dos distritos\npat <- c(\"Vila\", \"Jardim\", \"Cidade\", \"Santo\")\npat <- paste(pat, collapse = \"|\")\n\nstr_shorten <- function(x) {\n  \n  vl <- c(\n    \"Vila\" = \"Vl.\", \"Jardim\" = \"Jd.\", \"Cidade\" = \"Cd.\", \"Santo\" = \"St.\",\n    \"Santa\" = \"St.\"\n    )\n  \n  return(unname(vl[x]))\n\n}\n\n# Limpa os dados\ndf <- df %>%\n  # Renomeia a coluna de idade_media_ao_morrer\n  rename(expec_vida = idade_media_ao_morrer) %>%\n  # Seleciona apenas as colunas de interesse\n  select(id_regiao, distrito, expec_vida, populacao_total) %>%\n  mutate(\n    # Encurta o nome dos distritos\n    label_distrito = stringr::str_replace_all(distrito, pat, str_shorten),\n    # Converte as colunas numéricas\n    expec_vida = as_numeric_string(expec_vida),\n    populacao_total = as_numeric_string(populacao_total),\n    # Variável dummy para indicar os bairros destacados\n    highlight = factor(if_else(distrito %in% sel_bairro, 1L, 0L))\n    ) %>%\n  na.omit()\n\n# Tabela auxiliar somente com os valores médios do municíoio\ndf_media <- filter(df, distrito == \"Município SP\")\n# Tabela auxiliar somente com os municipios destacados\ndf_aux_label <- filter(df, highlight == 1)\n\n# Remove a média da tabela\ndf <- filter(df, distrito != \"Município SP\")\n```\n:::\n\n\n# Expectativa de vida por distrito de São Paulo\n\nHá mais de 90 distritos em São Paulo e temos estimativas da expectativa de vida média em cada um deles. O expec_vida mais alto foi de 80,57 anos, registrado no distrito de Moema, cifra próxima a de países como Dinamarca e Liechtenstein. Como referência, a expectativa de vida média em São Paulo é de 68,7.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Distritos com expectativa de vida mais elevada</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Distrito </th>\n   <th style=\"text-align:center;\"> Expectativa de Vida </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> Jardim Paulista </td>\n   <td style=\"text-align:center;\"> 80.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Moema </td>\n   <td style=\"text-align:center;\"> 79.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Itaim Bibi </td>\n   <td style=\"text-align:center;\"> 79.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Alto de Pinheiros </td>\n   <td style=\"text-align:center;\"> 79.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Pinheiros </td>\n   <td style=\"text-align:center;\"> 78.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Vila Mariana </td>\n   <td style=\"text-align:center;\"> 78.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Santo Amaro </td>\n   <td style=\"text-align:center;\"> 78.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Consolação </td>\n   <td style=\"text-align:center;\"> 78.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Perdizes </td>\n   <td style=\"text-align:center;\"> 77.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Campo Belo </td>\n   <td style=\"text-align:center;\"> 77.9 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nDo outro lado temos expec_vidaes significativamente mais baixos, registrados em alguns dos distritos de menor renda de São Paulo como Cidade Tiradentes e Marsilac. A diferença na expectativa de vida entre os distritos chega a mais de 20 anos.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Distritos com expectativa de vida mais baixa</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Distrito </th>\n   <th style=\"text-align:center;\"> Expectativa de Vida </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> Iguatemi </td>\n   <td style=\"text-align:center;\"> 59.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Cidade Tiradentes </td>\n   <td style=\"text-align:center;\"> 59.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Jardim Ângela </td>\n   <td style=\"text-align:center;\"> 59.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> São Rafael </td>\n   <td style=\"text-align:center;\"> 59.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Grajaú </td>\n   <td style=\"text-align:center;\"> 60.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Guaianases </td>\n   <td style=\"text-align:center;\"> 61.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Lajeado </td>\n   <td style=\"text-align:center;\"> 61.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Anhanguera </td>\n   <td style=\"text-align:center;\"> 61.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Marsilac </td>\n   <td style=\"text-align:center;\"> 61.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> Brás </td>\n   <td style=\"text-align:center;\"> 61.7 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nO objetivo aqui é de enxergar mais claramente estas diferenças. Como é a expectativa de vida nos diferentes distritos de São Paulo?\n\n## Histograma\n\nUma solução bastante clássica seria de fazer um histograma. Neste tipo de gráfico a dispersão fica clara, mas pode ser difícil de dar destaque para distritos específicos. O histograma conta a frequência de observações dentro de janelas de tamanho fixo. A princípio, a única dificuldade em usar o histograma está em definir a amplitude de cada um destes intervalos, mas, na prática, este problema não costuma ser muito complexo.\n\nAinda que o gráfico seja comumente usado, ele não é tão popular, sendo raramente visto em publicações de jornal, por exemplo.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = expec_vida)) +\n  geom_histogram(bins = 11, colour = \"white\", fill = \"#08519c\") +\n  geom_hline(yintercept = 0) +\n  geom_text(\n    data = df_aux_label,\n    aes(x = expec_vida,\n        y = c(15, 17, 19, 16, 12),\n        label = stringr::str_wrap(label_distrito, 5)),\n    colour = \"gray25\",\n    family = \"Roboto Light\",\n    size = 4\n  ) +\n  geom_segment(\n    data = df_aux_label,\n    aes(x = expec_vida,\n        xend = expec_vida,\n        y = 0,\n        yend = c(15, 17, 19, 15, 12) - 0.5),\n    colour = \"gray70\"\n  ) +\n  scale_y_continuous(breaks = seq(0, 20, 4)) +\n  scale_x_continuous(limits = c(min(df$expec_vida) - 2, max(df$expec_vida) + 2)) +\n  labs(\n    title = \"Expectativa de Vida\",\n    x = \"Anos de idade\",\n    y = \"\",\n    caption = \"Fonte: SMS (Secretaria Municipal de Saúde)\",\n    subtitle = \"Idade média ao morrer em 2022.\"\n  ) +\n  theme_vini +\n  theme(panel.grid.major.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=504}\n:::\n:::\n\n\n## Gráfico de colunas\n\nUm simples gráfico de colunas também poderia ser uma alternativa. Neste caso, como há muitas observações (distritos) diferentes, o gráfico acaba sobrecarregado e confuso.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nordered_df <- df %>%\n  mutate(\n    label_distrito = factor(label_distrito),\n    label_distrito = forcats::fct_reorder(label_distrito, expec_vida)\n  )\n\nggplot(ordered_df, aes(x = label_distrito, y = expec_vida)) +\n  geom_col(colour = \"white\", fill = \"#08519c\") +\n  coord_flip() +\n  scale_y_continuous(expand = c(0, 0)) +\n  labs(\n    title = \"Expectativa de Vida\",\n    x = \"Anos de idade\",\n    y = \"\",\n    caption = \"Fonte: SMS (Secretaria Municipal de Saúde)\",\n    subtitle = \"Idade média ao morrer em 2022.\"\n  ) +\n  theme_vini +\n  theme(\n    text = element_text(size = 6),\n    axis.text.x = element_text(angle = 90, hjust = 1),\n    panel.grid.major.y = element_blank()\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=100% height=805px}\n:::\n:::\n\n\nOutra saída seria dividir os dados em grupos menores (e.g. alta, média-alta, média-baixa, baixa) e usar a função `facet_wrap`. O lado negativo disto, além de tornar o código mais complexo, é de acrescentar divisões nos dados que eventualmente são muito artificiais.\n\nAqui eu faço um divisão por quintil e crio uma denominação um tanto arbitrária para permitir a leitura dos dados.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nxl <- c(\"Baixo\", \"Médio-Baixo\", \"Médio\", \"Médio-Alto\", \"Alto\")\n\nquintile_df <- ordered_df %>%\n  mutate(\n    life_group = ntile(expec_vida, 5),\n    life_group = factor(life_group, labels = xl)\n    )\n\nggplot(quintile_df, aes(x = label_distrito, y = expec_vida)) +\n  geom_col(colour = \"white\", fill = \"#08519c\") +\n  coord_flip() +\n  facet_wrap(vars(life_group), scales = \"free_y\") +\n  labs(x = NULL, y = NULL, title = \"Expectativa de Vida\") +\n  theme_vini +\n  theme(\n    text = element_text(size = 8),\n    strip.text = element_text(size = 10),\n    panel.grid.major.y = element_blank()\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=504}\n:::\n:::\n\n\n## Lolipop\n\nEste tipo de gráfico vem ganhando espaço mesmo em veículos de mídia populares por ser bastante simples. Ele é mais comumente usado para mostrar a evolução de uma variável em dois momentos do tempo, mas também pode-se usá-lo analogamente a um gráfico de colunas.\n\nInfelizmente, neste exemplo, ele vai sofrer do mesmo problema que o gráfico de colunas. A título de exemplo faço um gráfico deste estilo apenas para os distritos com as maiores e menores expectativas de vida.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Ordena a base de dados pela expectativa de vida\nordered_df <- arrange(ordered_df, expec_vida)\n# Cria uma tabela com as primeiras 5 e últimas 5 linhas\ntop_df <- rbind(head(ordered_df, 5), tail(ordered_df, 5))\n\nggplot(top_df, aes(x = label_distrito, y = expec_vida)) +\n  geom_segment(aes(xend = label_distrito, yend = 55)) +\n  geom_point(colour = \"black\", fill = \"#08519c\", size = 4, shape = 21) +\n  coord_flip() +\n    labs(\n      y = \"Anos de vida\",\n      x = NULL,\n      title = \"Expectativa de vida\",\n      subtitle = \"Idade média ao morrer em 2022. Dados apenas dos distritos\\ncom maiores e menores expectativas de vida.\",\n      caption = \"Fonte: SMS (Secretaria Municipal de Saúde)\"\n    ) +\n  theme_vini +\n  theme(panel.grid.major.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=504}\n:::\n:::\n\n\n## Gráfico de dispersão\n\nGráficos de dispersão apresentam a relação entre duas variáveis. Neste caso, podemos fazer alguns truques para inventar uma variável falsa que serve somente para que o `R` faça o gráfico.\n\nUma alternativa seria impor um expec_vida constante e arbitrário para uma das variáveis. Neste caso escolho `x = 1` e escondo o eixo. No gráfico abaixo, cada distrito é um ponto sobre uma mesma linha. Para amenizar a sobreposição de observações uso `alpha = 0.5` que acrescenta um pouco de transparência nas observações.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_aux <- tibble(\n  x = 1.025,\n  y = df_media$expec_vida,\n  label = paste0(\"Média = \", round(y, 1))\n)\n\nggplot(df, aes(x = 1, y = expec_vida)) +\n  geom_vline(xintercept = 1, colour = \"gray60\", alpha = 0.5) +\n  geom_point(\n    aes(colour = highlight, alpha = highlight, size = populacao_total),\n    shape = 21,\n    fill = \"#08519c\",\n  ) +\n  geom_text(\n    data = df_aux_label,\n    aes(x = c(0.95, 0.95, 1.05, 1.05, 1.05), y = expec_vida, label = label_distrito),\n    family = \"Roboto Light\",\n    size = 4\n  ) +\n  geom_segment(\n    data = df_aux_label,\n    colour = \"gray25\",\n    aes(\n      x = 1, xend = c(0.955, 0.955, 1.045, 1.045, 1.045),\n      y = expec_vida, yend = expec_vida\n    )\n  ) +\n  geom_segment(\n    data = tibble(x = 1, xend = 1.02, y = df_media$expec_vida, yend = y),\n    aes(x = x, y = y, xend = xend, yend = yend),\n    colour = \"gray25\",\n  ) +\n  geom_text(\n    data = df_aux,\n    aes(x = x, y = y, label = label),\n    family = \"Roboto Light\",\n    size = 3\n  ) +\n  coord_flip() +\n  scale_x_continuous(limits = c(0.94, 1.06)) +\n  scale_y_continuous(limits = c(min(df$expec_vida) - 2, max(df$expec_vida) + 2)) +\n  scale_alpha_manual(values = c(0.45, 0.8)) +\n  scale_size_continuous(range = c(1, 7.5)) + \n  scale_colour_manual(values = c(\"#08519c\", \"black\")) +\n  labs(\n    title = \"Expectativa de Vida\",\n    x = \"\",\n    y = \"Anos de idade\",\n    caption = \"Fonte: SMS (Secretaria Municipal de Saúde)\",\n    subtitle = \"Idade média ao morrer em 2022. Cada ponto representa um distrito de São Paulo.\"\n  ) +\n  theme_vini +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=504}\n:::\n:::\n\n\nUma solucão alternativa seria criar uma variável aleatória qualquer para servir como a variável \"falsa\". Estranhamente, cria-se uma sensação melhor de dispersão e não há mais o problema de sobreposição. Contudo, o gráfico pode ser bastante confuso, pois dá a entender que estamos vendo a relação entre duas variáveis distintas, quando uma delas, na verdade, não representa coisa alguma.\n\nAinda assim, ideias similares foram implementadas pelo portal Nexo [nesta postagem](https://www.nexojornal.com.br/grafico/2019/11/12/A-desigualdade-na-cidade-de-S%C3%A3o-Paulo-em-20-indicadores).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Cria uma variável aleatória qualquer seguindo uma Gaussiana\ndf <- df %>% mutate(x = rnorm(nrow(.)))\n\n# Para destacar o expec_vida médio\ndf_aux <- tibble(\n  x = 2.25,\n  y = df_media$expec_vida + 0.75,\n  label = paste(\"Média =\", round(y - 0.75, 1))\n)\n\ndf_aux_label <- df %>%\n  mutate(label_distrito = if_else(highlight == 1L, label_distrito, \"\"))\n\nggplot(df, aes(x = x, y = expec_vida)) +\n  geom_jitter(aes(alpha = highlight, size = populacao_total),\n    shape = 21,\n    fill = \"#08519c\"\n  ) +\n  ggrepel::geom_text_repel(\n    data = df_aux_label,\n    aes(label = label_distrito),\n    force = 5,\n    family = \"Roboto Light\",\n    size = 3\n  ) +\n  geom_text(\n    data = df_aux,\n    aes(x = x, y = y, label = label),\n    hjust = -0.15\n  ) +\n  geom_hline(aes(yintercept = mean(expec_vida)), colour = \"gray70\", size = 1) +\n  coord_flip() +\n  scale_alpha_manual(values = c(0.65, 1)) +\n  scale_y_continuous(limits = c(min(df$expec_vida) - 2, max(df$expec_vida) + 2)) +\n  scale_x_continuous(limits = c(-3, 3)) +\n  labs(\n    title = \"Expectativa de Vida (idade média ao morrer)\",\n    x = \"\",\n    y = \"Anos de idade\",\n    caption = \"Fonte: SMS (Secretaria Municipal de Saúde)\"\n  ) +\n  guides(colour = FALSE, alpha = FALSE) +\n  theme_vini +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=504}\n:::\n:::\n\n\n## Mapa\n\nDeixei a visualização mais óbvia para o final. Como a variável está distribuída espacialmente, pode-se fazer um simples mapa de São Paulo separado por distritos.\n\nAqui, eu uso o shapefile de distritos da Pesquisa Origem e Destino. Apesar de não haver um identificador comum entre as bases, foi relativamente simples fazer o join compatibilizando o nome dos distritos.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Importa o shapefile\ndistritos <- st_read(\n  here::here(\"posts\", \"general-posts\", \"repost-mapa-desigualdade\", \"districts.gpkg\"),\n  quiet = TRUE\n  )\n\ndistritos <- distritos %>%\n  # Filtra apenas distritos de SP (capital)\n  filter(code_district <= 96) %>%\n  # Renomeia a coluna para facilitar o join\n  rename(distrito = name_district)\n\n# Verifica se ha distritos com nome diferente (Mooca)\nanti <- anti_join(select(df, distrito), distritos, by = \"distrito\")\n# Altera a grafia para garantir o join\ndf <- df %>%\n  mutate(\n    distrito = if_else(distrito == \"Moóca\", \"Mooca\", distrito)\n  )\n# Junta os dados no sf\ndistritos <- left_join(distritos, df, by = \"distrito\")\n```\n:::\n\n\nO gráfico abaixo mostra a expectativa de vida em cada distrito na cidade.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(distritos) +\n  geom_sf(aes(fill = expec_vida), linewidth = 0.1) +\n  scale_fill_viridis_c(name = \"Expectativa\\nde Vida\") +\n  ggtitle(\"Expectativa de Vida por Distrito\") +\n  theme_void() +\n  theme(\n    legend.title = element_text(hjust = 0.5, size = 10),\n    legend.position = c(0.8, 0.3)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nOutra maneira de apresentar este dado é agrupando-o de alguma forma. Eu sou particularmente parcial ao algoritmo de Jenks.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Encontra os intervalos de cada grupo\nbreaks <- classInt::classIntervals(distritos$expec_vida, n = 7, style = \"jenks\")\n# Classifica os valores em grupos\ndistritos <- distritos %>%\n  mutate(\n    jenks_group = cut(expec_vida, breaks = breaks$brks, include.lowest = TRUE)\n  )\n\nggplot(distritos, aes(fill = jenks_group)) +\n  geom_sf(linewidth = 0.1, color = \"gray80\") +\n  scale_fill_brewer(palette = \"BrBG\", name = \"Expectativa\\nde Vida\") +\n  ggtitle(\"Expectativa de Vida por Distrito\") +\n  theme_void() +\n  theme(\n    legend.title = element_text(hjust = 0.5, size = 10),\n    legend.position = c(0.8, 0.3)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}