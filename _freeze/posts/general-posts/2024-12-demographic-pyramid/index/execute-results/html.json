{
  "hash": "cb084bd3a2eab267d165de1cc72e7675",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Demographic Pyramids in R\"\ndate: \"2024-12-29\"\ndescription: \"\"\ncategories: ['ggplot2', 'data-visualization', 'english', 'tutorial-R']\nexecute:\n  warnings: false\n  message: false\ndraft: true\n---\n\n\n\n# Demographic Pyramids\n\nA **demographic pyramid** is a graphical representation of the age and gender distribution of a population. It typically shows the population in horizontal bars, with males represented on the left and females on the right. Each bar represents a specific age group, and the length of the bar indicates the number of people in that group. Demographic pyramids are widely used in demographic analysis to visualize the structure of a population, providing valuable insights into trends like population growth, aging, and gender distribution.\n\nThese pyramids are crucial for understanding the socio-economic dynamics of a country, as they highlight the proportions of young versus older populations and reveal patterns related to fertility rates, life expectancy, and migration. By analyzing demographic pyramids, policymakers, businesses, and researchers can make informed decisions related to healthcare, education, and workforce planning. In this tutorial, we will demonstrate how to create demographic pyramids using R, leveraging the WPP 2024 dataset to analyze population structures in countries like Pakistan, Brazil, Japan, and Ireland.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(wpp2024)\n\n# remotes::install_github(\"PPgp/wpp2024\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(popAge1dt)\n# Brazil, Ireland, Pakistan, Japan\n\ncountries <- data.table(\n  country_code = c(392, 586, 372, 76),\n  name = c(\"Japan\", \"Pakistan\", \"Ireland\", \"Brazil\")\n)\n\nsub <- popAge1dt[country_code %in% countries$country_code]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create age-group data.frames for merges\ndf_age_group <- function(age_min = 0, age_max = 90, group_interval = 5) {\n  # Age-group auxiliary data.frames\n  group <- seq(age_min, age_max, group_interval)\n  interval <- findInterval(0:150, group, rightmost.closed = FALSE)\n  # Text labels for each group\n  label <- paste(group, (group - 1)[-1], sep = \"-\")\n  label[length(label)] <- paste0(age_max, \"+\")\n  age_label <- rep(label, each = group_interval)\n  age_label <- c(age_label, rep(paste0(age_max, \"+\"), 151 - length(age_label)))\n  # 5 year age groups 0-4 to 90+\n  age_group <- data.frame(\n    age = 0:150,\n    age_group = interval,\n    age_label = factor(age_label)\n    #age_label = factor(age_label, levels = age_label[order(interval)])\n  )\n  \n  age_group <- age_group |> \n    dplyr::mutate(age_label = forcats::fct_reorder(age_label, age_group))\n  \n  return(age_group)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsub50 <- sub[year == 1950 & country_code == 392]\n\nsub50\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     country_code   name  year   age     popM     popF      pop\n            <int> <char> <int> <int>    <num>    <num>    <num>\n  1:          392  Japan  1950     0 1208.092 1148.878 2356.970\n  2:          392  Japan  1950     1 1174.236 1170.458 2344.694\n  3:          392  Japan  1950     2 1294.455 1290.571 2585.026\n  4:          392  Japan  1950     3 1278.061 1273.618 2551.679\n  5:          392  Japan  1950     4 1213.995 1204.389 2418.384\n ---                                                           \n 97:          392  Japan  1950    96    0.108    0.469    0.577\n 98:          392  Japan  1950    97    0.069    0.302    0.371\n 99:          392  Japan  1950    98    0.039    0.173    0.212\n100:          392  Japan  1950    99    0.018    0.082    0.100\n101:          392  Japan  1950   100    0.006    0.025    0.031\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim_age <- df_age_group(age_min = 0, age_max = 90, group_interval = 5)\n\ndim_age\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    age age_group age_label\n1     0         1       0-4\n2     1         1       0-4\n3     2         1       0-4\n4     3         1       0-4\n5     4         1       0-4\n6     5         2       5-9\n7     6         2       5-9\n8     7         2       5-9\n9     8         2       5-9\n10    9         2       5-9\n11   10         3     10-14\n12   11         3     10-14\n13   12         3     10-14\n14   13         3     10-14\n15   14         3     10-14\n16   15         4     15-19\n17   16         4     15-19\n18   17         4     15-19\n19   18         4     15-19\n20   19         4     15-19\n21   20         5     20-24\n22   21         5     20-24\n23   22         5     20-24\n24   23         5     20-24\n25   24         5     20-24\n26   25         6     25-29\n27   26         6     25-29\n28   27         6     25-29\n29   28         6     25-29\n30   29         6     25-29\n31   30         7     30-34\n32   31         7     30-34\n33   32         7     30-34\n34   33         7     30-34\n35   34         7     30-34\n36   35         8     35-39\n37   36         8     35-39\n38   37         8     35-39\n39   38         8     35-39\n40   39         8     35-39\n41   40         9     40-44\n42   41         9     40-44\n43   42         9     40-44\n44   43         9     40-44\n45   44         9     40-44\n46   45        10     45-49\n47   46        10     45-49\n48   47        10     45-49\n49   48        10     45-49\n50   49        10     45-49\n51   50        11     50-54\n52   51        11     50-54\n53   52        11     50-54\n54   53        11     50-54\n55   54        11     50-54\n56   55        12     55-59\n57   56        12     55-59\n58   57        12     55-59\n59   58        12     55-59\n60   59        12     55-59\n61   60        13     60-64\n62   61        13     60-64\n63   62        13     60-64\n64   63        13     60-64\n65   64        13     60-64\n66   65        14     65-69\n67   66        14     65-69\n68   67        14     65-69\n69   68        14     65-69\n70   69        14     65-69\n71   70        15     70-74\n72   71        15     70-74\n73   72        15     70-74\n74   73        15     70-74\n75   74        15     70-74\n76   75        16     75-79\n77   76        16     75-79\n78   77        16     75-79\n79   78        16     75-79\n80   79        16     75-79\n81   80        17     80-84\n82   81        17     80-84\n83   82        17     80-84\n84   83        17     80-84\n85   84        17     80-84\n86   85        18     85-89\n87   86        18     85-89\n88   87        18     85-89\n89   88        18     85-89\n90   89        18     85-89\n91   90        19       90+\n92   91        19       90+\n93   92        19       90+\n94   93        19       90+\n95   94        19       90+\n96   95        19       90+\n97   96        19       90+\n98   97        19       90+\n99   98        19       90+\n100  99        19       90+\n101 100        19       90+\n102 101        19       90+\n103 102        19       90+\n104 103        19       90+\n105 104        19       90+\n106 105        19       90+\n107 106        19       90+\n108 107        19       90+\n109 108        19       90+\n110 109        19       90+\n111 110        19       90+\n112 111        19       90+\n113 112        19       90+\n114 113        19       90+\n115 114        19       90+\n116 115        19       90+\n117 116        19       90+\n118 117        19       90+\n119 118        19       90+\n120 119        19       90+\n121 120        19       90+\n122 121        19       90+\n123 122        19       90+\n124 123        19       90+\n125 124        19       90+\n126 125        19       90+\n127 126        19       90+\n128 127        19       90+\n129 128        19       90+\n130 129        19       90+\n131 130        19       90+\n132 131        19       90+\n133 132        19       90+\n134 133        19       90+\n135 134        19       90+\n136 135        19       90+\n137 136        19       90+\n138 137        19       90+\n139 138        19       90+\n140 139        19       90+\n141 140        19       90+\n142 141        19       90+\n143 142        19       90+\n144 143        19       90+\n145 144        19       90+\n146 145        19       90+\n147 146        19       90+\n148 147        19       90+\n149 148        19       90+\n150 149        19       90+\n151 150        19       90+\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njpn50 <- merge(sub50, dim_age, by = \"age\")\n\n# jpn50[, age_label := factor(age_label, levels = unique(jpn50$age_label))]\n```\n:::\n\n\n\n### Preparing the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_jpn50 <- melt(\n  jpn50,\n  id.vars = \"age\",\n  measure.vars = c(\"popM\", \"popF\"),\n  variable.name = \"sex\",\n  value.name = \"pop\"\n)\n\nlong_jpn50[, trunc_age := age][age >= 100, trunc_pop := age]\nlong_jpn50 <- long_jpn50[, .(trunc_pop = sum(pop)), by = c(\"trunc_age\", \"sex\")]\nlong_jpn50[, y := trunc_pop][sex == \"popM\", y := -trunc_pop]\n```\n:::\n\n\n\n### Minimal plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(long_jpn50, aes(x = trunc_age, y = y)) +\n  geom_col(aes(fill = sex, color = sex)) +\n  coord_flip() +\n  guides(fill = \"none\", color = \"none\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, 10),\n    expand = c(0, 0)) +\n  scale_y_continuous(\n    breaks = seq(-1000, 1000, 250),\n    labels = abs(seq(-1000, 1000, 250))\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#1B9E77\", \"#7570B3\")\n\np <- ggplot(long_jpn50, aes(x = trunc_age, y = y)) +\n  geom_col(aes(fill = sex, color = sex)) +\n  coord_flip() +\n  guides(fill = \"none\", color = \"none\") +\n  scale_x_continuous(\n    breaks = seq(0, 100, 10),\n    expand = c(0, 0)) +\n  scale_y_continuous(\n    breaks = seq(-1000, 1000, 250),\n    labels = abs(seq(-1000, 1000, 250))\n  )\n\np + \n  geom_hline(yintercept = 0) +\n  scale_color_manual(values = colors) +\n  scale_fill_manual(values = colors) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(linetype = 2)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- round(sum(jpn50$pop) / 2)\ny <- cumsum(jpn50$pop)\ndist <- y - m\nmedian_age <- sum(dist < 0)\n\nround(matrixStats::weightedMedian(jpn50$age, jpn50$pop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n[1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\"\n[6] \"#E6AB02\" \"#A6761D\" \"#666666\"\n```\n:::\n\n\n\n## Grouped data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_jpn50 <- jpn50[, .(pop_male = sum(popM), pop_female = sum(popF)), by = \"age_label\"]\n\ngrouped_jpn50 <- melt(\n  grouped_jpn50,\n  id.vars = c(\"age_label\"),\n  measure.vars = c(\"pop_male\", \"pop_female\"),\n  variable.name = \"sex\",\n  value.name = \"pop\"\n  )\n\ngrouped_jpn50[, share := pop / sum(pop), by = \"sex\"]\ngrouped_jpn50[, share_total := pop / sum(pop)]\n\ngrouped_jpn50[, y := pop][sex == \"pop_male\", y := -pop]\ngrouped_jpn50[, y_share := share][sex == \"pop_male\", y_share := -share]\ngrouped_jpn50[, y_share_total := share_total][sex == \"pop_male\", y_share := -share_total]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(grouped_jpn50, aes(x = age_label, y = y)) +\n  geom_col(aes(fill = sex)) +\n  coord_flip() +\n  guides(fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njpn <- sub[year %in% c(1950, 1960, 1970, 1980) & country_code == 392]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njpn <- merge(jpn, dim_age, by = \"age\")\njpn <- jpn[,\n           .(pop_male = sum(popM), pop_female = sum(popF)),\n           by = c(\"year\", \"age_label\")]\n\njpn <- melt(jpn, id.vars = c(\"year\", \"age_label\"))\n\njpn[, share := value / sum(value), by = c(\"year\")]\n\nggplot(jpn, aes())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}