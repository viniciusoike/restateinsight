{
  "hash": "c4dc2dc9b840febaee6da763d4f44d3b",
  "result": {
    "markdown": "---\ntitle: \"Census Tracts in Brazil\"\ndate: \"2024-04-18\"\ncategories: ['censo', 'brasil', 'sao-paulo', 'data-science', 'data-visualization', 'mapas', 'leaflet', 'ggplot2']\ndescription: \"\"\nexecute: \n  message: false\n  warning: false\n  eval: false\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(leaflet)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(geobr)\nlibrary(showtext)\n```\n:::\n\n\n## Importing the data\n\n### Census Files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_dir <- \"/Volumes/T7 Touch/github/tidyibge/data-raw/dados_setores_censitarios\"\n\ndat <- data.table::fread(\n paste0(file_dir, \"/Agregados_preliminares_por_setores_censitarios_BR.zip\")\n)\n\nsetores <- sf::st_read(paste0(file_dir, \"/BR_Malha_Preliminar_2022.gpkg\"))\n```\n:::\n\n\n### Data Dictionary\n\nAn excel spreadsheet is available as a data dictionary at the IBGE website. Alternatively, the code below serves as a quick way to get this data into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndict <- tibble(\n  name_variable = paste0(\"v000\", 1:7),\n  desc_variable = c(\n    \"Total de Pessoas\", \"Total de Domicilios\", \"Total de Domicilios Particulares\",\n    \"Total de Domicilios Coletivos\", \"Media de moradores em domicilios particulares ocupados\",\n    \"Percentual de domicilios imputados\", \"Total de domicilios particulares ocupados\"),\n  short_name = c(\"pop\", \"dom\", \"dom_prt\", \"dom_col\", \"pop_dom\", \"share_dom_imput\", \"dom_prt_ocup\")\n)\n\nrename_cols <- dict$name_variable\nnames(rename_cols) <- dict$short_name\n\nvl_names <- c(\n  \"code_tract\" = \"CD_SETOR\",\n  \"area_km2\" = \"AREA_KM2\",\n  \"code_region\" = \"CD_REGIAO\",\n  \"name_region\" = \"NM_REGIAO\",\n  \"code_state\" = \"CD_UF\",\n  \"name_state\" = \"NM_UF\",\n  \"code_muni\" = \"CD_MUN\",\n  \"name_muni\" = \"NM_MUN\",\n  \"code_district\" = \"CD_DIST\",\n  \"name_district\" = \"NM_DIST\",\n  \"code_subdistrict\" = \"CD_SUBDIST\",\n  \"name_subdistrict\" = \"NM_SUBDIST\",\n  \"code_microregion\" = \"CD_MICRO\",\n  \"name_microregion\" = \"NM_MICRO\",\n  \"code_mesoregion\" = \"CD_MESO\",\n  \"name_mesoregion\" = \"NM_MESO\",\n  \"code_immediate\" = \"CD_RGI\",\n  \"name_immediate\" = \"NM_RGI\",\n  \"code_intermediate\" = \"CD_RGINT\",\n  \"name_intermediate\" = \"NM_RGINT\",\n  \"code_urban_concentration\" = \"CD_CONCURB\",\n  \"name_urban_concentration\" = \"NM_CONCURB\"\n)\n\nrename_cols <- c(rename_cols, vl_names)\n```\n:::\n\n\nUsing the `rename_cols` vector we can easily rename all column names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- dat %>%\n  rename(all_of(rename_cols)) %>%\n  select(\n    code_tract, code_muni, name_muni, code_region, name_region, code_state,\n    name_state, pop:dom_prt_ocup\n  )\n\nsetores <- setores %>%\n  rename(any_of(rename_cols))\n```\n:::\n\n\n# Census Tracts\n\nBroadly speaking, census tracts are small areas that exhibit similar socioeconomic and demographic patterns. In major urban settings, these are usually small areas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetores2000 <- read_census_tract(code_tract = \"all\", year = 2000, showProgress = FALSE)\nsetores2010 <- read_census_tract(code_tract = \"all\",year = 2010, showProgress = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(list(setores2000, setores2010, setores), nrow)\n\nsapply(list(setores2000, setores2010, setores), \\(x) length(unique(x$code_muni)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncuritiba_setores <- setores %>%\n  filter(code_muni == 4106902) %>%\n  mutate(across(pop:dom_prt_ocup, as.numeric)) %>%\n  mutate(\n    area_km2 = as.numeric(area_km2),\n    pop_dens_area = pop / area_km2,\n    pop_dens_hh = pop / dom_prt_ocup\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlabels <- sprintf(\n  \"<b>Code Tract<b/>: %s <br>\n  <b>Code Subdistrict<b/>: %s <br>\n  <b>Name Subdistrict<b/>: %s\",\n  curitiba_setores$code_tract,\n  curitiba_setores$code_subdistrict,\n  curitiba_setores$name_subdistrict\n)\n\nlabels <- lapply(labels, htmltools::HTML)\n\nleaflet(curitiba_setores) |> \n  addTiles() |> \n  addPolygons(weight = 2, fillColor = \"gray80\", color = \"#feb24c\", label = labels) |> \n  addProviderTiles(provider = \"CartoDB.Positron\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(curitiba_setores, aes(pop_dens_area, pop_dens_hh)) +\n  geom_jitter()\n\nggplot(curitiba_setores, aes(log(pop_dens_area))) +\n  geom_histogram()\n\nggplot(curitiba_setores, aes(pop_dens_hh)) +\n  geom_histogram()\n\nbreaks <- BAMMtools::getJenksBreaks(curitiba_setores$pop, k = 7)\n\nggplot(curitiba_setores) +\n  geom_sf(aes(fill = pop)) +\n  scale_fill_fermenter(breaks = breaks, direction = 1, palette = \"Spectral\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncuritiba_subdistritos <- curitiba_setores %>%\n  group_by(code_subdistrict, name_subdistrict) %>%\n  summarise(across(pop:dom_prt_ocup, sum))\n\nggplot(curitiba_subdistritos) +\n  geom_sf(aes(fill = pop))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncuritiba_setores %>%\n  mutate(trunc_dens = if_else(pop_dens_hh >= 5, 5, pop_dens_hh)) %>%\n  ggplot(aes(fill = trunc_dens)) +\n  geom_sf() +\n  scale_fill_fermenter(breaks = c(1, 1.5, 2, 2.5, 3, 3.5, 4, 5), direction = 1)\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5) %>%\n  ggplot(aes(log(area_km2 * 100), log(pop))) +\n  geom_point(shape = 21, color = \"#219ebc\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#ffb703\") +\n  theme_bw()\n\nggplot(curitiba_setores, aes(x = area_km2, y = pop)) +\n  geom_point()\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5, pop_dens_hh < 5) %>%\n  ggplot(aes(pop_dens_hh, log(pop_dens_area))) +\n  geom_point()\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5, pop_dens_hh < 5) %>%\n  mutate(scaled_pop_dens_area = as.numeric(scale(log(pop_dens_area)))) %>%\n  ggplot() +\n  geom_sf(aes(fill = scaled_pop_dens_area)) +\n  scale_fill_fermenter(\n    palette = \"RdBu\",\n    direction = 1,\n    breaks = c(-3, -1.5, -1, 0, 1, 1.5, 3)\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(tidyverse)\n\ndat <- read_csv2(\"/Volumes/T7 Touch/github/tidyibge/data-raw/dados_setores_censitarios/Agregados_preliminares_por_setores_censitarios_BR.zip\")\n\nfile_path <- \"/Volumes/T7 Touch/github/tidyibge/data-raw/dados_setores_censitarios/BR_Malha_Preliminar_2022.zip\"\n\nsetores <- st_read(\"/Volumes/T7 Touch/github/tidyibge/data-raw/dados_setores_censitarios/BR_Malha_Preliminar_2022.gpkg\")\n\n# V0001\tnumérico\t\tTotal de pessoas\n# V0002\tnumérico\t\tTotal de Domicílios (DPPO + DPPV + DPPUO + DPIO + DCCM + DCSM)\n# V0003\tnumérico\t\tTotal de Domicílios Particulares (DPPO + DPPV + DPPUO + DPIO)\n# V0004\tnumérico\t\tTotal de Domicílios Coletivos (DCCM + DCSM)\n# V0005\treal\t\tMédia de moradores em Domicílios Particulares Ocupados (Total pessoas em Domicílios Particulares Ocupados / DPPO + DPIO)\n# V0006\treal\t\tPercentual de Domicílios Particulares Ocupados Imputados (Total DPO imputados / Total DPO)\n# V0007\tnumérico\t\tTotal de Domicílios Particulares Ocupados (DPPO + DPIO)\n\n\ndict <- tibble(\n  name_variable = paste0(\"v000\", 1:7),\n  desc_variable = c(\n    \"Total de Pessoas\", \"Total de Domicilios\", \"Total de Domicilios Particulares\",\n    \"Total de Domicilios Coletivos\", \"Media de moradores em domicilios particulares ocupados\",\n    \"Percentual de domicilios imputados\", \"Total de domicilios particulares ocupados\"),\n  short_name = c(\"pop\", \"dom\", \"dom_prt\", \"dom_col\", \"pop_dom\", \"share_dom_imput\", \"dom_prt_ocup\")\n)\n\nrename_cols <- dict$name_variable\nnames(rename_cols) <- dict$short_name\n\nvl_names <- c(\n  \"code_tract\" = \"CD_SETOR\",\n  \"area_km2\" = \"AREA_KM2\",\n  \"code_region\" = \"CD_REGIAO\",\n  \"name_region\" = \"NM_REGIAO\",\n  \"code_state\" = \"CD_UF\",\n  \"name_state\" = \"NM_UF\",\n  \"code_muni\" = \"CD_MUN\",\n  \"name_muni\" = \"NM_MUN\",\n  \"code_district\" = \"CD_DIST\",\n  \"name_district\" = \"NM_DIST\",\n  \"code_subdistrict\" = \"CD_SUBDIST\",\n  \"name_subdistrict\" = \"NM_SUBDIST\",\n  \"code_microregion\" = \"CD_MICRO\",\n  \"name_microregion\" = \"NM_MICRO\",\n  \"code_mesoregion\" = \"CD_MESO\",\n  \"name_mesoregion\" = \"NM_MESO\",\n  \"code_immediate\" = \"CD_RGI\",\n  \"name_immediate\" = \"NM_RGI\",\n  \"code_intermediate\" = \"CD_RGINT\",\n  \"name_intermediate\" = \"NM_RGINT\",\n  \"code_urban_concentration\" = \"CD_CONCURB\",\n  \"name_urban_concentration\" = \"NM_CONCURB\"\n)\n\nrename_cols <- c(rename_cols, vl_names)\n\ndat <- dat %>%\n  rename(all_of(rename_cols)) %>%\n  select(\n    code_tract, code_muni, name_muni, code_region, name_region, code_state,\n    name_state, pop:dom_prt_ocup\n  )\n\nsetores <- setores %>%\n  rename(any_of(rename_cols))\n\n\n# Curitiba ----------------------------------------------------------------\n\n\ncuritiba_setores <- setores %>%\n  filter(code_muni == 3550308) %>%\n  mutate(across(pop:dom_prt_ocup, as.numeric)) %>%\n  mutate(\n    area_km2 = as.numeric(area_km2),\n    pop_dens_area = pop / area_km2,\n    pop_dens_hh = pop / dom_prt_ocup\n  )\n\nggplot(curitiba_setores, aes(pop_dens_area, pop_dens_hh)) +\n  geom_jitter()\n\nggplot(curitiba_setores, aes(log(pop_dens_area))) +\n  geom_histogram()\n\nggplot(curitiba_setores, aes(pop_dens_hh)) +\n  geom_histogram()\n\nbreaks <- BAMMtools::getJenksBreaks(curitiba_setores$pop, k = 7)\n\nggplot(curitiba_setores) +\n  geom_sf(aes(fill = pop)) +\n  scale_fill_fermenter(breaks = breaks, direction = 1, palette = \"Spectral\")\n\nbreaks <- BAMMtools::getJenksBreaks(curitiba_setores$pop_dens_hh, k = 7)\n\nggplot(curitiba_setores) +\n  geom_sf(aes(fill = pop_dens_hh)) +\n  scale_fill_fermenter(breaks = breaks, direction = 1, palette = \"Spectral\")\n\ncuritiba_setores %>%\n  arrange(desc(pop_dens_hh))\n\ncuritiba_subdistritos <- curitiba_setores %>%\n  group_by(code_subdistrict, name_subdistrict) %>%\n  summarise(across(pop:dom_prt_ocup, sum))\n\nggplot(curitiba_subdistritos) +\n  geom_sf(aes(fill = pop))\n\ncuritiba_setores %>%\n  mutate(trunc_dens = if_else(pop_dens_hh >= 5, 5, pop_dens_hh)) %>%\n  ggplot(aes(fill = trunc_dens)) +\n  geom_sf() +\n  scale_fill_fermenter(breaks = c(1, 1.5, 2, 2.5, 3, 3.5, 4, 5), direction = 1)\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5) %>%\n  ggplot(aes(log(area_km2 * 100), log(pop))) +\n  geom_point(shape = 21, color = \"#219ebc\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#ffb703\") +\n  theme_bw()\n\nggplot(curitiba_setores, aes(x = area_km2, y = pop)) +\n  geom_point()\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5, pop_dens_hh < 5) %>%\n  ggplot(aes(pop_dens_hh, log(pop_dens_area))) +\n  geom_point()\n\ncuritiba_setores %>%\n  filter(pop > 10, area_km2 < 2.5, pop_dens_hh < 5) %>%\n  mutate(scaled_pop_dens_area = as.numeric(scale(log(pop_dens_area)))) %>%\n  ggplot() +\n  geom_sf(aes(fill = scaled_pop_dens_area)) +\n  scale_fill_fermenter(\n    palette = \"RdBu\",\n    direction = 1,\n    breaks = c(-3, -1.5, -1, 0, 1, 1.5, 3)\n    )\n\nmapview::mapview(curitiba_setores, zcol = \"pop_dens_area\")\n\ncuritiba_setores %>%\n  arrange(desc(pop_dens_area))\n\n\nsantos_setoers <- setores %>%\n  filter(code_muni == 3548500)\n```\n:::\n\n\n# Setores Censitários\n\n## Panorama\n\n## Algumas novidades\n\n### Distritos em São Paulo\n\n### Maior resolução\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}