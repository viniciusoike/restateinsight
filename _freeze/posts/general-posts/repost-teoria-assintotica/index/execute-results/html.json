{
  "hash": "4801a9a6d77f1763ebb6aef638657cea",
  "result": {
    "markdown": "---\ntitle: \"Teoria Assintótica - LGN e TCL\"\ndate: '2019-03-23'\ndescription: 'Simulações de dois resultados centrais para a econometria: a Lei dos Grandes Números e o Teorema Central do Limite'\ncategories: ['econometria', 'tutorial-R', 'repost']\nimage: \"/static/repost-lgn.svg\"\nimage-alt: \"/static/repost-lgn.svg\"\nexecute: \n  warning: false\n  message: false\n---\n\n\n\n\n# Disclaimer\n\nEste é um repost antigo que fiz ainda na época do mestrado em economia. Apesar de intuitivo o código dos loops abaixo pode ser muito ineficiente. De maneira geral, `for`-loops são melhores do que loops feitos com `repeat`; melhor ainda é montar funções e usar `parallel::mclapply` ou `furrr::future_map`. Vale notar que é sempre bom pré-alocar (ou pré-definir) vetores antes de um `for`-loop\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Bom\nx <- vector(\"numeric\", 1000)\n# Ruim\nx <- c()\n```\n:::\n\n\n# Resultados assintóticos\n\n## Lei dos Grande Números\n\nA Lei dos Grandes Números (LGN) é um resultado assintótico bastante utilizado em econometria. Numa definição informal, a LGN nos diz que uma média amostral converge para para a média verdadeira dos dados. Isto é, se temos uma sequência de variáveis aleatórias $x_{1}, x_{2}, \\dots , x_{n}$ independentes e identicamente distribuídas:\n\n\n```{=tex}\n\\begin{equation}\n  \\frac{1}{n}\\sum_{i = 1}^{n} x_{1} \\to \\mathbb{E}(x)\n\\end{equation}\n```\n\nVamos criar uma amostra de cinco observações a partir de uma distribuição uniforme e tirar a média destas observações. Lembre-se que este distribuição depende de dois parâmetros, digamos $a$ e $b$. A esperança de uma uniforme é simplesmente $\\frac{b-a}{2}$. Podemos repetir este processo 1000 vezes e fazer um histograma dos resultados.\n\nNo código abaixo cria-se um vetor $x = (x_{1}, x_{2}, \\dots)$ genérico para armazenar valoes. O loop vai inserindo neste vetor a média de uma amostra de cinco observações a partir de uma distribuição uniforme com $a = 0$ e $b = 5$. A cada iteração do loop uma nova amostra é gerada e sua média é salva no vetor $x$ na posição $x_{i}$. Depois de gerar estes valores faz-se um histograma deles.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- vector(\"numeric\", length = 1000) # cria um vetor para armazenar os valores\n\nfor(i in 1:1000){ #loop para gerar os valores\n  # computa a media de uma amostra com 5 observacoes\n  x[i] <- mean(runif(n = 5, min = 0, max = 5)) \n\n}\n# Histograma\nhist(x, main = \"Histograma da media das amostras para n = 5\", xlab = \"\")\n# Linha vertical\nabline(v = 2.5, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\nPodemos fazer o mesmo para diferentes tamanhos de amostra. O código abaixo simplesmente faz um loop do código acima; o loop de fora varia `n`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # para exibir 4 graficos\n\nfor (n in c(10, 50, 100, 200)) { # loop para os diferentes tamanhos de amostra\n  x <- vector(\"numeric\", 1000)\n  for (i in 1:1000) { # mesmo loop que o anterior\n    \n    x[i] <- mean(runif(n, 0, 5))\n    \n  }\n    # Plotando o histograma\n    hist(x, main = paste(\"Histograma para n = \", n, sep = \"\"),\n       xlab = \"\")\n    abline(v = 2.5, col = \"red\")\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\nNote que as escalas dos gráficos são diferentes. Como era de se esperar, à medida que cresce o tamanho da amostra os valores vão se acumulando em torno da média verdadeira.\n\nOutra maneira de visualizar a LGN é fazendo o seguinte experimento: sorteie um número a partir de uma distribuição particular e grave seu valor. Agora sorteie dois números a partir da mesma distribuição, tire a média dos valores e grave o resultado. Agora faça o mesmo com três números, quatro números e assim por diante. O código abaixo faz isto para uma distribuição normal padrão.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- vector(\"numeric\", 200)\nfor (n in 1:200){\n\n\tx[n] <- mean(rnorm(n))\n\n}\n\nplot(x, type = \"l\", xlab = \"\", ylab = \"\")\nabline(h = 0, col = \"red\", lty = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\n## Teorema Central do Limite\n\nO segundo resultado importante que se usa em econometria é o Teorema Central do Limite (TCL). Existem algumas variantes do TCL que usam diferentes hipóteses, mas, novamente sendo informal, o TCL diz que se tivermos uma amostra qualquer $x_{1}, x_{2}, \\dots , x_{n}$, então $\\sqrt{n}\\frac{\\overline{x} - \\mu}{\\sigma}$ segue uma distribuição normal padrão, onde $\\overline{x}$ é a média amostral, $\\mathbb{E}(x) = \\mu$ e $\\text{Var}(x) = \\sigma^{2}$. Para visualizar este resultado podemos novamente fazer o experimento usando a distribuição uniforme.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # para exibir 4 graficos\nfor (n in c(10, 50, 100, 200)){ # loop para os diferentes tamanhos de amostra\n  for (i in 1:1000){ # mesmo loop que o anterior\n\n    x[i] <- mean(runif(n, 0, 10))\n    \n  }\n\n  x_normalizado <- sqrt(n)*(x - 5) / sqrt(100/12) # transforma a variavel\n  # plota o histograma usando a densidade da frequencia de cada observacao\n  hist(x_normalizado, main = paste(\"Histograma para n = \", n, sep =\"\"),\n       freq = F, xlab = \"\", breaks = 20)\n  # superimpoe uma curva normal padrao \n  lines(seq(-4, 4, by = .1), dnorm(seq(-4, 4, by = .1), 0, 1),\n        col = \"dodgerblue4\", lwd = 3)  \n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\nNote que este resultado vale para qualquer sequência de variáveis i.i.d (independentes e identicamente distribuídas). Considere, por exemplo, uma sequência de variáveis aleatórias independentes que segue uma distribuição beta.\n\n\n```{=tex}\n\\begin{equation}\nf(x) = \\frac{x^{\\alpha - 1}(1-x)^{\\beta - 1}}{B(\\alpha, \\beta)}\n\\end{equation}\n```\n\nonde $B(\\alpha, \\beta) = \\frac{\\Gamma(\\alpha)\\Gamma(\\beta)}{\\Gamma(\\alpha + \\beta)}$. A esperança da distribuição beta é dada por\n\n\n```{=tex}\n\\begin{equation}\n    \\mathbb{E}(x) = \\frac{\\alpha}{\\alpha + \\beta}\n\\end{equation}\n```\n\nUma distribuição beta depende de dois parâmetros. Usando a função `dbeta` podemos simular algumas pdfs.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\nNote que uma implicação do TCL é que, se $x_{i}$ for i.i.d. com esperança igual a $\\mu$, então\n\n\n```{=tex}\n\\begin{equation}\n    \\sqrt{N} \\left (  \\frac{1}{n}\\sum_{i = 1}^{N}x_{i} - \\mu \\right ) \\to \\text{N}(0, \\sigma^{2})\n\\end{equation}\n```\n\nIsto é, não precisamos saber qual a forma da variância da distribuição para aplicar o TCL. Os loops abaixo são essencialmente idênticos aos anteriores: a diferença é que desta vez os histogramas vão representar variáveis normais de média zero com variância $\\sigma^{2}$, que é aproximadamente igual à variância da distribuição beta.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # para exibir 4 graficos\nfor (n in c(10, 50, 100, 1000)){ # loop para os diferentes tamanhos de amostra\n \n  for (i in 1:1000){ # mesmo loop que o anterior\n\n    x[i] <- mean(rbeta(n, 2, 5))\n    \n  }\n\n  x_normalizado <- sqrt(n)*(x - 2/7) # transforma a variavel\n\n  hist(x_normalizado, main = paste(\"Histograma para n = \", n, sep =\"\"),\n       freq = F, xlab = \"\") # plota o histograma usando a densidade da frequencia de cada observacao\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n\n### Dois casos anômalos\n\nO TCL nos diz: \\begin{equation}\n    \\sqrt{n} \\left ( \\frac{\\overline{x} - \\mu}{\\sigma} \\right ) \\to N(0,1)\n\\end{equation} O termo $\\sqrt{n}$ é essencial para garantir este resultado. Qualquer transformação maior do que $\\sqrt{n}$ faz a variância crescer indefinidamente; qualquer transformação menor do que $\\sqrt{n}$ faz a variância diminuir indefinidamente, isto é, faz a distribuição colapsar num único ponto. Os dois códigos abaixo apresentam exemplos destes casos. O primeiro usa $n^{\\frac{3}{4}}$, o segundo $n^{\\frac{1}{4}}$.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # para exibir 4 graficos\nfor (n in c(10, 50, 100, 1000)){ # mesmo loop que o anterior\n  for (i in 1:1000){ \n    \n    x[i] <- mean(runif(n, 0, 10))\n    \n  }\n  \n  x_normalizado <- n^(3/4)*(x - 5)/sqrt(100/12) # muda apenas o expoente de n\n  hist(x_normalizado, main = paste(\"Histograma para n = \", n, sep =\"\"),\n       freq = F, xlab = \"\")\n  lines(seq(-4, 4, by = .1), dnorm(seq(-4, 4, by = .1), 0, 1),\n        col = \"dodgerblue4\", lwd = 3)\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.svg){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2)) # para exibir 4 graficos\nfor (n in c(10, 50, 100, 1000)){ # mesmo loop que o anterior\n  for (i in 1:1000){ \n    \n    x[i] <- mean(runif(n, 0, 10))\n    \n  }\n  \n  x_normalizado <- n^(1/4)*(x - 5)/sqrt(100/12) # muda apenas o expoente de n\n  hist(x_normalizado, main = paste(\"Histograma para n = \", n, sep =\"\"),\n       freq = F, xlab = \"\")\n  lines(seq(-4, 4, by = .1), dnorm(seq(-4, 4, by = .1), 0, 1),\n        col = \"dodgerblue4\", lwd = 3)\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.svg){fig-align='center' width=100%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}