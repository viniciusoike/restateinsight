{
  "hash": "be42f841d691a4b314f245d4f2e970a6",
  "result": {
    "markdown": "---\ntitle: \"Greatest Films of Alltime: another case of recency bias?\"\ndate: \"2024-04-17\"\ncategories: ['data-visualization', 'ggplot2', 'movies', 'bias']\ndescription: \"\"\nexecute: \n  message: false\n  warning: false\n  eval: false\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# imdb_bfi |> \n#   bind_rows() |> \n#   left_join(dim_title, by = c(\"name_film\" = \"primaryTitle\", \"year\" = \"startYear\")) |> \n#   left_join(ratings, by = \"tconst\") |> \n#   filter(is.na(averageRating))\n# \n# clean_bfi |> \n#   mutate(decade = year - (year %% 10)) |> \n#   ggplot(aes(x = decade)) +\n#   geom_bar()\n# \n# clean_imdb |> \n#   mutate(decade = year - (year %% 10)) |> \n#   ggplot(aes(x = decade)) +\n#   geom_bar()\n# \n# ggplot(clean_empire, aes(x = year)) +\n#   geom_histogram(bins = 12)\n# \n# \n# ggplot(clean_bfi, aes(x = year)) +\n#   geom_histogram(bins = 12, color = \"white\")\n# \n# ggplot(clean_imdb, aes(x = year)) +\n#   geom_histogram(bins = 15)\n# \n# ggplot(clean_variety, aes(x = year)) +\n#   geom_histogram(bins = 11, color = \"white\") +\n#   geom_hline(yintercept = 0) +\n#   theme_minimal() +\n#   theme(\n#     panel.grid.minor = element_blank()\n#   )\n# \n# hist(clean_variety$year, breaks = \"fd\")\n# \n# ggplot(clean_afi, aes(x = year)) +\n#   geom_histogram(bins = 15)\n# \n# ggplot(clean_empire, aes(x = year)) +\n#   geom_histogram(bins = 15)\n# \n# ggplot(clean_ebert, aes(x = year)) +\n#   geom_histogram(bins = 15)\n# \n# \n# \n# ggplot(clean_abracine, aes(x = year)) +\n#   geom_histogram(bins = 15)\n# \n# clean_empire |> \n#   mutate(\n#     decade = year - (year %% 10)\n#   ) |> \n#   ggplot(aes(x = decade, y = averageRating, group = decade)) +\n#   geom_violin()\n# \n# \n# clean_empire |> \n#   mutate(\n#     decade = year - (year %% 10)\n#   ) |> \n#   ggplot(aes(x = decade, y = averageRating, group = decade)) +\n#   geom_count()\n# \n# clean_empire |> \n#   filter(averageRating < 7) |> \n#   arrange(averageRating)\n\n\n# Colors\n# imdb = \"#deb522\"\n# variety = \"#1a282f\", \"#546464\"\n# bfi = \"#000000\"\n# empire = \"#ff0000\"\n# \n# imdb_afi <- imdb_afi[[1]]\n# \n# imdb_bfi <- bind_rows(imdb_bfi)\n# \n# dat <- list(imdb = clean_imdb, empire = imdb_empire, afi = imdb_afi, bfi = imdb_bfi, variety = imdb_variety, timeout = imdb_timeout)\n# \n# dat <- bind_rows(dat, .id = \"source\")\n# \n# dat <- dat |> \n#   mutate(\n#     source = factor(\n#       source,\n#       levels = c(\"afi\", \"bfi\", \"timeout\", \"variety\", \"empire\", \"imdb\"),\n#       labels = c(\"AFI\", \"BFI\", \"TimeOut\", \"Variety\", \"Empire\", \"IMDB\"))\n#   )\n# \n# highlight_low = dat |> \n#   group_by(source) |> \n#   slice_min(rating, n = 3)\n# \n# ggplot(dat, aes(source, rating, color = source)) +\n#   geom_jitter(width = 0.4, alpha = 0.75) +\n#   ggrepel::geom_text_repel(data = highlight_low, aes(label = name_film), size = 2) +\n#   guides(color = \"none\") +\n#   theme_minimal()\n# \n# \n# \n# library(ggridges)\n# \n# ggplot(dat, aes(year, source, fill = source)) +\n#   geom_density_ridges(alpha = 0.5) +\n#   scale_x_continuous(limits = c(1900, 2024)) +\n#   guides(fill = \"none\") +\n#   theme_minimal()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}