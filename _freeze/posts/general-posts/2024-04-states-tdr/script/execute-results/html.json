{
  "hash": "769dd104f09a42f4231897baf6cdf83e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"script\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(leaflet)\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: sysfonts\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: showtextdb\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nimport::from(sidrar, get_sidra)\nfont_add_google(\"Lato\", \"Lato\")\nshowtext_auto()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_border = geobr::read_state(showProgress = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing year/date 2010\n```\n\n\n:::\n\n```{.r .cell-code}\ndim_state = as_tibble(st_drop_geometry(state_border))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncodes = c(93070, 93084:93098, 49108, 49109, 60040, 60041, 6653)\n\ntab_population = sidrar::get_sidra(\n  9514,\n  variable = 93,\n  geo = \"State\",\n  classific = \"c287\",\n  category = list(codes)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_pop <- tab_population |> \n  janitor::clean_names() |> \n  as_tibble() |> \n  filter(sexo == \"Total\", forma_de_declaracao_da_idade == \"Total\") |> \n  select(\n    code_state = unidade_da_federacao_codigo,\n    age_group = idade,\n    count = valor\n    )\n\ntab_pop <- tab_pop |> \n  mutate(\n    code_state = as.numeric(code_state),\n    age_min = as.numeric(str_extract(age_group, \"\\\\d+\")),\n    age_group = factor(age_group),\n    age_group = forcats::fct_reorder(age_group, age_min),\n    age_ibge = case_when(\n      age_min < 15 ~ \"young\",\n      age_min >= 15 & age_min < 65 ~ \"adult\",\n      age_min >= 65 ~ \"elder\"\n    ),\n    factor(age_ibge, levels = c(\"young\", \"adult\", \"elder\"))\n  )\n\npop_state <- tab_pop %>%\n  summarise(\n    total = sum(count), .by = c(\"age_ibge\", \"code_state\")\n  ) %>%\n  pivot_wider(\n    id_cols = \"code_state\",\n    names_from = \"age_ibge\",\n    values_from = \"total\"\n    ) %>%\n  mutate(\n    dre = elder / adult * 100,\n    dry = young / adult * 100,\n    tdr = dre + dry\n  )\n\ntab_pop_state <- left_join(dim_state, pop_state, by = \"code_state\")\npop <- left_join(state_border, pop_state, by = \"code_state\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npal <- colorNumeric(\"Blues\", pop$tdr)\n\nbins <- quantile(pop$tdr, probs = seq(0, 1, 0.2))\nbins <- BAMMtools::getJenksBreaks(pop$tdr, k = 6)\npal <- colorBin(\n  palette = as.character(MetBrewer::met.brewer(\"Hokusai2\", 5)),\n  domain = pop$tdr,\n  bins = bins\n)\n\nlabels <- sprintf(\n  \"<b>RDT<b/>: %s <br>\n   <b>RDJ<b/>: %s <br>\n   <b>RDI<b/>: %s <br>\",\n  format(round(pop$tdr, 1), decimal.mark = \",\"),\n  format(round(pop$dry, 1), decimal.mark = \",\"),\n  format(round(pop$dre, 1), decimal.mark = \",\")\n)\n\nlabels <- lapply(labels, htmltools::HTML)\n\nmap <- leaflet(pop) %>%\n  addTiles() %>%\n  addPolygons(\n    weight = 2,\n    color = \"white\",\n    fillColor = ~pal(tdr),\n    fillOpacity = 0.9,\n    highlightOptions = highlightOptions(\n      color = \"#e09351\",\n      weight = 10,\n      fillOpacity = 0.8,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", \"font-family\" = \"Fira Code\")\n    )\n  ) %>%\n  addLegend(\n    pal = pal,\n    values = ~tdr,\n    labFormat = labelFormat(digits = 1),\n    title = \"RDT (2022)\",\n    position = \"bottomright\"\n  ) %>%\n  addProviderTiles(providers$CartoDB) %>%\n  setView(lng = -53.1873, lat = -10.58913, zoom = 4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: sf layer has inconsistent datum (+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs).\nNeed '+proj=longlat +datum=WGS84'\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(biscale)\nlibrary(patchwork)\ndep_biclass <- bi_class(pop, dre, dry, dim = 3, style = \"quantile\")\n\np_map <- ggplot(dep_biclass) +\n  geom_sf(\n    aes(fill = bi_class),\n    color = \"white\",\n    lwd = 0.2,\n    show.legend = FALSE\n    ) +\n  coord_sf(xlim = c(NA, -35)) +\n  bi_scale_fill(pal = \"GrPink\", dim = 3) +\n  bi_theme()\n\np_legend <- bi_legend(\n  pal = \"GrPink\",\n  dim = 3,\n  xlab = \"Idoso (%)\",\n  ylab = \"Jovem (%)\",\n  size = 8\n  )\n\nmap_states <- p_map + inset_element(p_legend, 0, 0.1, 0.35, 0.45)\n\nplot_map <- map_states + plot_annotation(\n  title = \"Razão de Dependência\",\n  subtitle = \"Razão de dependência jovem e idosa no Brasil (2022).\"\n) &\n  theme(\n    plot.title = element_text(size = 18, family = \"Lato\", hjust = 0.5),\n    plot.subtitle = element_text(family = \"Lato\", hjust = 0.5)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab <- tab_pop_state |> \n  mutate(population = young + adult + elder) |>\n  mutate(across(dre:tdr, ~.x * 100)) |> \n  select(name_state, dre, dry, tdr, population) |> \n  arrange(desc(tdr))\n\ntable_population <- gt(tab) |> \n  cols_label(\n    name_state = \"Nome UF\",\n    dre = \"Idoso\",\n    dry = \"Jovem\",\n    tdr = \"Total\",\n    population = \"População\"\n  ) |> \n  tab_spanner(label = \"Razão de Dependência\", 2:4) |> \n  fmt_number(2:4, decimals = 1, dec_mark = \",\") |> \n  fmt_number(5, decimals = 0, sep_mark = \".\") |> \n  opt_stylize(style = 6) |> \n  opt_table_font(font = google_font(\"Questrial\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_population <- function(state) {\n  \n  tab_population = sidrar::get_sidra(\n    9514,\n    variable = 93,\n    geo = \"State\",\n    geo.filter = list(\"State\" = state)\n  )\n  \n  return(tab_population)\n  \n}\n\nclean_population <- function(dat, group_var) {\n  \n  tab_pop = dat |> \n    janitor::clean_names() |> \n    tidyr::as_tibble() |> \n    dplyr::filter(\n      sexo != \"Total\",\n      forma_de_declaracao_da_idade == \"Total\",\n      idade_codigo %in% codes) |> \n    dplyr::select(\n      code_state = unidade_da_federacao_codigo,\n      age_group = idade,\n      sex = sexo,\n      count = valor\n      )\n\n  tab_pop <- tab_pop |> \n   dplyr::mutate(\n      code_state = as.numeric(code_state),\n      age_min = as.numeric(stringr::str_extract(age_group, \"\\\\d+\")),\n      age_group = factor(age_group),\n      age_group = forcats::fct_reorder(age_group, age_min),\n      sex = factor(sex,\n                   levels = c(\"Homens\", \"Mulheres\"),\n                   labels = c(\"Masculino\", \"Feminino\")\n                   )\n    ) |> \n    dplyr::mutate(share = count / sum(count) * 100, .by = \"sex\") |> \n    dplyr::mutate(share = dplyr::if_else(sex == \"Masculino\", -share, share))\n  \n  return(tab_pop)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstates <- c(13, 22, 43, 42)\nls_population <- lapply(states, get_population)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nConsidering all categories once 'classific' was set to 'all' (default)\nConsidering all categories once 'classific' was set to 'all' (default)\nConsidering all categories once 'classific' was set to 'all' (default)\nConsidering all categories once 'classific' was set to 'all' (default)\n```\n\n\n:::\n\n```{.r .cell-code}\nls_population <- lapply(ls_population, clean_population)\ndat_pop <- bind_rows(ls_population)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsub <- dplyr::filter(dat_pop, code_state %in% states)\n\nsub <- sub |> \n  mutate(\n    age_group_lump = if_else(age_min >= 80, \"80 ou mais\", age_group),\n    age_group_lump = str_remove(age_group_lump, \" anos\"),\n    age_group_lump = factor(age_group_lump),\n    age_group_lump = forcats::fct_reorder(age_group_lump, age_min),\n    .by = \"code_state\"\n    )\n\nsub <- left_join(sub, dim_state, by = \"code_state\")\n\nplot_pyramid <- ggplot(sub, aes(x = age_group_lump, y = share, fill = sex)) +\n  geom_col(alpha = 0.9) +\n  geom_hline(yintercept = 0) +\n  coord_flip() +\n  facet_wrap(vars(name_state)) +\n  scale_fill_manual(values = c(\"#e76f51\", \"#2a9d8f\")) +\n  labs(\n    title = \"Pirâmides demográficas\",\n    subtitle = \"\",\n    x = NULL,\n    y = \"(%)\") +\n  guides(fill = \"none\") +\n  theme_minimal(base_family = \"Lato\", base_size = 10) +\n  theme(\n    panel.grid.minor = element_blank(),\n    axis.text.y = element_text(hjust = 0.5)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndemographic <- get_sidra(7360, variable = 10609:10612, geo = \"State\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nConsidering all categories once 'classific' was set to 'all' (default)\n```\n\n\n:::\n\n```{.r .cell-code}\ntab_demographic <- demographic %>%\n  janitor::clean_names() %>%\n  as_tibble() %>%\n  select(\n    code_state = unidade_da_federacao_codigo,\n    year = ano_2,\n    variable = variavel,\n    value = valor\n  ) %>%\n  mutate(year = as.numeric(year), code_state = as.numeric(code_state))\n\ntab_demographic_state <- left_join(tab_demographic, dim_state, by = \"code_state\")\n\ndemographic <- get_sidra(7360, variable = 10609:10612, geo = \"Region\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nConsidering all categories once 'classific' was set to 'all' (default)\n```\n\n\n:::\n\n```{.r .cell-code}\ntab_demographic <- demographic %>%\n  janitor::clean_names() %>%\n  as_tibble() %>%\n  select(\n    code_region = grande_regiao_codigo,\n    year = ano_2,\n    variable = variavel,\n    value = valor\n  ) %>%\n  mutate(year = as.numeric(year), code_region = as.numeric(code_region))\n\ndim_region <- distinct(dim_state, code_region, name_region)\n\ntab_demographic_region <- left_join(tab_demographic, dim_region, by = \"code_region\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_region <- tab_demographic_region %>%\n  filter(year %in% seq(2010, 2060, 5), variable == \"Razão de dependência total\") %>%\n  pivot_wider(id_cols = \"name_region\", names_from = \"year\", values_from = \"value\") %>%\n  gt() %>%\n  cols_label(name_region = \"Região\") |> \n  fmt_number(2:12, decimals = 1) |> \n  opt_stylize(style = 6) |> \n  opt_table_font(font = google_font(\"Questrial\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_proj <- tab_demographic_region %>%\n  filter(variable != \"Índice de envelhecimento\") %>%\n  ggplot(aes(year, value, color = variable)) +\n  geom_line(lwd = 1) +\n  scale_color_manual(\n    name = \"\",\n    values = c(\"#264653\", \"#2a9d8f\", \"#e76f51\"),\n    labels = c(\"RDI\", \"RDJ\", \"RDT\")) +\n  facet_wrap(vars(name_region)) +\n  labs(\n    x = NULL,\n    y = NULL,\n    title = \"Razão de Dependência Brasil\",\n    subtitle = \"Evolução da Razão de Dependência no Brasil 2000-2060\",\n    caption = \"Fonte: IBGE (Projeções da População)\") +\n  theme_minimal(base_family = \"Lato\") +\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.position = \"top\",\n    strip.text = element_text(size = 10),\n    axis.text.x = element_text(angle = 90)\n    )\n```\n:::\n\n\n\n\n\n# Export\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexport <- list(\n  table_region = table_region,\n  table_population = table_population,\n  map = plot_map,\n  proj = plot_proj,\n  pyramid = plot_pyramid\n)\n\nreadr::write_rds(export, here::here(\"posts/general-posts/2024-04-states-tdr/files.rds\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}