{
  "hash": "8e3e575d3014309f6eb903bfbc11408d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Censo 2022 - Cidades e Regiões Metropolitanas\"\ndraft: true\nexecute: \n  eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sidrar)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(geobr)\nlibrary(sf)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(showtext)\nfont_add_google(\"Lato\", \"Lato\")\nshowtext::showtext_auto()\n\ntheme_vini <- theme_minimal(base_family = \"Lato\") +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(size = 18, color = \"gray10\"),\n    plot.subtitle = element_text(size = 10),\n    plot.caption = element_text(size = 8),\n    text = element_text(color = \"gray40\")\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop2022 <- get_sidra(4709, variable = 93, geo = \"City\")\n\npop_series <- get_sidra(\n  136,\n  variable = 93,\n  period = \"1991-2010\",\n  geo = \"City\",\n  classific = c(\"c86\"),\n  category = list(0)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_sidra <- function(df, name_value = \"pop\") {\n  \n  cols <- c(\"code_muni\" = \"municipio_codigo\", \"year\" = \"ano\", x = \"valor\")\n  names(cols)[3] <- name_value\n  \n  df %>%\n    as_tibble() %>%\n    janitor::clean_names() %>%\n    dplyr::select(dplyr::all_of(cols)) %>%\n    dplyr::mutate(dplyr::across(dplyr::everything(), as.numeric)) \n  \n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetro_region <- read_metro_area(showProgress = FALSE)\ndim_metro <- as_tibble(st_drop_geometry(metro_region))\ndim_metro <- select(dim_metro, code_muni, name_metro)\n\ncities <- read_municipality(year = 2020, showProgress = FALSE)\ndim_city <- as_tibble(st_drop_geometry(cities))\n\ndim_city <- left_join(dim_city, dim_metro, by = \"code_muni\")\n\n#> Remove an exception: Murici is mapped into two different metro regions\ndim_city <- dim_city |> \n  filter(!(code_muni == 2705507 & name_metro == \"RM da Zona da Mata\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncpop_series <- clean_sidra(pop_series)\ncpop2022 <- clean_sidra(pop2022)\n\ncensus_pop <- rbind(cpop_series, cpop2022)\ncensus_pop <- left_join(census_pop, dim_city, by = \"code_muni\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshorten_ride_names <- function(x) {\n  \n  ride_names <- c(\n  \"RIDE - Região Integrada de Desenvolvimento do Distrito Federal e Entorno\" = \"RIDE DF\",\n  \"RIDE TERESINA - Região Integrada de Desenvolvimento da Grande Teresina\" = \"RIDE Teresina\",\n  \"RIDE Petrolina/Juazeiro Região Administrativa Integrada de Desenvolvimento do Polo Petrolina/PE e Juazeiro/BA\" = \"RIDE Petrolina/Juazeiro\"\n)\n  \n  unname(ride_names[x])\n  \n}\n\ntbl_pop_metro <- census_pop %>%\n  filter(!is.na(name_metro)) %>%\n  mutate(\n    name_metro = str_remove(name_metro, \"RM d[a-z]\"),\n    name_metro = str_remove(name_metro, \"RM\"),\n    name_metro = str_replace(name_metro, \"Aglomeração Urbana\", \"AU\"),\n    name_metro = ifelse(\n      str_detect(name_metro, \"^RIDE\"),\n      shorten_ride_names(name_metro),\n      name_metro\n      ),\n    name_metro = str_trim(name_metro, side = \"both\")\n    ) %>%\n  summarise(\n    total = sum(pop, na.rm = TRUE),\n    state = paste(unique(abbrev_state), collapse = \", \"),\n    .by = c(\"year\", \"name_metro\")\n    ) %>%\n  arrange(year) %>%\n  arrange(name_metro)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_metros <- tbl_pop_metro %>%\n  filter(year == 2022, total > 5*1e5) %>%\n  pull(name_metro)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get only 500k cities and compute average geometric growth\ntbl_major <- tbl_pop_metro %>%\n  filter(name_metro %in% big_metros) %>%\n  # Not so trivial since year intervals are not the same between Census editions\n  group_by(name_metro) %>%\n  mutate(\n    tcg = (total / lag(total))^(1/(year - lag(year) + 1)) - 1,\n    total_round = round(total / 1000)) %>%\n  ungroup()\n\n# Convert to wider and arrange by 2022 population\ntbl_major_wide <- tbl_major %>%\n  pivot_wider(\n    id_cols = c(\"name_metro\", \"state\"),\n    names_from = \"year\",\n    values_from = c(\"total_round\", \"tcg\")\n    ) %>%\n  select(-tcg_1991) %>%\n  arrange(desc(total_round_2022))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntimeline <- tbl_major %>%\n  summarise(\n    TCG = list(na.omit(c(tcg * 100))),\n    .by = \"name_metro\"\n  )\n\ncol_names <- c(\n  \"Região Metro\", \"Estado\", \"1991\", \"2000\", \"2010\", \"2022\", \"1991/2000\", \"2000/2010\",\n  \"2010/2022\"\n)\n\nnames(col_names) <- names(tbl_major_wide)\n\ngtable_cities <- tbl_major_wide %>%\n  left_join(timeline) %>%\n  gt() %>%\n  cols_label(.list = col_names) %>%\n  tab_spanner(\"Populacao (Mil)\", columns = 3:6) %>%\n  tab_spanner(\"Crescimento (%)\", columns = 7:9) %>%\n  fmt_number(starts_with(\"total\"), decimals = 0, sep_mark = \".\") %>%\n  fmt_percent(starts_with(\"tcg\"), decimals = 2) %>%\n  ## Target Timeline column\n  gt_plt_sparkline(\n    column = TCG,\n    palette = c(\"gray30\", \"black\", \"firebrick\", \"dodgerblue\", \"lightgrey\"),\n    fig_dim = c(5, 28)\n  ) %>%\n  gt_theme_538() %>%\n  gt_color_rows(\n    columns = tcg_2022,\n    domain = seq(-0.005, 0.03, 0.005),\n    #domain = c(min(tbl_major_wide$tcg_2022), 0, max(tbl_major_wide$tcg_2022)),\n    palette = c(\n      \"#E63946\", \"#F1FAEE\", \"#CDEAE5\", \"#BBE2E1\", \"#A8DADC\", \"#90C3CD\", \"#77ABBD\",\n      \"#457B9D\", \"#31587A\", \"#1D3557\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop_sul <- get_sidra(\n  4709,\n  variable = c(93, 10605),\n  geo = \"City\",\n  geo.filter = list(\"Region\" = 4)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmuni <- read_municipality(year = 2020, showProgress = FALSE)\nmuni <- filter(muni, code_region == 4)\n\nstate <- read_state(showProgress = FALSE)\nstate <- filter(state, code_region == 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_pop_sul <- pop_sul %>%\n  janitor::clean_names() %>%\n  select(\n    code_muni = municipio_codigo,\n    name_series = variavel,\n    value = valor\n  ) %>%\n  mutate(\n    code_muni = as.numeric(code_muni),\n    name_series = ifelse(str_detect(name_series, \"^Pop\"), \"pop\", \"tgc\")\n    ) %>%\n  pivot_wider(\n    id_cols = \"code_muni\",\n    names_from = \"name_series\",\n    values_from = \"value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmuni <- left_join(muni, tbl_pop_sul, by = \"code_muni\")\n\nbks <- c(-2.23, -0.85, 0, 0.5, 1.2, 2.1, 3.5, 6.32)\nlvls <- findInterval(muni$tgc, bks, rightmost.closed = TRUE)\nfill_labels <- c(\n  \"-2.22, -0.85\", \"-0.85, 0\", \"0, 0.5\", \"0.5, 1.2\", \"1.2, \")\nfill_labels <- paste(bks, bks[-1], sep = \",\")\nfill_labels\n\nmuni <- muni %>%\n  mutate(\n    group_tgc = classInt::classify_intervals(tgc, n = 7, style = \"jenks\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = muni, aes(fill = as.factor(group_tgc)), color = \"gray50\") +\n  geom_sf(data = state, fill = NA, linewidth = 0.6) +\n  scale_fill_brewer(type = \"div\") +\n  theme_void()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndfsul <- as_tibble(st_drop_geometry(muni))\n\nggplot(dfsul, aes(x = log(pop), y = tgc)) +\n  geom_point(aes(color = abbrev_state), alpha = 0.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Domicílios particulares ocupados (total e média de moradores)\ndomi22 <- get_sidra(4712, variable = c(381, 5930), geo = \"City\")\n\n# Domicílios particulares ocupados\ndomi_series <- get_sidra(156, variable = 2048, geo = \"City\", period = \"1991-2010\")\n# Número médio de moradores (por domicílio particular ocupado)\ndomi_media <- get_sidra(156, variable = 619, geo = \"City\", period = \"1991-2010\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_cities <- census_pop |> \n  filter(year == 2022, pop > 8 * 1e5) |> \n  pull(code_muni)\n\ntab_big_cities <- census_pop |> \n  filter(code_muni %in% big_cities) |> \n  mutate(\n    chg_abs = pop - lag(pop),\n    chg_rel = pop / lag(pop) - 1,\n    .by = c(\"code_muni\", \"name_muni\")\n    )\n\ntab_chg <- tab_big_cities |> \n  filter(year == 2022) |> \n  mutate(\n    name_muni = str_replace(name_muni, \"São Bernardo Do Campo\", \"São Bernardo\"),\n    name_muni = str_replace(name_muni, \" De \", \" de \"),\n    name_muni = glue::glue(\"{name_muni} ({abbrev_state})\"),\n    name_muni = factor(name_muni),\n    name_muni = forcats::fct_reorder(name_muni, chg_abs),\n    chg_label = round(chg_abs / 1000),\n    chg_label = ifelse(chg_abs > 0, paste0(\"+\", chg_label), chg_label),\n    pos_text_y = ifelse(chg_abs > 0, chg_abs / 1000 + 20, chg_abs / 1000 - 20)\n  )\n\np_pop <- ggplot(tab_chg, aes(x = name_muni, y = chg_abs / 1000)) +\n  geom_col(fill = \"#1d3557\") +\n  geom_text(\n    aes(x = name_muni, y = pos_text_y, label = chg_label),\n    family = \"Lato\",\n    size = 3) +\n  coord_flip() +\n  labs(\n    title = \"Ganhos e perdas de população nas grandes cidades\",\n    subtitle = \"Mudança absoluta da população entre as cidades mais populosas do Brasil de 2010 a 2022.\",\n    x = NULL,\n    y = \"Milhares de Habitantes\",\n    caption = \"Fonte: CENSO 2022 (IBGE).\") +\n  theme_vini\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbreaks <- c(20000, 50000, 100000, 500000, 1000000)\n\nbb <- format(breaks, big.mark = \".\", scientific = FALSE)\nlabels <- paste(bb, bb[-1], sep = \"-\")\nlabels <- c(\" < 20.000\", labels[-length(labels)], \"> 1.000.000\")\nlabels <- str_remove_all(labels, \" \")\n\nlabels <- c(\n  \"Menos de 20 mil\", \"20 a 50 mil\", \"50 a 100 mil\", \"100 a 500 mil\",\n  \"500 mil a 1 milhão\", \"Mais de 1 milhão\"\n  )\n\ndflabel <- tibble(\n  pop_group = 0:5,\n  labels = c(\n    \"Menos de 20 mil\", \"20 a 50 mil\", \"50 a 100 mil\", \"100 a 500 mil\",\n    \"500 mil a 1 milhão\", \"Mais de 1 milhão\"\n    )\n  )\n\ncpop2022 <- cpop2022 |> \n  mutate(pop_group = findInterval(pop, breaks))\n\ntab_cities <- census_pop |> \n  filter(year %in% c(2010, 2022)) |> \n  mutate(\n    chg_abs = pop - lag(pop),\n    chg_rel = pop / lag(pop) - 1,\n    .by = c(\"code_muni\", \"name_muni\")\n    ) |> \n  left_join(select(cpop2022, code_muni, pop_group), by = \"code_muni\")\n\ntab_growth_cities <- tab_cities |> \n  filter(year == 2022) |> \n  mutate(is_growth = if_else(chg_abs > 0, 1L, 0L)) |> \n  summarise(\n    total_growth = sum(chg_abs, na.rm = TRUE),\n    total_wgt = weighted.mean(chg_rel, pop, na.rm = TRUE),\n    total = sum(is_growth, na.rm = TRUE),\n    count = n(),\n    share = total / count * 100,\n    .by = \"pop_group\"\n  ) |> \n  arrange(pop_group) |> \n  left_join(dflabel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_growth <- \n  ggplot(tab_growth_cities, aes(x = as.factor(pop_group), y = share)) +\n  geom_col(fill = \"#1d3557\") +\n  geom_text(\n    aes(label = paste0(round(share, 1), \"%\")),\n    color = \"white\",\n    family = \"Lato\",\n    nudge_y = -5) +\n  scale_x_discrete(labels = str_wrap(labels, width = 15)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_flip() +\n  labs(\n    title = \"Cidades de Médio e Médio-Grande Porte foram as que mais cresceram\",\n    subtitle = \"Percentual de cidades que tiveram crescimento populacional entre 2010 e 2022.\",\n    x = NULL,\n    y = NULL,\n    caption = \"Fonte: IBGE\") +\n  theme_vini + \n  theme(\n    panel.grid = element_blank(),\n    axis.text.y = element_text(size = 12, hjust = 0.5)\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_growth_cities <- tab_growth_cities |> \n  mutate(\n    name_label = c(\"Pequeno\", \"Pequeno\", \"Médio\", \"Médio\", \"Médio-Grande\", \"Mega-Cidades\")\n    ) |> \n  select(name_label, labels, count, total_growth, total_wgt)\n\ncol_names <- c(\n  \"Porte\", \"Habitantes\", \"Número\", \"Crescimento\\ntotal\", \"Crescimento\\nMédio (*)\"\n  )\n\nnames(col_names) <- names(tab_growth_cities)\n\ngt_growth <- tab_growth_cities %>%\n  gt() %>%\n  cols_label(.list = col_names) %>%\n  fmt_number(3:4, decimals = 0, sep_mark = \".\") %>%\n  fmt_percent(5) %>%\n  tab_caption(\"Crescimento populacional das cidades por porte.\") %>%\n  opt_stylize(style = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncities_loss <- tab_cities |> \n  slice_min(chg_abs, n = 9) |> \n  pull(code_muni)\n\ntab_losses <- census_pop |> \n  filter(code_muni %in% cities_loss) |> \n  mutate(\n    chg_abs = pop - lag(pop),\n    chg_rel = pop / lag(pop) - 1,\n    .by = c(\"code_muni\", \"code_region\")\n    ) |> \n  mutate(\n    name_muni = if_else(name_muni == \"Rio De Janeiro\", \"Rio de Janeiro\", name_muni)\n  )\n\nggplot(tab_losses, aes(x = year, y = chg_rel, fill = as.factor(code_region))) +\n  geom_col() +\n  geom_hline(yintercept = 0) +\n  facet_wrap(vars(name_muni)) +\n  scale_y_continuous(labels = scales::label_percent()) +\n  scale_fill_manual(values = c(\"#77ABBD\", \"#3B6A8C\", \"#A8DCCC\", \"#1D3557\")) +\n  labs(\n    title = \"População Caindo\",\n    subtitle = \"Variação relativa da população entre os períodos de Censo\",\n    x = NULL,\n    y = \"%\",\n    caption = \"Fonte: Censo 1991, 2000, 2010, 2022 (IBGE).\"\n  ) +\n  theme_vini +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    strip.background = element_rect(fill = NA, color = \"gray20\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_states <- census_pop |> \n  summarise(\n    total = sum(pop, na.rm = TRUE),\n    .by = c(\"year\", \"code_state\", \"name_state\")\n    ) |> \n  arrange(code_state) |> \n  mutate(\n    chg_abs = total - lag(total),\n    chg_rel = total / lag(total) - 1,\n    tgc = (total / lag(total))^(1/(year - lag(year))) - 1,\n    tgc = tgc * 100,\n    .by = c(\"code_state\")\n  )\n\nchg_state <- filter(tab_states, year == 2022)\n\nshp <- read_state(showProgress = FALSE)\n\nstate_chg <- left_join(shp, chg_state, by = c(\"code_state\"))\n\nstate_chg <- state_chg %>%\n  mutate(\n    label = format(round(tgc, 2), decimal.mark = \",\"),\n    label = paste0(label, \"%\"),\n    x = as.numeric(st_coordinates(st_centroid(.))[, 1]),\n    y = as.numeric(st_coordinates(st_centroid(.))[, 2]),\n    repel = if_else(code_state %in% c(24:28, 53), 1L, 0L),\n    group = findInterval(tgc, c(0.015, 0.5, 1, 1.5, 2))\n    )\n\n\nggplot(state_chg) +\n  geom_sf(aes(fill = as.factor(group))) +\n  geom_label(\n    data = filter(state_chg, repel == 0),\n    aes(x = x, y = y, label = label),\n    size = 3,\n    family = \"Lato\"\n    ) +\n  ggrepel::geom_label_repel(\n    data = filter(state_chg, repel == 1),\n    aes(x = x, y = y, label = label),\n    size = 3,\n    family = \"Lato\",\n    nudge_x = 3\n  ) +\n  scale_fill_manual(\n    name = \" 2010/2022 (%)\",\n    values = RColorBrewer::brewer.pal(6, \"PuBuGn\")[2:6],\n    labels = c(\"<0,15%\", \"0,15-0,5%\", \"0,5-1%\", \"1-2%\", \">2%\")\n  ) +\n  coord_sf(xlim = c(NA, -35)) +\n  ggthemes::theme_map(base_family = \"Lato\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(state_chg) +\n  geom_sf(aes(fill = tgc)) +\n  geom_label(\n    data = filter(state_chg, repel == 0),\n    aes(x = x, y = y, label = label),\n    size = 3,\n    family = \"Lato\"\n    ) +\n  ggrepel::geom_label_repel(\n    data = filter(state_chg, repel == 1),\n    aes(x = x, y = y, label = label),\n    size = 3,\n    family = \"Lato\",\n    nudge_x = 3\n  ) +\n  scale_fill_manual(\n    name = \" 2010/2022 (%)\",\n    values = RColorBrewer::brewer.pal(6, \"PuBuGn\")[2:6],\n    labels = c(\"<2,5%\", \"2,5-5%\", \"5-10%\", \"10-20%\", \">20%\")\n  ) +\n  coord_sf(xlim = c(NA, -35)) +\n  ggthemes::theme_map(base_family = \"Lato\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(metro_region$name_metro)\n\nsel_metro <- c(\n  \"RM São Paulo\",\n  \"RM Rio de Janeiro\",\n  \"RM Belo Horizonte\",\n  \"RIDE - Região Integrada de Desenvolvimento do Distrito Federal e Entorno\",\n  \"RM Porto Alegre\",\n  \"RM Fortaleza\",\n  \"RM Recife\",\n  \"RM Curitiba\",\n  \"RM Salvador\",\n  \"RM Campinas\"\n)\n\nsel_city_code <- metro_region |> \n  st_drop_geometry() |> \n  filter(name_metro %in% sel_metro) |> \n  pull(code_muni)\n\ntab_city_metro <- census_pop |> \n  filter(code_muni %in% sel_city_code) |> \n  mutate(\n    chg_rel = pop / lag(pop) - 1,\n    tgc = (pop / lag(pop))^(1/(year - lag(year))) - 1,\n    .by = \"code_muni\"\n  ) |> \n  pivot_wider(\n    id_cols = c(\"code_muni\", \"name_metro\"),\n    names_from = \"year\",\n    values_from = c(\"pop\", \"chg_rel\", \"tgc\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncities_metro <- inner_join(cities, tab_city_metro, by = \"code_muni\")\n\nbreaks <- BAMMtools::getJenksBreaks(dat$tgc_2022, k = 7)\nbreaks[3] <- 0\n# labels <- format(round(breaks * 100, 2), decimal.mark = \",\")\n# labels <- paste(labels, labels[-1], sep = \" a \")\n# labels <- c(labels[-length(labels)], \">4,8%\")\n\nlabels <- c(\n  \"-0,55 a -0,20\", \"-0,20 a 0,00\", \"0,00 a 0,81\", \"0,81 a  1,22\", \n  \"1,22 a 2,06\", \"2,06 a 4,79\", \"> 4,8%\")\n\ncities_metro <- cities_metro |> \n  dplyr::mutate(group = factor(findInterval(tgc_2022, breaks)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_metro <- function(metro, size = 3, legend = FALSE) {\n  \n  metro <- ifelse(!str_detect(metro, \"RM\"), paste(\"RM\", metro), metro)\n  \n  dat <- dplyr::filter(cities_metro, name_metro == metro)\n  \n  colors <- RColorBrewer::brewer.pal(11, \"BrBG\")[c(2, 4, 7, 8, 9, 10, 11)]\n  \n  plot <- \n    ggplot(dat) +\n    geom_sf(aes(fill = group), linewidth = 0.5, color = \"gray50\") +\n    geom_sf_label(\n      aes(label = name_muni),\n      size = size,\n      family = \"Lato\",\n      color = \"gray20\") +\n    ggtitle(label = metro) +\n    scale_fill_manual(\n    values = colors,\n    labels = labels\n  ) +\n    ggthemes::theme_map(base_family = \"Lato\") +\n    theme(\n      plot.title = element_text(\n        size = 18,\n        hjust = 0.5,\n        color = \"gray10\"\n        )\n      )\n  \n  if (!legend) {\n    plot <- plot + theme(legend.position = \"none\")\n  }\n  \n  return(plot)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_metro(\"Curitiba\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncities_shrink <- tab_big_cities |> \n  filter(year == 2022, chg_rel < 0) |> \n  pull(code_muni)\n\ntab_loss_cities <- tab_big_cities |> \n  filter(code_muni %in% cities_shrink, !is.na(chg_rel)) |>\n  mutate(is_growth = factor(if_else(chg_rel > 0, 1, 0)))\n\nplot_cities_loss <- \n  ggplot(tab_loss_cities, aes(x = year, y = chg_rel)) +\n  geom_hline(yintercept = 0, linewidth = 0.4) +\n  geom_point(color = \"#224B5E\") +\n  geom_line(color = \"#224B5E\") +\n  geom_text(\n    data = filter(tab_loss_cities, year == 2022),\n    aes(x = year, y = chg_rel, label = round(chg_rel * 100, 2)),\n    family = \"Lato\",\n    size = 3,\n    nudge_x = 3\n  ) +\n  facet_wrap(vars(name_muni)) +\n  scale_x_continuous(\n    breaks = c(1991, 2000, 2010, 2022),\n    limits = c(NA, 2027)\n    ) +\n  scale_y_continuous(labels = scales::label_percent()) +\n  labs(\n    title = \"Queda no crescimento em grandes cidades\",\n    subtitle = \"Cidades de grande porte que tiveram as maiores quedas populacionais no último Censo.\\nMudança percentual da população total.\",\n    x = NULL,\n    y = NULL,\n    caption = \"Fonte: IBGE (CENSO, 1991, 2000, 2010, 2022).\"\n  ) +\n  theme_vini\n```\n:::\n\n\n\n# Censo 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_pop\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cities_loss\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_growth\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngt_growth\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_growth_cities %>%\n  gt(id = \"table_growth\") %>%\n  cols_label(.list = col_names) %>%\n  fmt_number(3:4, decimals = 0, sep_mark = \".\") %>%\n  fmt_percent(5) %>%\n  tab_caption(\"Crescimento populacional das cidades por porte.\") %>%\n  opt_table_font(font = list(google_font(\"Lato\"))) %>%\n  opt_row_striping() %>%\n  opt_all_caps() %>%\n  tab_options(\n    table.border.top.width = px(3),\n    table.font.size = 12\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}