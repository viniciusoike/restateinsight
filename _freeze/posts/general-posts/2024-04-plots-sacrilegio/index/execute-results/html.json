{
  "hash": "b87a46753cf5a221bb01106fdd7343d8",
  "result": {
    "markdown": "---\ntitle: \"Os Pecados da Visualização de Dados\"\ndate: \"2024-04-09\"\ncategories: ['data-visualization', 'ggplot2', 'tutorial-R']\ndescription: \"Neste post apresento algumas recomendações práticas para melhorar uma visualização. O gráfico original é de um relatório do PewResearch Center sobre a religiosidade nos países.\"\nexecute: \n  message: false\n  warning: false\n---\n\n\n\n\n# Visualização de Dados\n\nComo parte do curso de [Inferência Estatística, oferecido pela Duke University](https://www.coursera.org/learn/inferential-statistics-intro), eu tive de ver um gráfico abominável. O gráfico abaixo faz parte de um press release da [WIN-Gallup International](https://github.com/OpenIntroStat/oilabs/blob/master/data-raw/atheism/Global_INDEX_of_Religiosity_and_Atheism_PR__6.pdf) de 2012. Ele mostra a relação entre religiosidade, mensurada por um índice que varia de 0 a 100, e o PIB per capita de vários países.\n\nA imagem abaixo foi retirada diretamente do press release e está em baixa resolução no original.\n\n![](images/Screenshot%202024-04-08%20at%2013.41.01.png){fig-align=\"center\"}\n\n## Os pecados da visualização de dados\n\nSão vários os erros da visualização acima. Talvez o mais sério seja a dificuldade de leitura dos dados. O tamanho da fonte utilizado, junto com a baixa resolução da imagem dificultam muito a interpretação dos números.\n\nO uso excessivo de cores e emojis prejudicam a leitura do gráfico e, eventualmente, até podem levar a interpretações tendenciosas dos dados. Há também um excesso de informação nos eixos do gráfico, com as setas e cifrões. Em resumo,\n\n-   Uso excessivo de cores, potencialmente tendenciosas.\n\n-   Dados estão obscuros, difícil de interpretar.\n\n-   Eixos com informação redundante.\n\n-   Emojis cafonas.\n\n# ggplot2\n\nVamos usar o `ggplot2` para redimir a visualização acima. Para aprender mais sobre ggplot2 vale consultar o meu [tutorial e série de posts sobre o assunto](https://restateinsight.com/ggplot2-tutorial).\n\n## Pacotes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(countries)\nlibrary(ggplot2)\n```\n:::\n\n\n\n\n## Dados\n\nPode-se conseguir os dados diretamente do [PDF linkado](https://github.com/OpenIntroStat/oilabs/blob/master/data-raw/atheism/Global_INDEX_of_Religiosity_and_Atheism_PR__6.pdf). Os dados brutos estão na tabela 1, página 10. Vale dizer que o press release inteiro é uma aula de como não fazer gráficos e tabelas. Para importar os dados dentro do R vale ver o [meu tutorial sobre como importar dados de PDF](https://restateinsight.com/posts/general-posts/2024-04-importando-pdf/). Outra opção, ainda mais simples é copiar os números e importar as linhas diretamente de um arquivo de texto.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrelig <- as_tibble(relig)\n\ntab_relig <- relig |> \n  mutate(\n    index = as.numeric(str_extract(value, \"\\\\d+\")),\n    country = str_trim(str_remove(value, \"\\\\d+\")),\n    iso3c = country_name(country)\n    ) |> \n  select(iso3c, index)\n```\n:::\n\n\nPode-se importar os dados de PIB per capita diretamente do Banco Mundial via pacote `WDI` com o código abaixo. Importa-se o PIB per capita, em paridade de poder de compra (PPP) a dólares constantes de 2017. Como a pesquisa da WIN-Gallup é de 2012, vamos filtrar os dados deste ano.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngdp <- WDI::WDI(indicator = \"NY.GDP.PCAP.PP.KD\")\n\ngdp <- gdp |>\n  as_tibble() |>\n  janitor::clean_names() |>\n  filter(year == 2012) |>\n  rename(gdppc = ny_gdp_pcap_pp_kd)\n\ndat <- left_join(tab_relig, gdp, by = \"iso3c\")\n```\n:::\n\n\n## Gráfico\n\nNa primeira versão do gráfico, usa-se `geom_label_repel` para plotar o nome dos países. Esta é uma solução para evitar o overplotting. Além disso, quebro alguns nomes maiores em duas linhas\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(dat, aes(gdppc, index)) +\n  geom_point() +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  ggrepel::geom_label_repel(aes(label = str_wrap(country, 12)), size = 2) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\nAjustando as escalas e os eixos é possível chegar num resultado bastante satisfatório.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(dat, aes(gdppc, index)) +\n  geom_point() +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  ggrepel::geom_label_repel(aes(label = str_wrap(country, 12)), size = 2) +\n  scale_x_continuous(\n    breaks = seq(10000, 60000, 10000),\n    labels = scales::label_number(big.mark = \",\")\n    ) +\n  scale_y_continuous(breaks = seq(0, 100, 20)) +\n  labs(\n    title = \"Religiosity Index and National Income\",\n    x = \"GDP per capita (PPP, US$ constant 2017)\",\n    y = \"Index (100 = most religious)\",\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\nUma solução alternativa para contornar os problemas de overplotting é de usar as siglas dos países, isto é, os códigos ISO3.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_main <- ggplot(dat, aes(gdppc, index)) +\n  geom_point() +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  ggrepel::geom_label_repel(aes(label = iso3c), size = 2) +\n  scale_x_continuous(\n    breaks = seq(10000, 60000, 10000),\n    labels = scales::label_number(big.mark = \",\")\n    ) +\n  scale_y_continuous(breaks = seq(0, 100, 20)) +\n  labs(\n    title = \"Religiosity Index and National Income\",\n    x = \"GDP per capita (PPP, US$ constant 2017)\",\n    y = \"Index (100 = most religious)\",\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank()\n  )\n\nplot_main\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\nPodemos também acrescentar o texto informativo, ao lado do gráfico usando o pacote `patchwork`. Pode-se ver o resultado final abaixo. O gráfico está mais sucinto e informativo, ainda que muito menos colorido.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\ntxt <- \"The Religiosity Index represents the percentage of the\npopulation who self-describe themselves as a 'religious person' in the question worded as: Irrespective of whether you attend a palce of\nworship or not, would you say you are a religious person, not a\nreligious person or a convinced atheist?\"\n\ndf = tibble(x = 1, y = 1, label = txt)\n\nplot_txt = ggplot(df) +\n  geom_text(aes(x, y, label = str_wrap(label, width = 30)), hjust = 0, size = 2) +\n  theme_void()\n\npanel = plot_main +\n  theme(\n    plot.margin = margin(5, 100, 5, 5)\n  ) +\n  inset_element(plot_txt, left = 0.75, 1, 1.3, 0.4)\n\npanel\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Um pouco a mais\n\nPara tornar o gráfico mais interessante podemos combinar o índice de religiosidade com as religiões predominantes de cada país. Os dados são da [PewResearch Center e foram coletados no meu outro post](https://restateinsight.com/posts/general-posts/2024-04-importando-pdf/). Pode-se também fazer o download deles diretamente do meu GitHub.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntab_religion = religion |> \n  filter(share == max(share), .by = \"iso3c\")\n\ndat = left_join(dat, tab_religion, by = \"iso3c\")\n\ndat = dat |> \n  filter(!is.na(religion)) |> \n  mutate(\n    religion = str_replace(religion, \"unaffil\", \"unaffiliated\"),\n    religion = str_to_title(religion),\n    religion = factor(religion)\n    )\n```\n:::\n\n\nPara minha visualização, vou mapear cada religião numa cor diferente. Além disso vou usar uma escala log para reduzir a variância (e distorção visual) dos dados de renda per capita. Por fim, vou mapear o tamanho da população de cada país para o tamanho de cada círculo.\n\nO resultado final é um gráfico bastante interessante. Vê-se que a maior parte dos países é predominantemente de religão cristã. Há um grupo de países cristãos europeus, de alta renda, e baixa religiosidade; um grupo de países cristãos latino-americanos, de renda média e alta religiosidade; e, finalmente, um grupo de países cristãos africanos, de renda bastante baixa, mas com religiosidade similar à do último grupo.\n\nEm poucos países, a maior parte da população não segue uma religião. É o caso, por exemplo, de Hong Kong, Japão e China. Vale notar que os principais países de maioria budista não foram contemplados no estudo da WIN-Gallup (e.g. Tailândia, Mianmar, etc.).\n\nPor fim, é interessante notar como a variabilidade da correlação entre as variáveis aumenta conforme aumenta a renda do país. Na faixa de 20 a 30 mil, por exemplo, temos a Polônia, de maioria cristã, com índice próximo de 80 e a Turquia, de maioria muçulmana, com índice próximo de 20.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(dat, aes(log(gdppc), index, color = religion)) +\n  ggrepel::geom_label_repel(aes(label = iso3c), size = 2) +\n  geom_point(aes(size = sqrt(country_population))) +\n  geom_hline(yintercept = 0) +\n  scale_x_continuous(\n    breaks = log(c(5000, 10000, 20000, 30000, 40000, 60000)),\n    labels = format(c(5000, 10000, 20000, 30000, 40000, 60000), big.mark = \",\")\n  ) +\n  scale_y_continuous(breaks = seq(0, 100, 20)) +\n  scale_color_manual(\n    name = \"Main Religion\",\n    values = MetBrewer::met.brewer(\"Hokusai1\", 5)\n  ) +\n  guides(size = \"none\") +\n  labs(\n    title = \"Religiosity Index and National Income\",\n    subtitle = \"Size of each circle is proportional to the country's population.\",\n    x = \"GDP per capita (PPP, US$ constant 2017)\",\n    y = \"Index (100 = most religious)\",\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){fig-align='center' width=90%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}