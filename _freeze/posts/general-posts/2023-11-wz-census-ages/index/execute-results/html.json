{
  "hash": "17580f499504159d9db20ff652c7eec8",
  "result": {
    "markdown": "---\ntitle: \"Aging Index in Brazil\"\ndate: \"2023-10-31\"\ncategories: [\"data-visualization\", \"ggplot2\", \"brazil\", \"census\"]\nexecute: \n  warning: false\n  message: false\n  eval: false\ndraft: true\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sidrar)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(showtext)\nfont_add_google(\"Roboto Mono\", \"Roboto Mono\")\nfont_add_google(\"Roboto Condensed\", \"Roboto Condensed\")\nshowtext_auto()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tabela 200 - População residente, por sexo, situação e grupos de idade\n# Tabela 1209 - População, por grupos de idade https://sidra.ibge.gov.br/tabela/1209\ncities_age <- readr::read_rds(\n  here::here(\"static/data/census_aging_index_city.rds\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbreaks <- c(0.25, 0.5, 0.75, 1) * 100\nlabels <- c(\n  \"Até 25\", \"25 a 50\", \"50 a 75\", \"75 a 100\", \"100 ou mais\"\n  )\n\nage_to_color <- Vectorize(function(x) {\n  \n  breaks <- c(0.25, 0.5, 0.75, 1) * 100\n  y <- findInterval(x, breaks)\n  \n  colors <- c(\n    \"#440154FF\", \"#3B528BFF\", \"#21908CFF\", \"#5DC863FF\", \"#FDE725FF\"\n    )\n  \n  colors[y + 1]\n  \n})\n\n\nlibrary(cowplot)\n\nmap_census <- function(year) {\n  \n  col_name <- glue::glue(\"age_index_{year}\")\n  \n  sub <- cities_age %>%\n    mutate(\n      color = age_to_color(.data[[col_name]]),\n      color = if_else(is.na(color), \"gray50\", color)\n      )\n  \n  ggplot(sub) +\n    geom_sf(aes(fill = color), lwd = 0.01, color = \"gray80\") +\n    scale_fill_identity() +\n    coord_sf(xlim = c(NA, -34.469802)) +\n    ggtitle(year) +\n    ggthemes::theme_map(base_family = \"Roboto Condensed\") +\n    theme(plot.title = element_text(hjust = 0.5, size = 18))\n  \n}\n\nm1 <- map_census(1991)\nm2 <- map_census(2000)\nm3 <- map_census(2010)\nm4 <- map_census(2022)\n\nbreaks <- c(0.25, 0.5, 0.75, 1) * 100\nlabels <- c(\"Até 25\", \"25 a 50\", \"50 a 75\", \"75 a 100\", \"100 ou mais\")\n\nmap_legend <- cities_age |> \n  mutate(\n    group = factor(findInterval(age_index_2022, breaks))\n    ) |> \n  ggplot(aes(fill = group)) +\n  geom_sf(color = \"gray80\") +\n  scale_fill_viridis_d(labels = labels, name = \"Índice de\\nEnvelhecimento\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfill_legend <- cowplot::get_legend(map_legend)\nplot_maps <- plot_grid(m1, m2, m3, m4, nrow = 2, ncol = 2)\nplot_compare <- plot_grid(plot_maps, fill_legend, ncol = 2, rel_widths = c(0.9, 0.1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap2022 <- cities_age |> \n  mutate(group = factor(findInterval(age_index_2022, breaks))) |> \n  ggplot() +\n    geom_sf(aes(fill = group), lwd = 0.01, color = \"gray80\") +\n    scale_fill_viridis_d(\n      name = \"Índice de\\nEnvelhecimento\",\n      labels = labels\n      ) +\n    coord_sf(xlim = c(NA, -34.469802)) +\n    ggtitle(\"Índice de Envelhecimento (2022)\") +\n    ggthemes::theme_map(base_family = \"Roboto Condensed\") +\n    theme(plot.title = element_text(hjust = 0.5, size = 18))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_cols <- cities_age |> \n  sf::st_drop_geometry() |> \n  mutate(is_old = if_else(age_index_2022 > 100, 1L, 0L)) |> \n  count(abbrev_state, is_old) |> \n  mutate(share = n / sum(n) * 100, .by = \"abbrev_state\") |> \n  filter(is_old == 1) |> \n  slice_max(share, n = 8) |> \n  mutate(\n    abbrev_state = factor(abbrev_state),\n    abbrev_state = forcats::fct_reorder(abbrev_state, share),\n    label = format(round(share, 1)),\n    label = paste0(label, \"%\")\n  ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_age_index <- ggplot(tbl_cols, aes(x = abbrev_state, y = share)) +\n  geom_col(width = 0.5, fill = \"#2a9d8f\") +\n  geom_text(\n    aes(x = abbrev_state, y = 0, label = abbrev_state),\n    family = \"Roboto Mono\",\n    nudge_x = 0.4,\n    size = 4,\n    hjust = 0\n  ) +\n  geom_text(\n    aes(x = abbrev_state, y = share, label = label),\n    nudge_y = -2.5,\n    color = \"white\",\n    family = \"Roboto Mono\",\n    size = 3\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    limits = c(0, 50),\n    labels = \\(x) paste0(x, \"%\")\n    ) +\n  labs(\n    title = \"Mais idosos do que jovens\",\n    subtitle = \"Percentual de cidades com mais pessoas acima de 65 anos do que pessoas de 14 anos ou menos (2022).\",\n    x = \"\",\n    y = \"Percentual de cidades (%)\",\n    caption = \"Fonte: IBGE (Censo 2022). @viniciusoike\"\n    ) +\n  coord_flip() +\n  theme_minimal(base_family = \"Roboto Condensed\", base_size = 12) +\n  theme(\n    plot.title = element_text(size = 18),\n    panel.grid.minor = element_blank(),\n    axis.text.y = element_blank(),\n    plot.margin = margin(0.25, 0.5, 0.25, 0.5, \"cm\"),\n    axis.line.x = element_line(),\n    axis.ticks.x = element_line(),\n    axis.text.x = element_text(size = 12)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_age_index\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}