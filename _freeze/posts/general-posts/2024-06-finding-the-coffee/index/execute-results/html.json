{
  "hash": "c98bf5babfa7a7a73425692aed53af46",
  "result": {
    "markdown": "---\ntitle: \"Finding all The Coffee shops in Brazil\"\ndate: \"2024-06-28\"\ndescription: \"In this post, I'll show you how to map every The Coffee shop in Brazil. I also show how to \"\ncategories: ['data-science', 'web-scrapping', 'finding-all', 'tutorial-r', 'brasil']\nexecute: \n  eval: false\n  message: false\n  warning: false\n---\n\n\n# Finding all The Coffee shops in Brazil\n\nIn this post, I'll show you how to map every The Coffee shop in Brazil in less time than it takes to brew a pot of coffee. All this from your laptop and without spending a dime.\n\nWe'll use only `R` and a few packages to webscrape all addresses.\n\n### What is The Coffee\n\nThe Coffee is a Japanese-inspired chain of coffee shops with a distinct minimalist visual identity. Their street shops are small, clean, and extremely space-efficient, sometimes taking less than 20 m2. Most shops are for takeout only, with limited seating. They offer a wide variety of high quality coffee at a premium price point.\n\nThe company was founded in Curitiba, at the southern part of Brazil, in 2018, and has expanded rapidly to 12 countries with over 200 shops. Their franchise model in part explains this strong expansion.\n\n<div>\n\nSimilar to Starbucks, product customization is a major selling point. Customers can choose and replace pretty much everything in their drinks, from adding and additional espresso shot, requiring an additional pump of chocolate syrup. Unlike Starbucks, however, most The Coffee shops are strictly to-go, or offer only minimal seating capacity. The Coffee (usually) doesn't aim at becoming a 3rd place, where friends meet to share a cup of coffee, or work colleagues schedule a meeting. That said, there are exceptions and some shops do include tables and even\n\nThe Coffee also strays away from the traditional friendly-neighborhood barista and instead focuses on a more technological approach. Customers mainly interact with a tablet that displays the menu and all customization choices. Friendly chatter is optional, as a customer can get in, get his coffee without exchanging any words with the barista.\n\n</div>\n\n# Webscraping\n\nWe'll leverage the power of R, an open-source programming language that's widely used in data science. Using R offers numerous advantages: itâ€™s free, the code can be reused and adapted to various contexts, and its strong emphasis on reproducibility ensures that your analyses can be replicated by others.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(rvest)\nlibrary(sf)\n\nimport::from(tidygeocoder, geocode)\nimport::from(purrr, map, map2)\nimport::from(tidyr, unnest)\n```\n:::\n\n\n## Finding the data\n\nThe data is extracted from [The Coffee's website](https://thecoffee.jp). There is no single recipe or approach for webscraping: each website is organized differently, though there are patterns. In the case of The Coffee, units are separated by country and city; additionally each unit is identified by a name and has an address\n\n### The website\n\nThe site presents every unit by country and city. The print below shows an example unit in Belo Horizonte, Brazil.\n\n![](/static/images/coffeeshops/tcf_site.png){fig-align=\"center\"}\n\n![](/static/images/coffeeshops/tcf_inspect.png){fig-align=\"center\"}\n\n### Using R\n\nThe code below\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Base url \nbase_url <- \"https://thecoffee.jp/shortcut/brasil\"\n# Parse HTML\npage_list_brazil <- xml2::read_html(base_url)\n\n# Gets the urls for all cities in Brazil\n\npage_list_cities <- page_list_brazil |> \n  html_elements(xpath = \"//div/ul/li/a\") |> \n  html_attr(\"href\")\n\npage_list_cities <- page_list_cities[str_detect(page_list_cities, \"brasil/\")]\n\nurl_cities <- str_c(base_url, str_remove(page_list_cities, \"shortcut/brasil/\"))\n```\n:::\n\n\nThe code below is a function the scrapes the information of all shops for a given url of a city. The output is a simple `data.frame`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscrape_the_coffee <- function(url) {\n  \n  # Parse the html\n  page <- xml2::read_html(url)\n  # Find the the name of the shop\n  coffee_shop_name <- page |> \n    rvest::html_elements(xpath = \"//div/ul/li/div/div/a/h4\") |> \n    rvest::html_text()\n  # Find the address of the shop\n  address_list <- page |> \n    rvest::html_elements(xpath = \"//div/ul/li/div/div/a/p\") |> \n    rvest::html_text()\n  # Remove shops that are not open yet\n  address_list <- address_list[!str_detect(address_list, \"coming soon\")]\n  street_name <- address_list[seq(1, length(address_list), 2)]\n  city_name <- address_list[2]\n  \n  full_address <- paste(street_name, city_name)\n\n  # Store results in a tibble\n  out <- tibble::tibble(\n    name = coffee_shop_name,\n    address = full_address,\n    street_name = street_name,\n    city_name = city_name\n  )\n  \n  return(out)\n\n}\n```\n:::\n\n\n### Functional approach\n\nThe simplest approach to implement this funtion is applying it over a vector with all urls for all cities. This approach is usually safer and quicker and can be scalled with parallel processing (e.g. `parallel::mclapply`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scrape all cities\ncoffee_locations <- map(url_cities, scrape_the_coffee)\nnames(coffee_locations) <- url_cities\ndat <- bind_rows(coffee_locations, .id = \"url\")\n```\n:::\n\n\n### Loop approach\n\n\n::: {.cell}\n\n```{.r .cell-code}\npb <- txtProgressBar(min = 1, max = length(url_cities), style = 3)\nls <- vector(\"list\", length(url_cities))\n\nfor (i in seq_along(url_cities)) {\n  \n  url <- url_cities[i]\n  current_city <- basename(url)\n  message(\"Scraping data for: \", current_city)\n  ls[[i]] <- scrape_the_coffee(url)\n  setTxtProgressBar(pb, i)\n  Sys.sleep(runif(1, min = 1, max = 5))\n  \n}\n```\n:::\n\n\n### Cleaning the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunnabreviate <- function() {\n  c(\"Av\\\\.\" = \"Avenida\",\n    \"Al\\\\.\" = \"Alameda\",\n    \"R\\\\.\"  = \"Rua\",\n    \"Dr\\\\.\" = \"Doutor\",\n    \"Visc\\\\.\" = \"Visconde\",\n    \"Pres\\\\.\" = \"Presidente\",\n    \"Mal\\\\.\" = \"Marechal\")\n}\n\ndat <- dat |> \n  mutate(\n    city_name = str_remove(city_name, \" - Brasil\"),\n    address = str_replace_all(address, unnabreviate()),\n    country = \"Brasil\"\n    )\n```\n:::\n\n\n### Geocoding\n\nGeocoding the data is fairly straightforward. I use the Google Maps API via the `tidygeocoder` package to find the corresponding lat/lng pair for each address.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Geocode using Maps API\ncoffee <- tidygeocoder::geocode(\n  dat,\n  address = address,\n  method = \"google\"\n  )\n\n# Convert to spatial data.frame\nshops <- st_as_sf(\n  coffee,\n  coords = c(\"long\", \"lat\"),\n  crs = 4326,\n  remove = FALSE\n  )\n```\n:::\n\n\n## Results\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"gzfbrhkull\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#gzfbrhkull table {\n  font-family: 'Open Sans', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gzfbrhkull thead, #gzfbrhkull tbody, #gzfbrhkull tfoot, #gzfbrhkull tr, #gzfbrhkull td, #gzfbrhkull th {\n  border-style: none;\n}\n\n#gzfbrhkull p {\n  margin: 0;\n  padding: 0;\n}\n\n#gzfbrhkull .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gzfbrhkull .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gzfbrhkull .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gzfbrhkull .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gzfbrhkull .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gzfbrhkull .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gzfbrhkull .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #0076BA;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gzfbrhkull .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #0076BA;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gzfbrhkull .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gzfbrhkull .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gzfbrhkull .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gzfbrhkull .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gzfbrhkull .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gzfbrhkull .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: middle;\n}\n\n#gzfbrhkull .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gzfbrhkull .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gzfbrhkull .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gzfbrhkull .gt_stub {\n  color: #333333;\n  background-color: #89D3FE;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gzfbrhkull .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gzfbrhkull .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gzfbrhkull .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gzfbrhkull .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gzfbrhkull .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gzfbrhkull .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_grand_summary_row {\n  color: #333333;\n  background-color: #D5D5D5;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gzfbrhkull .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_striped {\n  background-color: #EDF7FC;\n}\n\n#gzfbrhkull .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#gzfbrhkull .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gzfbrhkull .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gzfbrhkull .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gzfbrhkull .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gzfbrhkull .gt_left {\n  text-align: left;\n}\n\n#gzfbrhkull .gt_center {\n  text-align: center;\n}\n\n#gzfbrhkull .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gzfbrhkull .gt_font_normal {\n  font-weight: normal;\n}\n\n#gzfbrhkull .gt_font_bold {\n  font-weight: bold;\n}\n\n#gzfbrhkull .gt_font_italic {\n  font-style: italic;\n}\n\n#gzfbrhkull .gt_super {\n  font-size: 65%;\n}\n\n#gzfbrhkull .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gzfbrhkull .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gzfbrhkull .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gzfbrhkull .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gzfbrhkull .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gzfbrhkull .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gzfbrhkull .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <caption>The Coffee shops, major cities</caption>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"City\">City</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"# Shops\"># Shops</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Share BR (%)\">Share BR (%)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left\">SÃ£o Paulo</td>\n<td headers=\"n\" class=\"gt_row gt_right\">53</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right\">26.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left gt_striped\">Curitiba</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">29</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right gt_striped\">14.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left\">BrasÃ­lia</td>\n<td headers=\"n\" class=\"gt_row gt_right\">21</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right\">10.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left gt_striped\">Rio de Janeiro</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">13</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right gt_striped\">6.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left\">Fortaleza</td>\n<td headers=\"n\" class=\"gt_row gt_right\">10</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right\">5.00%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left gt_striped\">Porto Alegre</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">9</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right gt_striped\">4.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left\">FlorianÃ³polis</td>\n<td headers=\"n\" class=\"gt_row gt_right\">6</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right\">3.00%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left gt_striped\">VitÃ³ria</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">5</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right gt_striped\">2.50%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left\">Campinas</td>\n<td headers=\"n\" class=\"gt_row gt_right\">4</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right\">2.00%</td></tr>\n    <tr><td headers=\"city_name\" class=\"gt_row gt_left gt_striped\">Belo Horizonte</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">3</td>\n<td headers=\"share_brasil\" class=\"gt_row gt_right gt_striped\">1.50%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleaflet(shops) %>%\n  addTiles() %>%\n  addMarkers(label = ~name) %>%\n  addProviderTiles(\"CartoDB\") %>%\n  setView(lng = -46.65590, lat = -23.561197, zoom = 12)\n```\n:::\n\n\n## Get Google Maps ratings\n\n[Starbucks post](https://restateinsight.com/posts/general-posts/2024-07-finding-starbucks/#google-places)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncur_shops <- filter(shops, city_name == \"Curitiba\")\n\nget_ratings <- function(lat, lng) {\n  \n  location <- c(lat, lng)\n  places <- google_places(\"The Coffee\", location = location, radius = 10)\n  res <- places$results\n  \n  subres <- res %>%\n    unnest(cols = \"geometry\") %>%\n    unnest(cols = \"location\") %>%\n    select(\n      business_status, name, formatted_address, rating, user_ratings_total,\n      lat, lng\n    )\n  \n}\n\nratings <- map2(cur_shops$lat, cur_shops$long, get_ratings)\n\ndat_ratings <- ratings |> \n  bind_rows() |> \n  distinct() |> \n  filter(str_detect(name, \"^The Coffee\"))\n\ndat_ratings <- dat_ratings |> \n  mutate(\n    street_name = str_extract(formatted_address, \"^[^,]+\"),\n    street_name = str_replace_all(street_name, unnabreviate()),\n    street_name = stringi::stri_trans_general(street_name, \"latin-ascii\"),\n    street_number = as.numeric(str_extract(formatted_address, \"(?<=, )\\\\d+(?=\\\\b)\"))\n  )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-ad40750021efeee3d8c1\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ad40750021efeee3d8c1\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[-25.4325732,-25.4348424,-25.4430439,-25.4376472,-25.4384237,-25.4339534,-25.4357532,-25.432109,-25.4431255,-25.430572,-25.4289674,-25.445209,-25.4090219,-25.4295421,-25.4351398,-25.4501064,-25.4258236,-25.417535,-25.4335315,-25.4180373,-25.4483892,-25.4311071,-25.4179311,-25.4128421,-25.4129983,-25.4176941,-25.428672,-25.40504,-25.4303474,-25.4681559],[-49.2811883,-49.277973,-49.29084779999999,-49.2827132,-49.2789094,-49.2893225,-49.2871215,-49.27350879999999,-49.2853708,-49.2920136,-49.2938673,-49.2872582,-49.265494,-49.2656275,-49.3167883,-49.2882057,-49.2627553,-49.2793946,-49.3009885,-49.2688903,-49.2852218,-49.2488726,-49.2634846,-49.26541539999999,-49.2579874,-49.2464684,-49.2147448,-49.250978,-49.324071,-49.2939267],[11,9,7,5,7,5,9,5,5,5,5,5,5,9,7,7,9,5,7,9,9,9,5,7,9,5,7,9,5,5],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":false,\"color\":[\"#7FB7D7\",\"#7FB7D7\",\"#FBC7AD\",\"#3E8BBF\",\"#BBD9E9\",\"#BBD9E9\",\"#3E8BBF\",\"#7FB7D7\",\"#1E61A5\",\"#BBD9E9\",\"#E6EFF4\",\"#BBD9E9\",\"#053061\",\"#7FB7D7\",\"#FBC7AD\",\"#3E8BBF\",\"#7FB7D7\",\"#FBC7AD\",\"#AB162A\",\"#7FB7D7\",\"#3E8BBF\",\"#1E61A5\",\"#3E8BBF\",\"#BBD9E9\",\"#BBD9E9\",\"#1E61A5\",\"#3E8BBF\",\"#3E8BBF\",\"#67001F\",\"#1E61A5\"],\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#7FB7D7\",\"#7FB7D7\",\"#FBC7AD\",\"#3E8BBF\",\"#BBD9E9\",\"#BBD9E9\",\"#3E8BBF\",\"#7FB7D7\",\"#1E61A5\",\"#BBD9E9\",\"#E6EFF4\",\"#BBD9E9\",\"#053061\",\"#7FB7D7\",\"#FBC7AD\",\"#3E8BBF\",\"#7FB7D7\",\"#FBC7AD\",\"#AB162A\",\"#7FB7D7\",\"#3E8BBF\",\"#1E61A5\",\"#3E8BBF\",\"#BBD9E9\",\"#BBD9E9\",\"#1E61A5\",\"#3E8BBF\",\"#3E8BBF\",\"#67001F\",\"#1E61A5\"],\"fillOpacity\":0.5},null,null,null,null,[\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 912\",\"<b> The Coffee Comendador <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 345\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.3 <br>\\n<b> No Ratings <\\/b> 58\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 30\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 67\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 13\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 136\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 47\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.9 <br>\\n<b> No Ratings <\\/b> 16\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 30\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.5 <br>\\n<b> No Ratings <\\/b> 17\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 38\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 5 <br>\\n<b> No Ratings <\\/b> 3\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 122\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.3 <br>\\n<b> No Ratings <\\/b> 59\",\"<b> The Coffee RepÃºblica Argentina <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 82\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 111\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.3 <br>\\n<b> No Ratings <\\/b> 9\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4 <br>\\n<b> No Ratings <\\/b> 71\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.7 <br>\\n<b> No Ratings <\\/b> 120\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 146\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.9 <br>\\n<b> No Ratings <\\/b> 139\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 36\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 79\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.6 <br>\\n<b> No Ratings <\\/b> 281\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.9 <br>\\n<b> No Ratings <\\/b> 27\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 64\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.8 <br>\\n<b> No Ratings <\\/b> 110\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 3.9 <br>\\n<b> No Ratings <\\/b> 11\",\"<b> The Coffee <\\/b> <br>\\n<b> Rating <\\/b>: 4.9 <br>\\n<b> No Ratings <\\/b> 43\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#67001F , #AB162A 9.0909090909091%, #EC9373 27.2727272727273%, #FAEAE1 45.4545454545455%, #BBD9E9 63.6363636363636%, #3E8BBF 81.8181818181818%, #053061 100%, #053061 \"],\"labels\":[\"4.0\",\"4.2\",\"4.4\",\"4.6\",\"4.8\",\"5.0\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":0.5,\"position\":\"topright\",\"type\":\"numeric\",\"title\":\"rating\",\"extra\":{\"p_1\":0.09090909090909098,\"p_n\":1},\"layerId\":null,\"className\":\"info legend\",\"group\":null}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]}],\"limits\":{\"lat\":[-25.4681559,-25.40504],\"lng\":[-49.324071,-49.2147448]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Merging with Census information\n\nThe code below shows how to gather census tract data for each The Coffee shop. Census tracts are the smallest administrative division that present socioeconomic and demographic data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Interpolation -------------------------------------------------------------\n\n## Functions ---------------------------------------------------------------\n\n# Creates a n minute walk isochrone around a point\nget_buffer <- function(point, radius = 5, simplified = FALSE) {\n  \n  stopifnot(length(radius) == 1 && is.numeric(radius))\n  \n  if (simplified) {\n    point |> \n      sf::st_transform(crs = 31982) |> \n      # Simplified assumption\n      sf::st_buffer(dist = ((1.5 - 1.2) / 2 + 1.2) * 60 * radius)\n  } else {\n    point |> \n      sf::st_transform(crs = 31982) |> \n      osrm::osrmIsochrone(breaks = radius, osrm.profile = \"foot\") |> \n      nngeo::st_remove_holes()\n  }\n  \n}\n\n# Interpolates an area with census tracts and aggregates population and households\ninterpolate_census <- function(census, target, variables = c(\"v0001\", \"v0003\")) {\n\n  if (st_crs(census) != st_crs(target)) {\n    warning(\"CRS mismatch\")\n    \n    census <- st_transform(census, crs = 31982)\n    target <- st_transform(target, crs = 31982)\n    \n  }\n\n  # Select variables\n  census <- dplyr::select(census, dplyr::all_of(variables))\n  # Interpolate areas\n  interp <- st_interpolate_aw(census, target, extensive = TRUE)\n  \n  return(interp)\n  \n}\n\n# Wrapper around get_buffer and interpolate_census\nfind_population <- function(shop, census, radius = 5, simplified = FALSE) {\n  \n  # Compute a 5-minute isochrone around\n  buffer <- get_buffer(shop, radius, simplified)\n  interpolated <- suppressWarnings(interpolate_census(census, buffer))\n  \n  return(interpolated)\n  \n}\n\n## Interpolate -------------------------------------------------------------\n\n# Uniquely identifies each shop\ncity_shops <- city_shops |> \n  mutate(shop_id = row_number())\n\n# To improve speed convert the full census data to 31982\ncity_census_utm <- st_transform(city_census, crs = 31982)\n\ncity_shops_census <- parallel::mclapply(\n  split(city_shops, city_shops$shop_id),\n  \\(x) find_population(x, census = city_census_utm)\n  )\n\ncity_shops_census <- bind_rows(city_shops_census, .id = \"shop_id\")\n\ncity_shops <- city_shops |> \n  mutate(shop_id = as.character(shop_id)) |> \n  left_join(st_drop_geometry(city_shops_census))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `curitiba_tcf_interpolate' from data source \n  `/Users/viniciusoike/Documents/GitHub/restateinsight/static/data/curitiba_tcf_interpolate.gpkg' \n  using driver `GPKG'\nSimple feature collection with 29 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -49.32655 ymin: -25.45011 xmax: -49.21461 ymax: -25.40498\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../../../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../../../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}