{
  "hash": "8c67f5252a27e55777b2727837d0d82c",
  "result": {
    "markdown": "---\ntitle: 'You need a map'\ndate: '2023-01-05'\ncategories: ['data visualization', 'ggplot2', 'turorial-R']\ndescription: \"Facets são pequenos gráficos que, lado a lado, ajudam a comparar várias informações ao mesmo tempo. Este post intermediário ensina a fazer gráficos de facets no R usando o ggplot2.\"\ndraft: true\n---\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(dplyr)\nsf::sf_use_s2(FALSE)\n\nrent <- readr::read_csv(here::here(\"posts/ggplot2-tutorial/rents_liberdade.csv\"))\ncem <- readr::read_csv(here::here(\"static/data/cem_imoveis.zip\"))\n```\n:::\n\n\n# Mapas\n\nEu começo este post com uma confissão: eu sofri muito até conseguir fazer mapas minimamente apresentáveis com o R. Há duas dificuldades bem sérias: primeiro, objetos geométricos são uma classe de objetos bastante complexa; segundo, há inúmeras convenções na elaboração de mapas que escapam completamente aos objetivos do economista.\n\nNo primeiro caso, o desafio é conseguir aprender o minimamente necessário para lidar com objetos espaciais. Neste sentido, não vou fingir que entendo o que significa CRS, EPSG, GDAL, etc. Apenas saiba que a Terra, infelizmente, não é plana, então é preciso sempre escolher algum tipo de projeção que mapeie nosso planeta tri-dimensional num plano bi-dimensional. Na prática, lembre-se dos números 4326, 4674 e 32722.\n\nFelizmente, existe o pacote {sf} que funciona como um `data.frame` com uma coluna especial chamada `geometry`. É possível ignorar a existência desta coluna e trabalhar normalmente com seus dados, usando todo o seu conhecimento acumulado previamente com dados tabulares convencionais.\n\nNo segundo caso, das convenções, novamente, não vou fingir que eu entendo algo sobre cartografia, que me interesse fazer mapas com uma escala, com uma seta indicando o norte, com linhas paralelas indicando meridianos, etc. Saiba que tudo isto é muito possível de ser feito dentro do R e que eu não faço isso.\n\nEste post é organizado em três blocos:\n\n# Quero apenas fazer um mapa interativo\n\nSe o seu objetivo é fazer um mapa interativo não use `ggplot`. Comece explorando o `leaflet`. Se o objetivo for menos visualização e mais \"ciência de dados\" e você não quer perder horas customizando cores no {leaflet} use o {tmap} ou {mapview}.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(leaflet)\n\nleaflet() %>%\n  addTiles() %>%\n  setView(lng = -46.6554, lat = -23.5651, zoom = 13)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-297fcae5fa0f7606eda1\" style=\"width:100%;height:444.96px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-297fcae5fa0f7606eda1\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]}],\"setView\":[[-23.5651,-46.6554],13,[]]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n# Mapas com ggplot2\n\n## Mapas sem objetos espaciais\n\nA abordagem mais simples para tratar dados espaciais é simplesmente tratá-los como dados tabulados quaisquer. Isto funciona perfeitamente bem para objetos geométricos na forma de pontos e linhas, mas torna-se impraticável no caso de polígonos.\n\nNo plano cartesiano, longitude e latitude são literalmente coordenadas; pode-se mapear estas coordenadas como pontos num gráfico de dispersão. No gráfico abaixo cada ponto é um imóvel, anunciado para aluguel. Você talvez possa argumentar que o gráfico abaixo não é um mapa, mas\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nA principal vantagem desta abordagem é que podemos aplicar todo o nosso conhecimento acumulado até agora.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_point(aes(color = log(rent))) +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_point() +\n  facet_wrap(vars(room))\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\nPodemos inclusive acrescentar algumas novas funções que desenham mapas de calor (contorno).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_density_2d() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_density_2d_filled() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-6-2.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_density_2d(aes(color = as.factor(studio))) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_density_2d_filled() +\n  theme(legend.position = \"none\") +\n  facet_wrap(vars(studio))\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-7-2.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_point() +\n  geom_density_2d_filled(alpha = 0.5) +\n  geom_density_2d() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Mapas com elementos de mapas\n\nPara introduzir os mapas com \"elementos de mapas\"\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(osmdata)\n\n## osmdata -----------------------------------------------------------------\n\n# Define bbox\nbbox <- getbb(\"Liberdade, São Paulo, Brazil\")\n# Base query\nqr <- opq(bbox)\n\n# Add feature requests to query\n\n# All roads\nqr_roads <- add_osm_feature(qr, key = \"highway\")\n# Only big roads\nqr_big_streets <- add_osm_feature(\n  qr,\n  key = \"highway\",\n  value = c(\"motorway\", \"primary\", \"motorway_link\", \"primary_link\")\n)\n# Only medium roads\nqr_med_streets <- add_osm_feature(\n  qr,\n  key = \"highway\",\n  value = c(\"secondary\", \"tertiary\", \"secondary_link\", \"tertiary_link\")\n)\n# Only small roads\nqr_small_streets <- add_osm_feature(\n  qr,\n  key = \"highway\",\n  value = c(\"residential\", \"living_street\", \"unclassified\", \"service\",\n            \"footway\")\n)\n# Download\nroads <- osmdata_sf(q = qr_roads)\nbig_streets <- osmdata_sf(q = qr_big_streets)\nmed_streets <- osmdata_sf(q = qr_med_streets)\nsmall_streets <- osmdata_sf(q = qr_small_streets)\n\ns1 <- big_streets$osm_lines %>%\n  st_transform(crs = 4674)\n\ns2 <- med_streets$osm_lines %>%\n  st_transform(crs = 4674)\n\ns3 <- small_streets$osm_lines %>%\n  st_transform(crs = 4674)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(\n    data = s1,\n    key_glyph = draw_key_rect,\n    size = 2\n  ) +\n  geom_sf(\n    data = s2,\n    key_glyph = draw_key_rect,\n    size = 0.6\n  ) +\n  geom_sf(\n    data = s3,\n    key_glyph = draw_key_rect,\n    size = 0.45\n  )\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = s1, key_glyph = draw_key_rect, size = 2) +\n  geom_sf(data = s2, key_glyph = draw_key_rect, size = 0.6) +\n  geom_sf(data = s3, key_glyph = draw_key_rect, size = 0.45) +\n  geom_point(\n    data = rent,\n    aes(x = house_lng, y = house_lat),\n    size = 0.4,\n    color = \"#023047\"\n  ) +\n  geom_density_2d(\n    data = rent,\n    aes(x = house_lng, y = house_lat)\n  ) +\n  labs(x = NULL, y = NULL) +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0)) +\n  cowplot::theme_nothing()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nborder <- geobr::read_municipality(3550308)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nDownloading: 770 B     \nDownloading: 770 B     \nDownloading: 1.2 kB     \nDownloading: 1.2 kB     \nDownloading: 1.8 kB     \nDownloading: 1.8 kB     \nDownloading: 1.9 kB     \nDownloading: 1.9 kB     \nDownloading: 1.9 kB     \nDownloading: 1.9 kB     \nDownloading: 2 kB     \nDownloading: 2 kB     \nDownloading: 3.1 kB     \nDownloading: 3.1 kB     \nDownloading: 4.4 kB     \nDownloading: 4.4 kB     \nDownloading: 15 kB     \nDownloading: 15 kB     \nDownloading: 28 kB     \nDownloading: 28 kB     \nDownloading: 48 kB     \nDownloading: 48 kB     \nDownloading: 69 kB     \nDownloading: 69 kB     \nDownloading: 94 kB     \nDownloading: 94 kB     \nDownloading: 120 kB     \nDownloading: 120 kB     \nDownloading: 150 kB     \nDownloading: 150 kB     \nDownloading: 180 kB     \nDownloading: 180 kB     \nDownloading: 200 kB     \nDownloading: 200 kB     \nDownloading: 250 kB     \nDownloading: 250 kB     \nDownloading: 300 kB     \nDownloading: 300 kB     \nDownloading: 300 kB     \nDownloading: 300 kB     \nDownloading: 330 kB     \nDownloading: 330 kB     \nDownloading: 370 kB     \nDownloading: 370 kB     \nDownloading: 380 kB     \nDownloading: 380 kB     \nDownloading: 420 kB     \nDownloading: 420 kB     \nDownloading: 460 kB     \nDownloading: 460 kB     \nDownloading: 500 kB     \nDownloading: 500 kB     \nDownloading: 530 kB     \nDownloading: 530 kB     \nDownloading: 570 kB     \nDownloading: 570 kB     \nDownloading: 610 kB     \nDownloading: 610 kB     \nDownloading: 640 kB     \nDownloading: 640 kB     \nDownloading: 680 kB     \nDownloading: 680 kB     \nDownloading: 750 kB     \nDownloading: 750 kB     \nDownloading: 800 kB     \nDownloading: 800 kB     \nDownloading: 830 kB     \nDownloading: 830 kB     \nDownloading: 900 kB     \nDownloading: 900 kB     \nDownloading: 980 kB     \nDownloading: 980 kB     \nDownloading: 1 MB     \nDownloading: 1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.1 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.2 MB     \nDownloading: 1.3 MB     \nDownloading: 1.3 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \nDownloading: 1.4 MB     \n```\n:::\n\n```{.r .cell-code}\naltitude <- elevatr::get_elev_raster(border, z = 7, clip = \"bbox\")\nspo_alti <- raster::rasterToPolygons(altitude)\nspo_alti <- sf::st_as_sf(spo_alti)\nnames(spo_alti)[1] <- \"elevation\"\n\nspo_alti <- spo_alti %>%\n  st_transform(crs = 4674) %>%\n  st_intersection(border) %>%\n  filter(st_is_valid(.)) \n\njbreaks <- BAMMtools::getJenksBreaks(spo_alti$elevation, k = 7)\n\nbreaks <- c(100, 500, 750, 800, 850, 950, 1200)\n\nspo_alti <- spo_alti %>%\n  mutate(\n    jenks_group = cut(elevation, breaks)\n  )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncores <- c(\n  \"#ffd902\", \"#FFAB28\", \"#FF751B\", \"#FF3E0D\", \"#cc0600\", \"#a20d46\", \"#5f0078\"\n  )\n\nggplot() +\n  geom_sf(data = spo_alti, aes(color = jenks_group, fill = jenks_group)) +\n  scale_color_manual(values = cores) +\n  scale_fill_manual(values = cores)\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Roads and Borders\n\nborder <- geobr::read_municipality(3550308)\n\nbbox <- opq(bbox = \"São Paulo Brazil\")\n\nroads <- add_osm_feature(\n  bbox,\n  key = \"highway\",\n  value = c(\"primary\", \"secondary\", \"tertiary\", \"residential\")\n  )\n\nroads_sf <- osmdata_sf(roads)\nroads_sf <- roads_sf$osm_lines\nroads_sf <- st_transform(roads_sf, crs = 4674)\nroads_border <- st_intersection(roads_sf, border)\n\naltitude <- elevatr::get_elev_raster(border, z = 7, clip = \"bbox\")\npoly_alti <- raster::rasterToPolygons(altitude)\npoly_alti <- sf::st_as_sf(poly_alti)\nnames(poly_alti)[1] <- \"elevation\"\n\nspo_alti <- poly_alti %>%\n  st_transform(crs = 4674) %>%\n  st_intersection(roads_border) %>%\n  filter(st_is_valid(.)) \n\njbreaks <- BAMMtools::getJenksBreaks(spo_alti$elevation, k = 7)\n\nbreaks <- c(100, 500, 750, 800, 850, 950, 1200)\n\nspo_alti <- spo_alti %>%\n  mutate(\n    jenks_group = cut(elevation, breaks)\n  )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = spo_alti, aes(color = jenks_group, fill = jenks_group)) +\n  scale_fill_manual(\n    values = c(\n      \"#ffd902\", \"#FFAB28\", \"#FF751B\", \"#FF3E0D\", \"#cc0600\", \"#a20d46\",\n      \"#5f0078\")\n  )\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_bin2d()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-16-2.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncem2010 <- filter(cem, ano_lanc == 2010)\n\nggplot(cem2010, aes(x = lon, y = lat)) +\n  geom_point(aes(size = emp_unid, color = pc_m2_au), alpha = 0.5) +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rent, aes(x = house_lng, y = house_lat)) +\n  geom_point() +\n  geom_density_2d_filled(contour_var = \"count\") +\n  facet_wrap(vars(room))\n```\n\n::: {.cell-output-display}\n![](12-mapas_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Objetos espaciais\n\nApós um longo e raivoso interlúdio chegamos, finalmente, aos mapas estáticos que utilizam, de fato, objetos espaciais.\n\n### Unindo dados e shapes\n\n### Encontrando os pontos dentro dos polígonos\n",
    "supporting": [
      "12-mapas_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-1.12.4/jquery.min.js\"></script>\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-binding-2.1.2/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}